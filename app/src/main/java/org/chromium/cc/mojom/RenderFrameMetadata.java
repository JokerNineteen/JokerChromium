// RenderFrameMetadata.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     cc/mojom/render_frame_metadata.mojom
//

package org.chromium.cc.mojom;


public final class RenderFrameMetadata extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 112;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(112, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public int rootBackgroundColor;
    public org.chromium.gfx.mojom.Vector2dF rootScrollOffset;
    public boolean isScrollOffsetAtTop;
    public org.chromium.viz.mojom.Selection selection;
    public boolean isMobileOptimized;
    public boolean hasDelegatedInkMetadata;
    public float deviceScaleFactor;
    public org.chromium.gfx.mojom.Size viewportSizeInPixels;
    public org.chromium.viz.mojom.LocalSurfaceId localSurfaceId;
    public float pageScaleFactor;
    public float externalPageScaleFactor;
    public float topControlsHeight;
    public float topControlsShownRatio;
    public int newVerticalScrollDirection;
    public float bottomControlsHeight;
    public float bottomControlsShownRatio;
    public float topControlsMinHeightOffset;
    public float bottomControlsMinHeightOffset;
    public float minPageScaleFactor;
    public float maxPageScaleFactor;
    public boolean rootOverflowYHidden;
    public org.chromium.gfx.mojom.SizeF scrollableViewportSize;
    public org.chromium.gfx.mojom.SizeF rootLayerSize;
    public boolean hasTransparentBackground;

    private RenderFrameMetadata(int version) {
        super(STRUCT_SIZE, version);
    }

    public RenderFrameMetadata() {
        this(0);
    }

    public static RenderFrameMetadata deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static RenderFrameMetadata deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static RenderFrameMetadata decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        RenderFrameMetadata result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new RenderFrameMetadata(elementsOrVersion);
                {
                    
                result.rootBackgroundColor = decoder0.readInt(8);
                }
                {
                    
                result.isScrollOffsetAtTop = decoder0.readBoolean(12, 0);
                }
                {
                    
                result.isMobileOptimized = decoder0.readBoolean(12, 1);
                }
                {
                    
                result.hasDelegatedInkMetadata = decoder0.readBoolean(12, 2);
                }
                {
                    
                result.rootOverflowYHidden = decoder0.readBoolean(12, 3);
                }
                {
                    
                result.hasTransparentBackground = decoder0.readBoolean(12, 4);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, true);
                result.rootScrollOffset = org.chromium.gfx.mojom.Vector2dF.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                result.selection = org.chromium.viz.mojom.Selection.decode(decoder1);
                }
                {
                    
                result.deviceScaleFactor = decoder0.readFloat(32);
                }
                {
                    
                result.pageScaleFactor = decoder0.readFloat(36);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, false);
                result.viewportSizeInPixels = org.chromium.gfx.mojom.Size.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, true);
                result.localSurfaceId = org.chromium.viz.mojom.LocalSurfaceId.decode(decoder1);
                }
                {
                    
                result.externalPageScaleFactor = decoder0.readFloat(56);
                }
                {
                    
                result.topControlsHeight = decoder0.readFloat(60);
                }
                {
                    
                result.topControlsShownRatio = decoder0.readFloat(64);
                }
                {
                    
                result.newVerticalScrollDirection = decoder0.readInt(68);
                    org.chromium.viz.mojom.VerticalScrollDirection.validate(result.newVerticalScrollDirection);
                }
                {
                    
                result.bottomControlsHeight = decoder0.readFloat(72);
                }
                {
                    
                result.bottomControlsShownRatio = decoder0.readFloat(76);
                }
                {
                    
                result.topControlsMinHeightOffset = decoder0.readFloat(80);
                }
                {
                    
                result.bottomControlsMinHeightOffset = decoder0.readFloat(84);
                }
                {
                    
                result.minPageScaleFactor = decoder0.readFloat(88);
                }
                {
                    
                result.maxPageScaleFactor = decoder0.readFloat(92);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(96, false);
                result.scrollableViewportSize = org.chromium.gfx.mojom.SizeF.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(104, false);
                result.rootLayerSize = org.chromium.gfx.mojom.SizeF.decode(decoder1);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.rootBackgroundColor, 8);
        
        encoder0.encode(this.isScrollOffsetAtTop, 12, 0);
        
        encoder0.encode(this.isMobileOptimized, 12, 1);
        
        encoder0.encode(this.hasDelegatedInkMetadata, 12, 2);
        
        encoder0.encode(this.rootOverflowYHidden, 12, 3);
        
        encoder0.encode(this.hasTransparentBackground, 12, 4);
        
        encoder0.encode(this.rootScrollOffset, 16, true);
        
        encoder0.encode(this.selection, 24, false);
        
        encoder0.encode(this.deviceScaleFactor, 32);
        
        encoder0.encode(this.pageScaleFactor, 36);
        
        encoder0.encode(this.viewportSizeInPixels, 40, false);
        
        encoder0.encode(this.localSurfaceId, 48, true);
        
        encoder0.encode(this.externalPageScaleFactor, 56);
        
        encoder0.encode(this.topControlsHeight, 60);
        
        encoder0.encode(this.topControlsShownRatio, 64);
        
        encoder0.encode(this.newVerticalScrollDirection, 68);
        
        encoder0.encode(this.bottomControlsHeight, 72);
        
        encoder0.encode(this.bottomControlsShownRatio, 76);
        
        encoder0.encode(this.topControlsMinHeightOffset, 80);
        
        encoder0.encode(this.bottomControlsMinHeightOffset, 84);
        
        encoder0.encode(this.minPageScaleFactor, 88);
        
        encoder0.encode(this.maxPageScaleFactor, 92);
        
        encoder0.encode(this.scrollableViewportSize, 96, false);
        
        encoder0.encode(this.rootLayerSize, 104, false);
    }
}