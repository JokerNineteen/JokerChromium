// PaymentHandlerResponseCallback_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/payments/payment_app.mojom
//

package org.chromium.payments.mojom;


class PaymentHandlerResponseCallback_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<PaymentHandlerResponseCallback, PaymentHandlerResponseCallback.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<PaymentHandlerResponseCallback, PaymentHandlerResponseCallback.Proxy>() {

        @Override
        public String getName() {
            return "payments.mojom.PaymentHandlerResponseCallback";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, PaymentHandlerResponseCallback impl) {
            return new Stub(core, impl);
        }

        @Override
        public PaymentHandlerResponseCallback[] buildArray(int size) {
          return new PaymentHandlerResponseCallback[size];
        }
    };


    private static final int ON_RESPONSE_FOR_ABORT_PAYMENT_ORDINAL = 0;

    private static final int ON_RESPONSE_FOR_CAN_MAKE_PAYMENT_ORDINAL = 1;

    private static final int ON_RESPONSE_FOR_PAYMENT_REQUEST_ORDINAL = 2;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements PaymentHandlerResponseCallback.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void onResponseForAbortPayment(
boolean paymentAborted) {

            PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams _message = new PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams();

            _message.paymentAborted = paymentAborted;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ON_RESPONSE_FOR_ABORT_PAYMENT_ORDINAL)));

        }


        @Override
        public void onResponseForCanMakePayment(
CanMakePaymentResponse response) {

            PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams _message = new PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams();

            _message.response = response;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ON_RESPONSE_FOR_CAN_MAKE_PAYMENT_ORDINAL)));

        }


        @Override
        public void onResponseForPaymentRequest(
PaymentHandlerResponse response) {

            PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams _message = new PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams();

            _message.response = response;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ON_RESPONSE_FOR_PAYMENT_REQUEST_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<PaymentHandlerResponseCallback> {

        Stub(org.chromium.mojo.system.Core core, PaymentHandlerResponseCallback impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                PaymentHandlerResponseCallback_Internal.MANAGER, messageWithHeader);





                    case ON_RESPONSE_FOR_ABORT_PAYMENT_ORDINAL: {

                        PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams data =
                                PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams.deserialize(messageWithHeader.getPayload());

                        getImpl().onResponseForAbortPayment(data.paymentAborted);
                        return true;
                    }





                    case ON_RESPONSE_FOR_CAN_MAKE_PAYMENT_ORDINAL: {

                        PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams data =
                                PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams.deserialize(messageWithHeader.getPayload());

                        getImpl().onResponseForCanMakePayment(data.response);
                        return true;
                    }





                    case ON_RESPONSE_FOR_PAYMENT_REQUEST_ORDINAL: {

                        PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams data =
                                PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams.deserialize(messageWithHeader.getPayload());

                        getImpl().onResponseForPaymentRequest(data.response);
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), PaymentHandlerResponseCallback_Internal.MANAGER, messageWithHeader, receiver);








                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public boolean paymentAborted;

        private PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams() {
            this(0);
        }

        public static PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new PaymentHandlerResponseCallbackOnResponseForAbortPaymentParams(elementsOrVersion);
                    {
                        
                    result.paymentAborted = decoder0.readBoolean(8, 0);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.paymentAborted, 8, 0);
        }
    }



    
    static final class PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public CanMakePaymentResponse response;

        private PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams() {
            this(0);
        }

        public static PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new PaymentHandlerResponseCallbackOnResponseForCanMakePaymentParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.response = CanMakePaymentResponse.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.response, 8, false);
        }
    }



    
    static final class PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public PaymentHandlerResponse response;

        private PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams() {
            this(0);
        }

        public static PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new PaymentHandlerResponseCallbackOnResponseForPaymentRequestParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.response = PaymentHandlerResponse.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.response, 8, false);
        }
    }



}
