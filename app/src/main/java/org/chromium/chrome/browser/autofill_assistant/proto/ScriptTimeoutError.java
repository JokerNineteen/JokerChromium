// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.ScriptTimeoutError}
 */
public  final class ScriptTimeoutError extends
    com.google.protobuf.GeneratedMessageLite<
        ScriptTimeoutError, ScriptTimeoutError.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ScriptTimeoutError)
    ScriptTimeoutErrorOrBuilder {
  private ScriptTimeoutError() {
    scriptPath_ = "";
  }
  private int bitField0_;
  public static final int TIMEOUT_MS_FIELD_NUMBER = 1;
  private int timeoutMs_;
  /**
   * <pre>
   * Wait for that long before considering that scripts preconditions have timed
   * out and executing the script specified in script_path.
   * The script might be called more than once if the script terminates
   * successfully and again still nothing is found after timeout_ms.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   * @return Whether the timeoutMs field is set.
   */
  @java.lang.Override
  public boolean hasTimeoutMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Wait for that long before considering that scripts preconditions have timed
   * out and executing the script specified in script_path.
   * The script might be called more than once if the script terminates
   * successfully and again still nothing is found after timeout_ms.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   * @return The timeoutMs.
   */
  @java.lang.Override
  public int getTimeoutMs() {
    return timeoutMs_;
  }
  /**
   * <pre>
   * Wait for that long before considering that scripts preconditions have timed
   * out and executing the script specified in script_path.
   * The script might be called more than once if the script terminates
   * successfully and again still nothing is found after timeout_ms.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   * @param value The timeoutMs to set.
   */
  private void setTimeoutMs(int value) {
    bitField0_ |= 0x00000001;
    timeoutMs_ = value;
  }
  /**
   * <pre>
   * Wait for that long before considering that scripts preconditions have timed
   * out and executing the script specified in script_path.
   * The script might be called more than once if the script terminates
   * successfully and again still nothing is found after timeout_ms.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  private void clearTimeoutMs() {
    bitField0_ = (bitField0_ & ~0x00000001);
    timeoutMs_ = 0;
  }

  public static final int SCRIPT_PATH_FIELD_NUMBER = 2;
  private java.lang.String scriptPath_;
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   * @return Whether the scriptPath field is set.
   */
  @java.lang.Override
  public boolean hasScriptPath() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   * @return The scriptPath.
   */
  @java.lang.Override
  public java.lang.String getScriptPath() {
    return scriptPath_;
  }
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   * @return The bytes for scriptPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getScriptPathBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(scriptPath_);
  }
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   * @param value The scriptPath to set.
   */
  private void setScriptPath(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    scriptPath_ = value;
  }
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   */
  private void clearScriptPath() {
    bitField0_ = (bitField0_ & ~0x00000002);
    scriptPath_ = getDefaultInstance().getScriptPath();
  }
  /**
   * <pre>
   * The script to execute when the error happens.
   * </pre>
   *
   * <code>optional string script_path = 2;</code>
   * @param value The bytes for scriptPath to set.
   */
  private void setScriptPathBytes(
      com.google.protobuf.ByteString value) {
    scriptPath_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.ScriptTimeoutError}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ScriptTimeoutError)
      org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutErrorOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Wait for that long before considering that scripts preconditions have timed
     * out and executing the script specified in script_path.
     * The script might be called more than once if the script terminates
     * successfully and again still nothing is found after timeout_ms.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     * @return Whether the timeoutMs field is set.
     */
    @java.lang.Override
    public boolean hasTimeoutMs() {
      return instance.hasTimeoutMs();
    }
    /**
     * <pre>
     * Wait for that long before considering that scripts preconditions have timed
     * out and executing the script specified in script_path.
     * The script might be called more than once if the script terminates
     * successfully and again still nothing is found after timeout_ms.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     * @return The timeoutMs.
     */
    @java.lang.Override
    public int getTimeoutMs() {
      return instance.getTimeoutMs();
    }
    /**
     * <pre>
     * Wait for that long before considering that scripts preconditions have timed
     * out and executing the script specified in script_path.
     * The script might be called more than once if the script terminates
     * successfully and again still nothing is found after timeout_ms.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     * @param value The timeoutMs to set.
     * @return This builder for chaining.
     */
    public Builder setTimeoutMs(int value) {
      copyOnWrite();
      instance.setTimeoutMs(value);
      return this;
    }
    /**
     * <pre>
     * Wait for that long before considering that scripts preconditions have timed
     * out and executing the script specified in script_path.
     * The script might be called more than once if the script terminates
     * successfully and again still nothing is found after timeout_ms.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeoutMs() {
      copyOnWrite();
      instance.clearTimeoutMs();
      return this;
    }

    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @return Whether the scriptPath field is set.
     */
    @java.lang.Override
    public boolean hasScriptPath() {
      return instance.hasScriptPath();
    }
    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @return The scriptPath.
     */
    @java.lang.Override
    public java.lang.String getScriptPath() {
      return instance.getScriptPath();
    }
    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @return The bytes for scriptPath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getScriptPathBytes() {
      return instance.getScriptPathBytes();
    }
    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @param value The scriptPath to set.
     * @return This builder for chaining.
     */
    public Builder setScriptPath(
        java.lang.String value) {
      copyOnWrite();
      instance.setScriptPath(value);
      return this;
    }
    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearScriptPath() {
      copyOnWrite();
      instance.clearScriptPath();
      return this;
    }
    /**
     * <pre>
     * The script to execute when the error happens.
     * </pre>
     *
     * <code>optional string script_path = 2;</code>
     * @param value The bytes for scriptPath to set.
     * @return This builder for chaining.
     */
    public Builder setScriptPathBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setScriptPathBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ScriptTimeoutError)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "timeoutMs_",
            "scriptPath_",
          };
          java.lang.String info =
              "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
              "\u1008\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ScriptTimeoutError)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError DEFAULT_INSTANCE;
  static {
    ScriptTimeoutError defaultInstance = new ScriptTimeoutError();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ScriptTimeoutError.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptTimeoutError getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ScriptTimeoutError> PARSER;

  public static com.google.protobuf.Parser<ScriptTimeoutError> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

