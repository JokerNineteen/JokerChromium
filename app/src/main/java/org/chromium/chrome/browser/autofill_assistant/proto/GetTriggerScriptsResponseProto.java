// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * The RPC response to a |GetTriggerScriptsRequestProto|.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.GetTriggerScriptsResponseProto}
 */
public  final class GetTriggerScriptsResponseProto extends
    com.google.protobuf.GeneratedMessageLite<
        GetTriggerScriptsResponseProto, GetTriggerScriptsResponseProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.GetTriggerScriptsResponseProto)
    GetTriggerScriptsResponseProtoOrBuilder {
  private GetTriggerScriptsResponseProto() {
    triggerScripts_ = emptyProtobufList();
    additionalAllowedDomains_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    triggerConditionCheckIntervalMs_ = 1000;
  }
  private int bitField0_;
  public static final int TRIGGER_SCRIPTS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> triggerScripts_;
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> getTriggerScriptsList() {
    return triggerScripts_;
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProtoOrBuilder> 
      getTriggerScriptsOrBuilderList() {
    return triggerScripts_;
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  @java.lang.Override
  public int getTriggerScriptsCount() {
    return triggerScripts_.size();
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto getTriggerScripts(int index) {
    return triggerScripts_.get(index);
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProtoOrBuilder getTriggerScriptsOrBuilder(
      int index) {
    return triggerScripts_.get(index);
  }
  private void ensureTriggerScriptsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> tmp = triggerScripts_;
    if (!tmp.isModifiable()) {
      triggerScripts_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void setTriggerScripts(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
    value.getClass();
  ensureTriggerScriptsIsMutable();
    triggerScripts_.set(index, value);
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void addTriggerScripts(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
    value.getClass();
  ensureTriggerScriptsIsMutable();
    triggerScripts_.add(value);
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void addTriggerScripts(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
    value.getClass();
  ensureTriggerScriptsIsMutable();
    triggerScripts_.add(index, value);
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void addAllTriggerScripts(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> values) {
    ensureTriggerScriptsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, triggerScripts_);
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void clearTriggerScripts() {
    triggerScripts_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The available trigger scripts, if any.
   * </pre>
   *
   * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
   */
  private void removeTriggerScripts(int index) {
    ensureTriggerScriptsIsMutable();
    triggerScripts_.remove(index);
  }

  public static final int ADDITIONAL_ALLOWED_DOMAINS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> additionalAllowedDomains_;
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @return A list containing the additionalAllowedDomains.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getAdditionalAllowedDomainsList() {
    return additionalAllowedDomains_;
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @return The count of additionalAllowedDomains.
   */
  @java.lang.Override
  public int getAdditionalAllowedDomainsCount() {
    return additionalAllowedDomains_.size();
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param index The index of the element to return.
   * @return The additionalAllowedDomains at the given index.
   */
  @java.lang.Override
  public java.lang.String getAdditionalAllowedDomains(int index) {
    return additionalAllowedDomains_.get(index);
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the additionalAllowedDomains at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAdditionalAllowedDomainsBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        additionalAllowedDomains_.get(index));
  }
  private void ensureAdditionalAllowedDomainsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        additionalAllowedDomains_;  if (!tmp.isModifiable()) {
      additionalAllowedDomains_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param index The index to set the value at.
   * @param value The additionalAllowedDomains to set.
   */
  private void setAdditionalAllowedDomains(
      int index, java.lang.String value) {
    value.getClass();
  ensureAdditionalAllowedDomainsIsMutable();
    additionalAllowedDomains_.set(index, value);
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param value The additionalAllowedDomains to add.
   */
  private void addAdditionalAllowedDomains(
      java.lang.String value) {
    value.getClass();
  ensureAdditionalAllowedDomainsIsMutable();
    additionalAllowedDomains_.add(value);
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param values The additionalAllowedDomains to add.
   */
  private void addAllAdditionalAllowedDomains(
      java.lang.Iterable<java.lang.String> values) {
    ensureAdditionalAllowedDomainsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, additionalAllowedDomains_);
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   */
  private void clearAdditionalAllowedDomains() {
    additionalAllowedDomains_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of additional domains and subdomains. Trigger scripts will
   * automatically cancel the ongoing session if the user navigates away from
   * the original domain or any of the additional domains.
   * </pre>
   *
   * <code>repeated string additional_allowed_domains = 2;</code>
   * @param value The bytes of the additionalAllowedDomains to add.
   */
  private void addAdditionalAllowedDomainsBytes(
      com.google.protobuf.ByteString value) {
    ensureAdditionalAllowedDomainsIsMutable();
    additionalAllowedDomains_.add(value.toStringUtf8());
  }

  public static final int TIMEOUT_MS_FIELD_NUMBER = 3;
  private int timeoutMs_;
  /**
   * <pre>
   * The amount of time a trigger script may evaluate trigger conditions while
   * invisible. If a trigger script is invisible for this amount of time, it
   * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
   * If not specified, there is no automatic timeout.
   * This is only counted while no trigger script is shown, and the time is
   * reset on tab switch and whenever a trigger script is hidden. Note that this
   * only counts the time in-between checks, so the actual timeout will be
   * slightly longer.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 3;</code>
   * @return Whether the timeoutMs field is set.
   */
  @java.lang.Override
  public boolean hasTimeoutMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The amount of time a trigger script may evaluate trigger conditions while
   * invisible. If a trigger script is invisible for this amount of time, it
   * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
   * If not specified, there is no automatic timeout.
   * This is only counted while no trigger script is shown, and the time is
   * reset on tab switch and whenever a trigger script is hidden. Note that this
   * only counts the time in-between checks, so the actual timeout will be
   * slightly longer.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 3;</code>
   * @return The timeoutMs.
   */
  @java.lang.Override
  public int getTimeoutMs() {
    return timeoutMs_;
  }
  /**
   * <pre>
   * The amount of time a trigger script may evaluate trigger conditions while
   * invisible. If a trigger script is invisible for this amount of time, it
   * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
   * If not specified, there is no automatic timeout.
   * This is only counted while no trigger script is shown, and the time is
   * reset on tab switch and whenever a trigger script is hidden. Note that this
   * only counts the time in-between checks, so the actual timeout will be
   * slightly longer.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 3;</code>
   * @param value The timeoutMs to set.
   */
  private void setTimeoutMs(int value) {
    bitField0_ |= 0x00000001;
    timeoutMs_ = value;
  }
  /**
   * <pre>
   * The amount of time a trigger script may evaluate trigger conditions while
   * invisible. If a trigger script is invisible for this amount of time, it
   * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
   * If not specified, there is no automatic timeout.
   * This is only counted while no trigger script is shown, and the time is
   * reset on tab switch and whenever a trigger script is hidden. Note that this
   * only counts the time in-between checks, so the actual timeout will be
   * slightly longer.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 3;</code>
   */
  private void clearTimeoutMs() {
    bitField0_ = (bitField0_ & ~0x00000001);
    timeoutMs_ = 0;
  }

  public static final int TRIGGER_CONDITION_CHECK_INTERVAL_MS_FIELD_NUMBER = 4;
  private int triggerConditionCheckIntervalMs_;
  /**
   * <pre>
   * The amount of time between consecutive checks of trigger conditions. Should
   * not be too small to limit performance impact.
   * </pre>
   *
   * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
   * @return Whether the triggerConditionCheckIntervalMs field is set.
   */
  @java.lang.Override
  public boolean hasTriggerConditionCheckIntervalMs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The amount of time between consecutive checks of trigger conditions. Should
   * not be too small to limit performance impact.
   * </pre>
   *
   * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
   * @return The triggerConditionCheckIntervalMs.
   */
  @java.lang.Override
  public int getTriggerConditionCheckIntervalMs() {
    return triggerConditionCheckIntervalMs_;
  }
  /**
   * <pre>
   * The amount of time between consecutive checks of trigger conditions. Should
   * not be too small to limit performance impact.
   * </pre>
   *
   * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
   * @param value The triggerConditionCheckIntervalMs to set.
   */
  private void setTriggerConditionCheckIntervalMs(int value) {
    bitField0_ |= 0x00000002;
    triggerConditionCheckIntervalMs_ = value;
  }
  /**
   * <pre>
   * The amount of time between consecutive checks of trigger conditions. Should
   * not be too small to limit performance impact.
   * </pre>
   *
   * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
   */
  private void clearTriggerConditionCheckIntervalMs() {
    bitField0_ = (bitField0_ & ~0x00000002);
    triggerConditionCheckIntervalMs_ = 1000;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The RPC response to a |GetTriggerScriptsRequestProto|.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.GetTriggerScriptsResponseProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.GetTriggerScriptsResponseProto)
      org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> getTriggerScriptsList() {
      return java.util.Collections.unmodifiableList(
          instance.getTriggerScriptsList());
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    @java.lang.Override
    public int getTriggerScriptsCount() {
      return instance.getTriggerScriptsCount();
    }/**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto getTriggerScripts(int index) {
      return instance.getTriggerScripts(index);
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder setTriggerScripts(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
      copyOnWrite();
      instance.setTriggerScripts(index, value);
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder setTriggerScripts(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.Builder builderForValue) {
      copyOnWrite();
      instance.setTriggerScripts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder addTriggerScripts(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
      copyOnWrite();
      instance.addTriggerScripts(value);
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder addTriggerScripts(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto value) {
      copyOnWrite();
      instance.addTriggerScripts(index, value);
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder addTriggerScripts(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.Builder builderForValue) {
      copyOnWrite();
      instance.addTriggerScripts(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder addTriggerScripts(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.Builder builderForValue) {
      copyOnWrite();
      instance.addTriggerScripts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder addAllTriggerScripts(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> values) {
      copyOnWrite();
      instance.addAllTriggerScripts(values);
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder clearTriggerScripts() {
      copyOnWrite();
      instance.clearTriggerScripts();
      return this;
    }
    /**
     * <pre>
     * The available trigger scripts, if any.
     * </pre>
     *
     * <code>repeated .autofill_assistant.TriggerScriptProto trigger_scripts = 1;</code>
     */
    public Builder removeTriggerScripts(int index) {
      copyOnWrite();
      instance.removeTriggerScripts(index);
      return this;
    }

    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @return A list containing the additionalAllowedDomains.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getAdditionalAllowedDomainsList() {
      return java.util.Collections.unmodifiableList(
          instance.getAdditionalAllowedDomainsList());
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @return The count of additionalAllowedDomains.
     */
    @java.lang.Override
    public int getAdditionalAllowedDomainsCount() {
      return instance.getAdditionalAllowedDomainsCount();
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param index The index of the element to return.
     * @return The additionalAllowedDomains at the given index.
     */
    @java.lang.Override
    public java.lang.String getAdditionalAllowedDomains(int index) {
      return instance.getAdditionalAllowedDomains(index);
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the additionalAllowedDomains at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAdditionalAllowedDomainsBytes(int index) {
      return instance.getAdditionalAllowedDomainsBytes(index);
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param index The index to set the value at.
     * @param value The additionalAllowedDomains to set.
     * @return This builder for chaining.
     */
    public Builder setAdditionalAllowedDomains(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setAdditionalAllowedDomains(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param value The additionalAllowedDomains to add.
     * @return This builder for chaining.
     */
    public Builder addAdditionalAllowedDomains(
        java.lang.String value) {
      copyOnWrite();
      instance.addAdditionalAllowedDomains(value);
      return this;
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param values The additionalAllowedDomains to add.
     * @return This builder for chaining.
     */
    public Builder addAllAdditionalAllowedDomains(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllAdditionalAllowedDomains(values);
      return this;
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAdditionalAllowedDomains() {
      copyOnWrite();
      instance.clearAdditionalAllowedDomains();
      return this;
    }
    /**
     * <pre>
     * A list of additional domains and subdomains. Trigger scripts will
     * automatically cancel the ongoing session if the user navigates away from
     * the original domain or any of the additional domains.
     * </pre>
     *
     * <code>repeated string additional_allowed_domains = 2;</code>
     * @param value The bytes of the additionalAllowedDomains to add.
     * @return This builder for chaining.
     */
    public Builder addAdditionalAllowedDomainsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addAdditionalAllowedDomainsBytes(value);
      return this;
    }

    /**
     * <pre>
     * The amount of time a trigger script may evaluate trigger conditions while
     * invisible. If a trigger script is invisible for this amount of time, it
     * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
     * If not specified, there is no automatic timeout.
     * This is only counted while no trigger script is shown, and the time is
     * reset on tab switch and whenever a trigger script is hidden. Note that this
     * only counts the time in-between checks, so the actual timeout will be
     * slightly longer.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 3;</code>
     * @return Whether the timeoutMs field is set.
     */
    @java.lang.Override
    public boolean hasTimeoutMs() {
      return instance.hasTimeoutMs();
    }
    /**
     * <pre>
     * The amount of time a trigger script may evaluate trigger conditions while
     * invisible. If a trigger script is invisible for this amount of time, it
     * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
     * If not specified, there is no automatic timeout.
     * This is only counted while no trigger script is shown, and the time is
     * reset on tab switch and whenever a trigger script is hidden. Note that this
     * only counts the time in-between checks, so the actual timeout will be
     * slightly longer.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 3;</code>
     * @return The timeoutMs.
     */
    @java.lang.Override
    public int getTimeoutMs() {
      return instance.getTimeoutMs();
    }
    /**
     * <pre>
     * The amount of time a trigger script may evaluate trigger conditions while
     * invisible. If a trigger script is invisible for this amount of time, it
     * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
     * If not specified, there is no automatic timeout.
     * This is only counted while no trigger script is shown, and the time is
     * reset on tab switch and whenever a trigger script is hidden. Note that this
     * only counts the time in-between checks, so the actual timeout will be
     * slightly longer.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 3;</code>
     * @param value The timeoutMs to set.
     * @return This builder for chaining.
     */
    public Builder setTimeoutMs(int value) {
      copyOnWrite();
      instance.setTimeoutMs(value);
      return this;
    }
    /**
     * <pre>
     * The amount of time a trigger script may evaluate trigger conditions while
     * invisible. If a trigger script is invisible for this amount of time, it
     * will automatically finish with LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT.
     * If not specified, there is no automatic timeout.
     * This is only counted while no trigger script is shown, and the time is
     * reset on tab switch and whenever a trigger script is hidden. Note that this
     * only counts the time in-between checks, so the actual timeout will be
     * slightly longer.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeoutMs() {
      copyOnWrite();
      instance.clearTimeoutMs();
      return this;
    }

    /**
     * <pre>
     * The amount of time between consecutive checks of trigger conditions. Should
     * not be too small to limit performance impact.
     * </pre>
     *
     * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
     * @return Whether the triggerConditionCheckIntervalMs field is set.
     */
    @java.lang.Override
    public boolean hasTriggerConditionCheckIntervalMs() {
      return instance.hasTriggerConditionCheckIntervalMs();
    }
    /**
     * <pre>
     * The amount of time between consecutive checks of trigger conditions. Should
     * not be too small to limit performance impact.
     * </pre>
     *
     * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
     * @return The triggerConditionCheckIntervalMs.
     */
    @java.lang.Override
    public int getTriggerConditionCheckIntervalMs() {
      return instance.getTriggerConditionCheckIntervalMs();
    }
    /**
     * <pre>
     * The amount of time between consecutive checks of trigger conditions. Should
     * not be too small to limit performance impact.
     * </pre>
     *
     * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
     * @param value The triggerConditionCheckIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setTriggerConditionCheckIntervalMs(int value) {
      copyOnWrite();
      instance.setTriggerConditionCheckIntervalMs(value);
      return this;
    }
    /**
     * <pre>
     * The amount of time between consecutive checks of trigger conditions. Should
     * not be too small to limit performance impact.
     * </pre>
     *
     * <code>optional int32 trigger_condition_check_interval_ms = 4 [default = 1000];</code>
     * @return This builder for chaining.
     */
    public Builder clearTriggerConditionCheckIntervalMs() {
      copyOnWrite();
      instance.clearTriggerConditionCheckIntervalMs();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.GetTriggerScriptsResponseProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "triggerScripts_",
            org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.class,
            "additionalAllowedDomains_",
            "timeoutMs_",
            "triggerConditionCheckIntervalMs_",
          };
          java.lang.String info =
              "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0002\u0000\u0001\u001b\u0002\u001a" +
              "\u0003\u1004\u0000\u0004\u1004\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.GetTriggerScriptsResponseProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto DEFAULT_INSTANCE;
  static {
    GetTriggerScriptsResponseProto defaultInstance = new GetTriggerScriptsResponseProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      GetTriggerScriptsResponseProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.GetTriggerScriptsResponseProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GetTriggerScriptsResponseProto> PARSER;

  public static com.google.protobuf.Parser<GetTriggerScriptsResponseProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

