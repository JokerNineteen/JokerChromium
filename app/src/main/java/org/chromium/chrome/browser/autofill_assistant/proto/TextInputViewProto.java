// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_layout.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A text input widget. Note: View identifier is mandatory!
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.TextInputViewProto}
 */
public  final class TextInputViewProto extends
    com.google.protobuf.GeneratedMessageLite<
        TextInputViewProto, TextInputViewProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.TextInputViewProto)
    TextInputViewProtoOrBuilder {
  private TextInputViewProto() {
    hint_ = "";
    modelIdentifier_ = "";
  }
  /**
   * <pre>
   * This mirrors the type hints specified in
   * https://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/autofill/prefeditor/EditorFieldModel.java
   * </pre>
   *
   * Protobuf enum {@code autofill_assistant.TextInputViewProto.InputTypeHint}
   */
  public enum InputTypeHint
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * No special formatting rules.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>PHONE = 1;</code>
     */
    PHONE(1),
    /**
     * <code>EMAIL = 2;</code>
     */
    EMAIL(2),
    /**
     * <pre>
     * A multi-line address field that may include numbers.
     * </pre>
     *
     * <code>STREET_LINES = 3;</code>
     */
    STREET_LINES(3),
    /**
     * <code>PERSON_NAME = 4;</code>
     */
    PERSON_NAME(4),
    /**
     * <pre>
     * A region or administrative area, e.g., a state or a province.
     * </pre>
     *
     * <code>REGION = 5;</code>
     */
    REGION(5),
    /**
     * <code>ALPHA_NUMERIC = 6;</code>
     */
    ALPHA_NUMERIC(6),
    ;

    /**
     * <pre>
     * No special formatting rules.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>PHONE = 1;</code>
     */
    public static final int PHONE_VALUE = 1;
    /**
     * <code>EMAIL = 2;</code>
     */
    public static final int EMAIL_VALUE = 2;
    /**
     * <pre>
     * A multi-line address field that may include numbers.
     * </pre>
     *
     * <code>STREET_LINES = 3;</code>
     */
    public static final int STREET_LINES_VALUE = 3;
    /**
     * <code>PERSON_NAME = 4;</code>
     */
    public static final int PERSON_NAME_VALUE = 4;
    /**
     * <pre>
     * A region or administrative area, e.g., a state or a province.
     * </pre>
     *
     * <code>REGION = 5;</code>
     */
    public static final int REGION_VALUE = 5;
    /**
     * <code>ALPHA_NUMERIC = 6;</code>
     */
    public static final int ALPHA_NUMERIC_VALUE = 6;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InputTypeHint valueOf(int value) {
      return forNumber(value);
    }

    public static InputTypeHint forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return PHONE;
        case 2: return EMAIL;
        case 3: return STREET_LINES;
        case 4: return PERSON_NAME;
        case 5: return REGION;
        case 6: return ALPHA_NUMERIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InputTypeHint>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InputTypeHint> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InputTypeHint>() {
            @java.lang.Override
            public InputTypeHint findValueByNumber(int number) {
              return InputTypeHint.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return InputTypeHintVerifier.INSTANCE;
    }

    private static final class InputTypeHintVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new InputTypeHintVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return InputTypeHint.forNumber(number) != null;
            }
          };

    private final int value;

    private InputTypeHint(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.TextInputViewProto.InputTypeHint)
  }

  private int bitField0_;
  public static final int HINT_FIELD_NUMBER = 1;
  private java.lang.String hint_;
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   * @return Whether the hint field is set.
   */
  @java.lang.Override
  public boolean hasHint() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   * @return The hint.
   */
  @java.lang.Override
  public java.lang.String getHint() {
    return hint_;
  }
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   * @return The bytes for hint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHintBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(hint_);
  }
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   * @param value The hint to set.
   */
  private void setHint(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    hint_ = value;
  }
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   */
  private void clearHint() {
    bitField0_ = (bitField0_ & ~0x00000001);
    hint_ = getDefaultInstance().getHint();
  }
  /**
   * <pre>
   * The hint to display when the input is empty.
   * </pre>
   *
   * <code>optional string hint = 1;</code>
   * @param value The bytes for hint to set.
   */
  private void setHintBytes(
      com.google.protobuf.ByteString value) {
    hint_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <pre>
   * A type hint that the widget may interpret to provide optimized controls.
   * Note that the actual impact is version-dependent and not all hints may be
   * supported, in which case a regular text input field will be displayed.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * A type hint that the widget may interpret to provide optimized controls.
   * Note that the actual impact is version-dependent and not all hints may be
   * supported, in which case a regular text input field will be displayed.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
   * @return The type.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint getType() {
    org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint result = org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint.forNumber(type_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint.NONE : result;
  }
  /**
   * <pre>
   * A type hint that the widget may interpret to provide optimized controls.
   * Note that the actual impact is version-dependent and not all hints may be
   * supported, in which case a regular text input field will be displayed.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
   * @param value The type to set.
   */
  private void setType(org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint value) {
    type_ = value.getNumber();
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A type hint that the widget may interpret to provide optimized controls.
   * Note that the actual impact is version-dependent and not all hints may be
   * supported, in which case a regular text input field will be displayed.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
   */
  private void clearType() {
    bitField0_ = (bitField0_ & ~0x00000002);
    type_ = 0;
  }

  public static final int MODEL_IDENTIFIER_FIELD_NUMBER = 3;
  private java.lang.String modelIdentifier_;
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   * @return Whether the modelIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasModelIdentifier() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   * @return The modelIdentifier.
   */
  @java.lang.Override
  public java.lang.String getModelIdentifier() {
    return modelIdentifier_;
  }
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   * @return The bytes for modelIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelIdentifierBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(modelIdentifier_);
  }
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   * @param value The modelIdentifier to set.
   */
  private void setModelIdentifier(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    modelIdentifier_ = value;
  }
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   */
  private void clearModelIdentifier() {
    bitField0_ = (bitField0_ & ~0x00000004);
    modelIdentifier_ = getDefaultInstance().getModelIdentifier();
  }
  /**
   * <pre>
   * Both input and output. The model identifier containing this view's text.
   * Should point to a single string value.
   * </pre>
   *
   * <code>optional string model_identifier = 3;</code>
   * @param value The bytes for modelIdentifier to set.
   */
  private void setModelIdentifierBytes(
      com.google.protobuf.ByteString value) {
    modelIdentifier_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A text input widget. Note: View identifier is mandatory!
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.TextInputViewProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.TextInputViewProto)
      org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @return Whether the hint field is set.
     */
    @java.lang.Override
    public boolean hasHint() {
      return instance.hasHint();
    }
    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @return The hint.
     */
    @java.lang.Override
    public java.lang.String getHint() {
      return instance.getHint();
    }
    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @return The bytes for hint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHintBytes() {
      return instance.getHintBytes();
    }
    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @param value The hint to set.
     * @return This builder for chaining.
     */
    public Builder setHint(
        java.lang.String value) {
      copyOnWrite();
      instance.setHint(value);
      return this;
    }
    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearHint() {
      copyOnWrite();
      instance.clearHint();
      return this;
    }
    /**
     * <pre>
     * The hint to display when the input is empty.
     * </pre>
     *
     * <code>optional string hint = 1;</code>
     * @param value The bytes for hint to set.
     * @return This builder for chaining.
     */
    public Builder setHintBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setHintBytes(value);
      return this;
    }

    /**
     * <pre>
     * A type hint that the widget may interpret to provide optimized controls.
     * Note that the actual impact is version-dependent and not all hints may be
     * supported, in which case a regular text input field will be displayed.
     * </pre>
     *
     * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return instance.hasType();
    }
    /**
     * <pre>
     * A type hint that the widget may interpret to provide optimized controls.
     * Note that the actual impact is version-dependent and not all hints may be
     * supported, in which case a regular text input field will be displayed.
     * </pre>
     *
     * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint getType() {
      return instance.getType();
    }
    /**
     * <pre>
     * A type hint that the widget may interpret to provide optimized controls.
     * Note that the actual impact is version-dependent and not all hints may be
     * supported, in which case a regular text input field will be displayed.
     * </pre>
     *
     * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     * <pre>
     * A type hint that the widget may interpret to provide optimized controls.
     * Note that the actual impact is version-dependent and not all hints may be
     * supported, in which case a regular text input field will be displayed.
     * </pre>
     *
     * <code>optional .autofill_assistant.TextInputViewProto.InputTypeHint type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @return Whether the modelIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasModelIdentifier() {
      return instance.hasModelIdentifier();
    }
    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @return The modelIdentifier.
     */
    @java.lang.Override
    public java.lang.String getModelIdentifier() {
      return instance.getModelIdentifier();
    }
    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @return The bytes for modelIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelIdentifierBytes() {
      return instance.getModelIdentifierBytes();
    }
    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @param value The modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setModelIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearModelIdentifier() {
      copyOnWrite();
      instance.clearModelIdentifier();
      return this;
    }
    /**
     * <pre>
     * Both input and output. The model identifier containing this view's text.
     * Should point to a single string value.
     * </pre>
     *
     * <code>optional string model_identifier = 3;</code>
     * @param value The bytes for modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setModelIdentifierBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.TextInputViewProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "hint_",
            "type_",
            org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.InputTypeHint.internalGetVerifier(),
            "modelIdentifier_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u100c\u0001\u0003\u1008\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.TextInputViewProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto DEFAULT_INSTANCE;
  static {
    TextInputViewProto defaultInstance = new TextInputViewProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TextInputViewProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputViewProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TextInputViewProto> PARSER;

  public static com.google.protobuf.Parser<TextInputViewProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

