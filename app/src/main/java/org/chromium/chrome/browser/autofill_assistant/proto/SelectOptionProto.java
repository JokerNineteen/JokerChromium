// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Contain all arguments to perform a select option action.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.SelectOptionProto}
 */
public  final class SelectOptionProto extends
    com.google.protobuf.GeneratedMessageLite<
        SelectOptionProto, SelectOptionProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.SelectOptionProto)
    SelectOptionProtoOrBuilder {
  private SelectOptionProto() {
    selectStrategy_ = 3;
  }
  private int bitField0_;
  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase {
    SELECTED_OPTION(3),
    AUTOFILL_VALUE(5),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 3: return SELECTED_OPTION;
        case 5: return AUTOFILL_VALUE;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  private void clearValue() {
    valueCase_ = 0;
    value_ = null;
  }

  public static final int ELEMENT_FIELD_NUMBER = 2;
  private org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto element_;
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.Override
  public boolean hasElement() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getElement() {
    return element_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance() : element_;
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  private void setElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  element_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  if (element_ != null &&
        element_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance()) {
      element_ =
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.newBuilder(element_).mergeFrom(value).buildPartial();
    } else {
      element_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  private void clearElement() {  element_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int SELECTED_OPTION_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   * @return Whether the selectedOption field is set.
   */
  @java.lang.Override
  public boolean hasSelectedOption() {
    return valueCase_ == 3;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   * @return The selectedOption.
   */
  @java.lang.Override
  public java.lang.String getSelectedOption() {
    java.lang.String ref = "";
    if (valueCase_ == 3) {
      ref = (java.lang.String) value_;
    }
    return ref;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   * @return The bytes for selectedOption.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSelectedOptionBytes() {
    java.lang.String ref = "";
    if (valueCase_ == 3) {
      ref = (java.lang.String) value_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   * @param value The selectedOption to set.
   */
  private void setSelectedOption(
      java.lang.String value) {
    value.getClass();
  valueCase_ = 3;
    value_ = value;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   */
  private void clearSelectedOption() {
    if (valueCase_ == 3) {
      valueCase_ = 0;
      value_ = null;
    }
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>string selected_option = 3;</code>
   * @param value The bytes for selectedOption to set.
   */
  private void setSelectedOptionBytes(
      com.google.protobuf.ByteString value) {
    value_ = value.toStringUtf8();
    valueCase_ = 3;
  }

  public static final int AUTOFILL_VALUE_FIELD_NUMBER = 5;
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be proceeded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
   */
  @java.lang.Override
  public boolean hasAutofillValue() {
    return valueCase_ == 5;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be proceeded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue getAutofillValue() {
    if (valueCase_ == 5) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue) value_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue.getDefaultInstance();
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be proceeded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
   */
  private void setAutofillValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue value) {
    value.getClass();
  value_ = value;
    valueCase_ = 5;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be proceeded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
   */
  private void mergeAutofillValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue value) {
    value.getClass();
  if (valueCase_ == 5 &&
        value_ != org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue.getDefaultInstance()) {
      value_ = org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue) value_)
          .mergeFrom(value).buildPartial();
    } else {
      value_ = value;
    }
    valueCase_ = 5;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be proceeded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
   */
  private void clearAutofillValue() {
    if (valueCase_ == 5) {
      valueCase_ = 0;
      value_ = null;
    }
  }

  public static final int SELECT_STRATEGY_FIELD_NUMBER = 4;
  private int selectStrategy_;
  /**
   * <pre>
   * The strategy used to select a value option. This defaults to
   * |LABEL_STARTS_WITH| for the legacy case.
   * </pre>
   *
   * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
   * @return Whether the selectStrategy field is set.
   */
  @java.lang.Override
  public boolean hasSelectStrategy() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The strategy used to select a value option. This defaults to
   * |LABEL_STARTS_WITH| for the legacy case.
   * </pre>
   *
   * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
   * @return The selectStrategy.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy getSelectStrategy() {
    org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy result = org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy.forNumber(selectStrategy_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy.LABEL_STARTS_WITH : result;
  }
  /**
   * <pre>
   * The strategy used to select a value option. This defaults to
   * |LABEL_STARTS_WITH| for the legacy case.
   * </pre>
   *
   * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
   * @param value The selectStrategy to set.
   */
  private void setSelectStrategy(org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy value) {
    selectStrategy_ = value.getNumber();
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * The strategy used to select a value option. This defaults to
   * |LABEL_STARTS_WITH| for the legacy case.
   * </pre>
   *
   * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
   */
  private void clearSelectStrategy() {
    bitField0_ = (bitField0_ & ~0x00000008);
    selectStrategy_ = 3;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Contain all arguments to perform a select option action.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.SelectOptionProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.SelectOptionProto)
      org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public ValueCase
        getValueCase() {
      return instance.getValueCase();
    }

    public Builder clearValue() {
      copyOnWrite();
      instance.clearValue();
      return this;
    }


    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    @java.lang.Override
    public boolean hasElement() {
      return instance.hasElement();
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getElement() {
      return instance.getElement();
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder setElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.setElement(value);
      return this;
      }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder setElement(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.Builder builderForValue) {
      copyOnWrite();
      instance.setElement(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.mergeElement(value);
      return this;
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder clearElement() {  copyOnWrite();
      instance.clearElement();
      return this;
    }

    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @return Whether the selectedOption field is set.
     */
    @java.lang.Override
    public boolean hasSelectedOption() {
      return instance.hasSelectedOption();
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @return The selectedOption.
     */
    @java.lang.Override
    public java.lang.String getSelectedOption() {
      return instance.getSelectedOption();
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @return The bytes for selectedOption.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSelectedOptionBytes() {
      return instance.getSelectedOptionBytes();
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @param value The selectedOption to set.
     * @return This builder for chaining.
     */
    public Builder setSelectedOption(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelectedOption(value);
      return this;
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSelectedOption() {
      copyOnWrite();
      instance.clearSelectedOption();
      return this;
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>string selected_option = 3;</code>
     * @param value The bytes for selectedOption to set.
     * @return This builder for chaining.
     */
    public Builder setSelectedOptionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectedOptionBytes(value);
      return this;
    }

    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    @java.lang.Override
    public boolean hasAutofillValue() {
      return instance.hasAutofillValue();
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue getAutofillValue() {
      return instance.getAutofillValue();
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    public Builder setAutofillValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue value) {
      copyOnWrite();
      instance.setAutofillValue(value);
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    public Builder setAutofillValue(
        org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue.Builder builderForValue) {
      copyOnWrite();
      instance.setAutofillValue(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    public Builder mergeAutofillValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue value) {
      copyOnWrite();
      instance.mergeAutofillValue(value);
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be proceeded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValue autofill_value = 5;</code>
     */
    public Builder clearAutofillValue() {
      copyOnWrite();
      instance.clearAutofillValue();
      return this;
    }

    /**
     * <pre>
     * The strategy used to select a value option. This defaults to
     * |LABEL_STARTS_WITH| for the legacy case.
     * </pre>
     *
     * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
     * @return Whether the selectStrategy field is set.
     */
    @java.lang.Override
    public boolean hasSelectStrategy() {
      return instance.hasSelectStrategy();
    }
    /**
     * <pre>
     * The strategy used to select a value option. This defaults to
     * |LABEL_STARTS_WITH| for the legacy case.
     * </pre>
     *
     * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
     * @return The selectStrategy.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy getSelectStrategy() {
      return instance.getSelectStrategy();
    }
    /**
     * <pre>
     * The strategy used to select a value option. This defaults to
     * |LABEL_STARTS_WITH| for the legacy case.
     * </pre>
     *
     * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
     * @param value The enum numeric value on the wire for selectStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setSelectStrategy(org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy value) {
      copyOnWrite();
      instance.setSelectStrategy(value);
      return this;
    }
    /**
     * <pre>
     * The strategy used to select a value option. This defaults to
     * |LABEL_STARTS_WITH| for the legacy case.
     * </pre>
     *
     * <code>optional .autofill_assistant.DropdownSelectStrategy select_strategy = 4 [default = LABEL_STARTS_WITH];</code>
     * @return This builder for chaining.
     */
    public Builder clearSelectStrategy() {
      copyOnWrite();
      instance.clearSelectStrategy();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.SelectOptionProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "value_",
            "valueCase_",
            "bitField0_",
            "element_",
            "selectStrategy_",
            org.chromium.chrome.browser.autofill_assistant.proto.DropdownSelectStrategy.internalGetVerifier(),
            org.chromium.chrome.browser.autofill_assistant.proto.AutofillValue.class,
          };
          java.lang.String info =
              "\u0001\u0004\u0001\u0001\u0002\u0005\u0004\u0000\u0000\u0000\u0002\u1009\u0000\u0003" +
              "\u103b\u0000\u0004\u100c\u0003\u0005\u103c\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.SelectOptionProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto DEFAULT_INSTANCE;
  static {
    SelectOptionProto defaultInstance = new SelectOptionProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SelectOptionProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SelectOptionProto> PARSER;

  public static com.google.protobuf.Parser<SelectOptionProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

