// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generic_ui.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Invokes |callbacks| for each item in the loop value. Automatically replaces
 * instances of "${i}" in model and view identifiers with the loop counter.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ForEachProto}
 */
public  final class ForEachProto extends
    com.google.protobuf.GeneratedMessageLite<
        ForEachProto, ForEachProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ForEachProto)
    ForEachProtoOrBuilder {
  private ForEachProto() {
    loopCounter_ = "";
    loopValueModelIdentifier_ = "";
    callbacks_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int LOOP_COUNTER_FIELD_NUMBER = 1;
  private java.lang.String loopCounter_;
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   * @return Whether the loopCounter field is set.
   */
  @java.lang.Override
  public boolean hasLoopCounter() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   * @return The loopCounter.
   */
  @java.lang.Override
  public java.lang.String getLoopCounter() {
    return loopCounter_;
  }
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   * @return The bytes for loopCounter.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLoopCounterBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(loopCounter_);
  }
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   * @param value The loopCounter to set.
   */
  private void setLoopCounter(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    loopCounter_ = value;
  }
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   */
  private void clearLoopCounter() {
    bitField0_ = (bitField0_ & ~0x00000001);
    loopCounter_ = getDefaultInstance().getLoopCounter();
  }
  /**
   * <pre>
   * The loop counter, usually "i", "j", etc. Callbacks may use this counter
   * in view and model identifiers by using "${i}"" placeholders, e.g.,
   * "profiles[${i}]" or "my_view_${i}".
   * </pre>
   *
   * <code>optional string loop_counter = 1;</code>
   * @param value The bytes for loopCounter to set.
   */
  private void setLoopCounterBytes(
      com.google.protobuf.ByteString value) {
    loopCounter_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int LOOP_VALUE_MODEL_IDENTIFIER_FIELD_NUMBER = 2;
  private java.lang.String loopValueModelIdentifier_;
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   * @return Whether the loopValueModelIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasLoopValueModelIdentifier() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   * @return The loopValueModelIdentifier.
   */
  @java.lang.Override
  public java.lang.String getLoopValueModelIdentifier() {
    return loopValueModelIdentifier_;
  }
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   * @return The bytes for loopValueModelIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLoopValueModelIdentifierBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(loopValueModelIdentifier_);
  }
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   * @param value The loopValueModelIdentifier to set.
   */
  private void setLoopValueModelIdentifier(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    loopValueModelIdentifier_ = value;
  }
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   */
  private void clearLoopValueModelIdentifier() {
    bitField0_ = (bitField0_ & ~0x00000002);
    loopValueModelIdentifier_ = getDefaultInstance().getLoopValueModelIdentifier();
  }
  /**
   * <pre>
   * The value list to loop over.
   * </pre>
   *
   * <code>optional string loop_value_model_identifier = 2;</code>
   * @param value The bytes for loopValueModelIdentifier to set.
   */
  private void setLoopValueModelIdentifierBytes(
      com.google.protobuf.ByteString value) {
    loopValueModelIdentifier_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int CALLBACKS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> callbacks_;
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> getCallbacksList() {
    return callbacks_;
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.CallbackProtoOrBuilder> 
      getCallbacksOrBuilderList() {
    return callbacks_;
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  @java.lang.Override
  public int getCallbacksCount() {
    return callbacks_.size();
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto getCallbacks(int index) {
    return callbacks_.get(index);
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.CallbackProtoOrBuilder getCallbacksOrBuilder(
      int index) {
    return callbacks_.get(index);
  }
  private void ensureCallbacksIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> tmp = callbacks_;
    if (!tmp.isModifiable()) {
      callbacks_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void setCallbacks(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
    value.getClass();
  ensureCallbacksIsMutable();
    callbacks_.set(index, value);
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void addCallbacks(org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
    value.getClass();
  ensureCallbacksIsMutable();
    callbacks_.add(value);
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void addCallbacks(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
    value.getClass();
  ensureCallbacksIsMutable();
    callbacks_.add(index, value);
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void addAllCallbacks(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> values) {
    ensureCallbacksIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, callbacks_);
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void clearCallbacks() {
    callbacks_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The callbacks to invoke for every iteration of the loop.
   * </pre>
   *
   * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
   */
  private void removeCallbacks(int index) {
    ensureCallbacksIsMutable();
    callbacks_.remove(index);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Invokes |callbacks| for each item in the loop value. Automatically replaces
   * instances of "${i}" in model and view identifiers with the loop counter.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ForEachProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ForEachProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ForEachProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @return Whether the loopCounter field is set.
     */
    @java.lang.Override
    public boolean hasLoopCounter() {
      return instance.hasLoopCounter();
    }
    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @return The loopCounter.
     */
    @java.lang.Override
    public java.lang.String getLoopCounter() {
      return instance.getLoopCounter();
    }
    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @return The bytes for loopCounter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLoopCounterBytes() {
      return instance.getLoopCounterBytes();
    }
    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @param value The loopCounter to set.
     * @return This builder for chaining.
     */
    public Builder setLoopCounter(
        java.lang.String value) {
      copyOnWrite();
      instance.setLoopCounter(value);
      return this;
    }
    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLoopCounter() {
      copyOnWrite();
      instance.clearLoopCounter();
      return this;
    }
    /**
     * <pre>
     * The loop counter, usually "i", "j", etc. Callbacks may use this counter
     * in view and model identifiers by using "${i}"" placeholders, e.g.,
     * "profiles[${i}]" or "my_view_${i}".
     * </pre>
     *
     * <code>optional string loop_counter = 1;</code>
     * @param value The bytes for loopCounter to set.
     * @return This builder for chaining.
     */
    public Builder setLoopCounterBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLoopCounterBytes(value);
      return this;
    }

    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @return Whether the loopValueModelIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasLoopValueModelIdentifier() {
      return instance.hasLoopValueModelIdentifier();
    }
    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @return The loopValueModelIdentifier.
     */
    @java.lang.Override
    public java.lang.String getLoopValueModelIdentifier() {
      return instance.getLoopValueModelIdentifier();
    }
    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @return The bytes for loopValueModelIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLoopValueModelIdentifierBytes() {
      return instance.getLoopValueModelIdentifierBytes();
    }
    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @param value The loopValueModelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setLoopValueModelIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setLoopValueModelIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLoopValueModelIdentifier() {
      copyOnWrite();
      instance.clearLoopValueModelIdentifier();
      return this;
    }
    /**
     * <pre>
     * The value list to loop over.
     * </pre>
     *
     * <code>optional string loop_value_model_identifier = 2;</code>
     * @param value The bytes for loopValueModelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setLoopValueModelIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLoopValueModelIdentifierBytes(value);
      return this;
    }

    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> getCallbacksList() {
      return java.util.Collections.unmodifiableList(
          instance.getCallbacksList());
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    @java.lang.Override
    public int getCallbacksCount() {
      return instance.getCallbacksCount();
    }/**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto getCallbacks(int index) {
      return instance.getCallbacks(index);
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder setCallbacks(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
      copyOnWrite();
      instance.setCallbacks(index, value);
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder setCallbacks(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto.Builder builderForValue) {
      copyOnWrite();
      instance.setCallbacks(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder addCallbacks(org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
      copyOnWrite();
      instance.addCallbacks(value);
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder addCallbacks(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto value) {
      copyOnWrite();
      instance.addCallbacks(index, value);
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder addCallbacks(
        org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto.Builder builderForValue) {
      copyOnWrite();
      instance.addCallbacks(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder addCallbacks(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto.Builder builderForValue) {
      copyOnWrite();
      instance.addCallbacks(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder addAllCallbacks(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto> values) {
      copyOnWrite();
      instance.addAllCallbacks(values);
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder clearCallbacks() {
      copyOnWrite();
      instance.clearCallbacks();
      return this;
    }
    /**
     * <pre>
     * The callbacks to invoke for every iteration of the loop.
     * </pre>
     *
     * <code>repeated .autofill_assistant.CallbackProto callbacks = 3;</code>
     */
    public Builder removeCallbacks(int index) {
      copyOnWrite();
      instance.removeCallbacks(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ForEachProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "loopCounter_",
            "loopValueModelIdentifier_",
            "callbacks_",
            org.chromium.chrome.browser.autofill_assistant.proto.CallbackProto.class,
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u1008\u0000\u0002" +
              "\u1008\u0001\u0003\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ForEachProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto DEFAULT_INSTANCE;
  static {
    ForEachProto defaultInstance = new ForEachProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ForEachProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ForEachProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ForEachProto> PARSER;

  public static com.google.protobuf.Parser<ForEachProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

