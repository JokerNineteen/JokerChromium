// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_layout.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A drawable for use in backgrounds or in image views.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.DrawableProto}
 */
public  final class DrawableProto extends
    com.google.protobuf.GeneratedMessageLite<
        DrawableProto, DrawableProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.DrawableProto)
    DrawableProtoOrBuilder {
  private DrawableProto() {
  }
  /**
   * Protobuf enum {@code autofill_assistant.DrawableProto.Icon}
   */
  public enum Icon
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>DRAWABLE_ICON_UNDEFINED = 0;</code>
     */
    DRAWABLE_ICON_UNDEFINED(0),
    /**
     * <code>PROGRESSBAR_DEFAULT_INITIAL_STEP = 1;</code>
     */
    PROGRESSBAR_DEFAULT_INITIAL_STEP(1),
    /**
     * <code>PROGRESSBAR_DEFAULT_DATA_COLLECTION = 2;</code>
     */
    PROGRESSBAR_DEFAULT_DATA_COLLECTION(2),
    /**
     * <code>PROGRESSBAR_DEFAULT_PAYMENT = 3;</code>
     */
    PROGRESSBAR_DEFAULT_PAYMENT(3),
    /**
     * <code>PROGRESSBAR_DEFAULT_FINAL_STEP = 4;</code>
     */
    PROGRESSBAR_DEFAULT_FINAL_STEP(4),
    /**
     * <code>SITTING_PERSON = 5;</code>
     */
    SITTING_PERSON(5),
    /**
     * <code>TICKET_STUB = 6;</code>
     */
    TICKET_STUB(6),
    /**
     * <code>SHOPPING_BASKET = 7;</code>
     */
    SHOPPING_BASKET(7),
    /**
     * <code>FAST_FOOD = 8;</code>
     */
    FAST_FOOD(8),
    /**
     * <code>LOCAL_DINING = 9;</code>
     */
    LOCAL_DINING(9),
    /**
     * <code>COGWHEEL = 10;</code>
     */
    COGWHEEL(10),
    /**
     * <code>KEY = 11;</code>
     */
    KEY(11),
    /**
     * <code>CAR = 12;</code>
     */
    CAR(12),
    /**
     * <code>GROCERY = 13;</code>
     */
    GROCERY(13),
    /**
     * <code>VISIBILITY_ON = 14;</code>
     */
    VISIBILITY_ON(14),
    /**
     * <code>VISIBILITY_OFF = 15;</code>
     */
    VISIBILITY_OFF(15),
    ;

    /**
     * <code>DRAWABLE_ICON_UNDEFINED = 0;</code>
     */
    public static final int DRAWABLE_ICON_UNDEFINED_VALUE = 0;
    /**
     * <code>PROGRESSBAR_DEFAULT_INITIAL_STEP = 1;</code>
     */
    public static final int PROGRESSBAR_DEFAULT_INITIAL_STEP_VALUE = 1;
    /**
     * <code>PROGRESSBAR_DEFAULT_DATA_COLLECTION = 2;</code>
     */
    public static final int PROGRESSBAR_DEFAULT_DATA_COLLECTION_VALUE = 2;
    /**
     * <code>PROGRESSBAR_DEFAULT_PAYMENT = 3;</code>
     */
    public static final int PROGRESSBAR_DEFAULT_PAYMENT_VALUE = 3;
    /**
     * <code>PROGRESSBAR_DEFAULT_FINAL_STEP = 4;</code>
     */
    public static final int PROGRESSBAR_DEFAULT_FINAL_STEP_VALUE = 4;
    /**
     * <code>SITTING_PERSON = 5;</code>
     */
    public static final int SITTING_PERSON_VALUE = 5;
    /**
     * <code>TICKET_STUB = 6;</code>
     */
    public static final int TICKET_STUB_VALUE = 6;
    /**
     * <code>SHOPPING_BASKET = 7;</code>
     */
    public static final int SHOPPING_BASKET_VALUE = 7;
    /**
     * <code>FAST_FOOD = 8;</code>
     */
    public static final int FAST_FOOD_VALUE = 8;
    /**
     * <code>LOCAL_DINING = 9;</code>
     */
    public static final int LOCAL_DINING_VALUE = 9;
    /**
     * <code>COGWHEEL = 10;</code>
     */
    public static final int COGWHEEL_VALUE = 10;
    /**
     * <code>KEY = 11;</code>
     */
    public static final int KEY_VALUE = 11;
    /**
     * <code>CAR = 12;</code>
     */
    public static final int CAR_VALUE = 12;
    /**
     * <code>GROCERY = 13;</code>
     */
    public static final int GROCERY_VALUE = 13;
    /**
     * <code>VISIBILITY_ON = 14;</code>
     */
    public static final int VISIBILITY_ON_VALUE = 14;
    /**
     * <code>VISIBILITY_OFF = 15;</code>
     */
    public static final int VISIBILITY_OFF_VALUE = 15;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Icon valueOf(int value) {
      return forNumber(value);
    }

    public static Icon forNumber(int value) {
      switch (value) {
        case 0: return DRAWABLE_ICON_UNDEFINED;
        case 1: return PROGRESSBAR_DEFAULT_INITIAL_STEP;
        case 2: return PROGRESSBAR_DEFAULT_DATA_COLLECTION;
        case 3: return PROGRESSBAR_DEFAULT_PAYMENT;
        case 4: return PROGRESSBAR_DEFAULT_FINAL_STEP;
        case 5: return SITTING_PERSON;
        case 6: return TICKET_STUB;
        case 7: return SHOPPING_BASKET;
        case 8: return FAST_FOOD;
        case 9: return LOCAL_DINING;
        case 10: return COGWHEEL;
        case 11: return KEY;
        case 12: return CAR;
        case 13: return GROCERY;
        case 14: return VISIBILITY_ON;
        case 15: return VISIBILITY_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Icon>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Icon> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Icon>() {
            @java.lang.Override
            public Icon findValueByNumber(int number) {
              return Icon.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return IconVerifier.INSTANCE;
    }

    private static final class IconVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new IconVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Icon.forNumber(number) != null;
            }
          };

    private final int value;

    private Icon(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.DrawableProto.Icon)
  }

  private int bitField0_;
  private int drawableCase_ = 0;
  private java.lang.Object drawable_;
  public enum DrawableCase {
    RESOURCE_IDENTIFIER(1),
    BITMAP(2),
    SHAPE(3),
    ICON(4),
    BASE64(5),
    FAVICON(6),
    DRAWABLE_NOT_SET(0);
    private final int value;
    private DrawableCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DrawableCase valueOf(int value) {
      return forNumber(value);
    }

    public static DrawableCase forNumber(int value) {
      switch (value) {
        case 1: return RESOURCE_IDENTIFIER;
        case 2: return BITMAP;
        case 3: return SHAPE;
        case 4: return ICON;
        case 5: return BASE64;
        case 6: return FAVICON;
        case 0: return DRAWABLE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public DrawableCase
  getDrawableCase() {
    return DrawableCase.forNumber(
        drawableCase_);
  }

  private void clearDrawable() {
    drawableCase_ = 0;
    drawable_ = null;
  }

  public static final int RESOURCE_IDENTIFIER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   * @return Whether the resourceIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasResourceIdentifier() {
    return drawableCase_ == 1;
  }
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   * @return The resourceIdentifier.
   */
  @java.lang.Override
  public java.lang.String getResourceIdentifier() {
    java.lang.String ref = "";
    if (drawableCase_ == 1) {
      ref = (java.lang.String) drawable_;
    }
    return ref;
  }
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   * @return The bytes for resourceIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResourceIdentifierBytes() {
    java.lang.String ref = "";
    if (drawableCase_ == 1) {
      ref = (java.lang.String) drawable_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   * @param value The resourceIdentifier to set.
   */
  private void setResourceIdentifier(
      java.lang.String value) {
    value.getClass();
  drawableCase_ = 1;
    drawable_ = value;
  }
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   */
  private void clearResourceIdentifier() {
    if (drawableCase_ == 1) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }
  /**
   * <pre>
   * The resource identifier of a drawable.
   * </pre>
   *
   * <code>string resource_identifier = 1;</code>
   * @param value The bytes for resourceIdentifier to set.
   */
  private void setResourceIdentifierBytes(
      com.google.protobuf.ByteString value) {
    drawable_ = value.toStringUtf8();
    drawableCase_ = 1;
  }

  public static final int BITMAP_FIELD_NUMBER = 2;
  /**
   * <pre>
   * A bitmap retrieved from a URL.
   * </pre>
   *
   * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
   */
  @java.lang.Override
  public boolean hasBitmap() {
    return drawableCase_ == 2;
  }
  /**
   * <pre>
   * A bitmap retrieved from a URL.
   * </pre>
   *
   * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto getBitmap() {
    if (drawableCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto) drawable_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto.getDefaultInstance();
  }
  /**
   * <pre>
   * A bitmap retrieved from a URL.
   * </pre>
   *
   * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
   */
  private void setBitmap(org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto value) {
    value.getClass();
  drawable_ = value;
    drawableCase_ = 2;
  }
  /**
   * <pre>
   * A bitmap retrieved from a URL.
   * </pre>
   *
   * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
   */
  private void mergeBitmap(org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto value) {
    value.getClass();
  if (drawableCase_ == 2 &&
        drawable_ != org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto.getDefaultInstance()) {
      drawable_ = org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto) drawable_)
          .mergeFrom(value).buildPartial();
    } else {
      drawable_ = value;
    }
    drawableCase_ = 2;
  }
  /**
   * <pre>
   * A bitmap retrieved from a URL.
   * </pre>
   *
   * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
   */
  private void clearBitmap() {
    if (drawableCase_ == 2) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }

  public static final int SHAPE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * A shape, e.g., a rounded rectangle.
   * </pre>
   *
   * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
   */
  @java.lang.Override
  public boolean hasShape() {
    return drawableCase_ == 3;
  }
  /**
   * <pre>
   * A shape, e.g., a rounded rectangle.
   * </pre>
   *
   * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto getShape() {
    if (drawableCase_ == 3) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto) drawable_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto.getDefaultInstance();
  }
  /**
   * <pre>
   * A shape, e.g., a rounded rectangle.
   * </pre>
   *
   * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
   */
  private void setShape(org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto value) {
    value.getClass();
  drawable_ = value;
    drawableCase_ = 3;
  }
  /**
   * <pre>
   * A shape, e.g., a rounded rectangle.
   * </pre>
   *
   * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
   */
  private void mergeShape(org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto value) {
    value.getClass();
  if (drawableCase_ == 3 &&
        drawable_ != org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto.getDefaultInstance()) {
      drawable_ = org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto) drawable_)
          .mergeFrom(value).buildPartial();
    } else {
      drawable_ = value;
    }
    drawableCase_ = 3;
  }
  /**
   * <pre>
   * A shape, e.g., a rounded rectangle.
   * </pre>
   *
   * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
   */
  private void clearShape() {
    if (drawableCase_ == 3) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }

  public static final int ICON_FIELD_NUMBER = 4;
  /**
   * <pre>
   * An icon from a predefined set of known icons.
   * </pre>
   *
   * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
   * @return Whether the icon field is set.
   */
  @java.lang.Override
  public boolean hasIcon() {
    return drawableCase_ == 4;
  }
  /**
   * <pre>
   * An icon from a predefined set of known icons.
   * </pre>
   *
   * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
   * @return The icon.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon getIcon() {
    if (drawableCase_ == 4) {
      org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon result = org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon.forNumber((java.lang.Integer) drawable_);
      return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon.DRAWABLE_ICON_UNDEFINED : result;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon.DRAWABLE_ICON_UNDEFINED;
  }
  /**
   * <pre>
   * An icon from a predefined set of known icons.
   * </pre>
   *
   * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
   * @param value The icon to set.
   */
  private void setIcon(org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon value) {
    drawable_ = value.getNumber();
    drawableCase_ = 4;
  }
  /**
   * <pre>
   * An icon from a predefined set of known icons.
   * </pre>
   *
   * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
   */
  private void clearIcon() {
    if (drawableCase_ == 4) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }

  public static final int BASE64_FIELD_NUMBER = 5;
  /**
   * <pre>
   * A Base64 encoded image string.
   * </pre>
   *
   * <code>bytes base64 = 5;</code>
   * @return Whether the base64 field is set.
   */
  @java.lang.Override
  public boolean hasBase64() {
    return drawableCase_ == 5;
  }
  /**
   * <pre>
   * A Base64 encoded image string.
   * </pre>
   *
   * <code>bytes base64 = 5;</code>
   * @return The base64.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBase64() {
    if (drawableCase_ == 5) {
      return (com.google.protobuf.ByteString) drawable_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <pre>
   * A Base64 encoded image string.
   * </pre>
   *
   * <code>bytes base64 = 5;</code>
   * @param value The base64 to set.
   */
  private void setBase64(com.google.protobuf.ByteString value) {
    value.getClass();
  drawableCase_ = 5;
    drawable_ = value;
  }
  /**
   * <pre>
   * A Base64 encoded image string.
   * </pre>
   *
   * <code>bytes base64 = 5;</code>
   */
  private void clearBase64() {
    if (drawableCase_ == 5) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }

  public static final int FAVICON_FIELD_NUMBER = 6;
  /**
   * <pre>
   * The favicon for a given URL.
   * </pre>
   *
   * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
   */
  @java.lang.Override
  public boolean hasFavicon() {
    return drawableCase_ == 6;
  }
  /**
   * <pre>
   * The favicon for a given URL.
   * </pre>
   *
   * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto getFavicon() {
    if (drawableCase_ == 6) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto) drawable_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The favicon for a given URL.
   * </pre>
   *
   * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
   */
  private void setFavicon(org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto value) {
    value.getClass();
  drawable_ = value;
    drawableCase_ = 6;
  }
  /**
   * <pre>
   * The favicon for a given URL.
   * </pre>
   *
   * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
   */
  private void mergeFavicon(org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto value) {
    value.getClass();
  if (drawableCase_ == 6 &&
        drawable_ != org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto.getDefaultInstance()) {
      drawable_ = org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto) drawable_)
          .mergeFrom(value).buildPartial();
    } else {
      drawable_ = value;
    }
    drawableCase_ = 6;
  }
  /**
   * <pre>
   * The favicon for a given URL.
   * </pre>
   *
   * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
   */
  private void clearFavicon() {
    if (drawableCase_ == 6) {
      drawableCase_ = 0;
      drawable_ = null;
    }
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A drawable for use in backgrounds or in image views.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.DrawableProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.DrawableProto)
      org.chromium.chrome.browser.autofill_assistant.proto.DrawableProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public DrawableCase
        getDrawableCase() {
      return instance.getDrawableCase();
    }

    public Builder clearDrawable() {
      copyOnWrite();
      instance.clearDrawable();
      return this;
    }


    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @return Whether the resourceIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasResourceIdentifier() {
      return instance.hasResourceIdentifier();
    }
    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @return The resourceIdentifier.
     */
    @java.lang.Override
    public java.lang.String getResourceIdentifier() {
      return instance.getResourceIdentifier();
    }
    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @return The bytes for resourceIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResourceIdentifierBytes() {
      return instance.getResourceIdentifierBytes();
    }
    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @param value The resourceIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setResourceIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setResourceIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearResourceIdentifier() {
      copyOnWrite();
      instance.clearResourceIdentifier();
      return this;
    }
    /**
     * <pre>
     * The resource identifier of a drawable.
     * </pre>
     *
     * <code>string resource_identifier = 1;</code>
     * @param value The bytes for resourceIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setResourceIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResourceIdentifierBytes(value);
      return this;
    }

    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    @java.lang.Override
    public boolean hasBitmap() {
      return instance.hasBitmap();
    }
    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto getBitmap() {
      return instance.getBitmap();
    }
    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    public Builder setBitmap(org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto value) {
      copyOnWrite();
      instance.setBitmap(value);
      return this;
    }
    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    public Builder setBitmap(
        org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto.Builder builderForValue) {
      copyOnWrite();
      instance.setBitmap(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    public Builder mergeBitmap(org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto value) {
      copyOnWrite();
      instance.mergeBitmap(value);
      return this;
    }
    /**
     * <pre>
     * A bitmap retrieved from a URL.
     * </pre>
     *
     * <code>.autofill_assistant.BitmapDrawableProto bitmap = 2;</code>
     */
    public Builder clearBitmap() {
      copyOnWrite();
      instance.clearBitmap();
      return this;
    }

    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    @java.lang.Override
    public boolean hasShape() {
      return instance.hasShape();
    }
    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto getShape() {
      return instance.getShape();
    }
    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    public Builder setShape(org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto value) {
      copyOnWrite();
      instance.setShape(value);
      return this;
    }
    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    public Builder setShape(
        org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto.Builder builderForValue) {
      copyOnWrite();
      instance.setShape(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    public Builder mergeShape(org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto value) {
      copyOnWrite();
      instance.mergeShape(value);
      return this;
    }
    /**
     * <pre>
     * A shape, e.g., a rounded rectangle.
     * </pre>
     *
     * <code>.autofill_assistant.ShapeDrawableProto shape = 3;</code>
     */
    public Builder clearShape() {
      copyOnWrite();
      instance.clearShape();
      return this;
    }

    /**
     * <pre>
     * An icon from a predefined set of known icons.
     * </pre>
     *
     * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
     * @return Whether the icon field is set.
     */
    @java.lang.Override
    public boolean hasIcon() {
      return instance.hasIcon();
    }
    /**
     * <pre>
     * An icon from a predefined set of known icons.
     * </pre>
     *
     * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
     * @return The icon.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon getIcon() {
      return instance.getIcon();
    }
    /**
     * <pre>
     * An icon from a predefined set of known icons.
     * </pre>
     *
     * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
     * @param value The icon to set.
     * @return This builder for chaining.
     */
    public Builder setIcon(org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon value) {
      copyOnWrite();
      instance.setIcon(value);
      return this;
    }
    /**
     * <pre>
     * An icon from a predefined set of known icons.
     * </pre>
     *
     * <code>.autofill_assistant.DrawableProto.Icon icon = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIcon() {
      copyOnWrite();
      instance.clearIcon();
      return this;
    }

    /**
     * <pre>
     * A Base64 encoded image string.
     * </pre>
     *
     * <code>bytes base64 = 5;</code>
     * @return Whether the base64 field is set.
     */
    @java.lang.Override
    public boolean hasBase64() {
      return instance.hasBase64();
    }
    /**
     * <pre>
     * A Base64 encoded image string.
     * </pre>
     *
     * <code>bytes base64 = 5;</code>
     * @return The base64.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBase64() {
      return instance.getBase64();
    }
    /**
     * <pre>
     * A Base64 encoded image string.
     * </pre>
     *
     * <code>bytes base64 = 5;</code>
     * @param value The base64 to set.
     * @return This builder for chaining.
     */
    public Builder setBase64(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBase64(value);
      return this;
    }
    /**
     * <pre>
     * A Base64 encoded image string.
     * </pre>
     *
     * <code>bytes base64 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearBase64() {
      copyOnWrite();
      instance.clearBase64();
      return this;
    }

    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    @java.lang.Override
    public boolean hasFavicon() {
      return instance.hasFavicon();
    }
    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto getFavicon() {
      return instance.getFavicon();
    }
    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    public Builder setFavicon(org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto value) {
      copyOnWrite();
      instance.setFavicon(value);
      return this;
    }
    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    public Builder setFavicon(
        org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto.Builder builderForValue) {
      copyOnWrite();
      instance.setFavicon(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    public Builder mergeFavicon(org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto value) {
      copyOnWrite();
      instance.mergeFavicon(value);
      return this;
    }
    /**
     * <pre>
     * The favicon for a given URL.
     * </pre>
     *
     * <code>.autofill_assistant.FaviconDrawableProto favicon = 6;</code>
     */
    public Builder clearFavicon() {
      copyOnWrite();
      instance.clearFavicon();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.DrawableProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "drawable_",
            "drawableCase_",
            "bitField0_",
            org.chromium.chrome.browser.autofill_assistant.proto.BitmapDrawableProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ShapeDrawableProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.Icon.internalGetVerifier(),
            org.chromium.chrome.browser.autofill_assistant.proto.FaviconDrawableProto.class,
          };
          java.lang.String info =
              "\u0001\u0006\u0001\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u103b\u0000\u0002" +
              "\u103c\u0000\u0003\u103c\u0000\u0004\u103f\u0000\u0005\u103d\u0000\u0006\u103c\u0000" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.DrawableProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto DEFAULT_INSTANCE;
  static {
    DrawableProto defaultInstance = new DrawableProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DrawableProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.DrawableProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DrawableProto> PARSER;

  public static com.google.protobuf.Parser<DrawableProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

