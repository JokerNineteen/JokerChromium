// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.TriggerScriptConditionProto}
 */
public  final class TriggerScriptConditionProto extends
    com.google.protobuf.GeneratedMessageLite<
        TriggerScriptConditionProto, TriggerScriptConditionProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.TriggerScriptConditionProto)
    TriggerScriptConditionProtoOrBuilder {
  private TriggerScriptConditionProto() {
  }
  private int bitField0_;
  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase {
    ALL_OF(1),
    ANY_OF(2),
    NONE_OF(3),
    SELECTOR(8),
    STORED_LOGIN_CREDENTIALS(5),
    IS_FIRST_TIME_USER(6),
    EXPERIMENT_ID(7),
    KEYBOARD_HIDDEN(9),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return ALL_OF;
        case 2: return ANY_OF;
        case 3: return NONE_OF;
        case 8: return SELECTOR;
        case 5: return STORED_LOGIN_CREDENTIALS;
        case 6: return IS_FIRST_TIME_USER;
        case 7: return EXPERIMENT_ID;
        case 9: return KEYBOARD_HIDDEN;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  private void clearType() {
    typeCase_ = 0;
    type_ = null;
  }

  public static final int ALL_OF_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
   */
  @java.lang.Override
  public boolean hasAllOf() {
    return typeCase_ == 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getAllOf() {
    if (typeCase_ == 1) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
   */
  private void setAllOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
   */
  private void mergeAllOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  if (typeCase_ == 1 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
   */
  private void clearAllOf() {
    if (typeCase_ == 1) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int ANY_OF_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
   */
  @java.lang.Override
  public boolean hasAnyOf() {
    return typeCase_ == 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getAnyOf() {
    if (typeCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
   */
  private void setAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
   */
  private void mergeAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  if (typeCase_ == 2 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
   */
  private void clearAnyOf() {
    if (typeCase_ == 2) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int NONE_OF_FIELD_NUMBER = 3;
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
   */
  @java.lang.Override
  public boolean hasNoneOf() {
    return typeCase_ == 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getNoneOf() {
    if (typeCase_ == 3) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
   */
  private void setNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
   */
  private void mergeNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
    value.getClass();
  if (typeCase_ == 3 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
   */
  private void clearNoneOf() {
    if (typeCase_ == 3) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int SELECTOR_FIELD_NUMBER = 8;
  /**
   * <pre>
   * The condition matches if the specified selector matches the current DOM..
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto selector = 8;</code>
   */
  @java.lang.Override
  public boolean hasSelector() {
    return typeCase_ == 8;
  }
  /**
   * <pre>
   * The condition matches if the specified selector matches the current DOM..
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto selector = 8;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getSelector() {
    if (typeCase_ == 8) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if the specified selector matches the current DOM..
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto selector = 8;</code>
   */
  private void setSelector(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 8;
  }
  /**
   * <pre>
   * The condition matches if the specified selector matches the current DOM..
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto selector = 8;</code>
   */
  private void mergeSelector(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  if (typeCase_ == 8 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 8;
  }
  /**
   * <pre>
   * The condition matches if the specified selector matches the current DOM..
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto selector = 8;</code>
   */
  private void clearSelector() {
    if (typeCase_ == 8) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int STORED_LOGIN_CREDENTIALS_FIELD_NUMBER = 5;
  /**
   * <pre>
   * The condition matches if the user has stored login credentials for the
   * domain.
   * </pre>
   *
   * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
   */
  @java.lang.Override
  public boolean hasStoredLoginCredentials() {
    return typeCase_ == 5;
  }
  /**
   * <pre>
   * The condition matches if the user has stored login credentials for the
   * domain.
   * </pre>
   *
   * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.Empty getStoredLoginCredentials() {
    if (typeCase_ == 5) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if the user has stored login credentials for the
   * domain.
   * </pre>
   *
   * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
   */
  private void setStoredLoginCredentials(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  type_ = value;
    typeCase_ = 5;
  }
  /**
   * <pre>
   * The condition matches if the user has stored login credentials for the
   * domain.
   * </pre>
   *
   * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
   */
  private void mergeStoredLoginCredentials(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  if (typeCase_ == 5 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.Empty.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 5;
  }
  /**
   * <pre>
   * The condition matches if the user has stored login credentials for the
   * domain.
   * </pre>
   *
   * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
   */
  private void clearStoredLoginCredentials() {
    if (typeCase_ == 5) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int IS_FIRST_TIME_USER_FIELD_NUMBER = 6;
  /**
   * <pre>
   * The condition matches if the user has never seen a trigger script before.
   * </pre>
   *
   * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
   */
  @java.lang.Override
  public boolean hasIsFirstTimeUser() {
    return typeCase_ == 6;
  }
  /**
   * <pre>
   * The condition matches if the user has never seen a trigger script before.
   * </pre>
   *
   * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.Empty getIsFirstTimeUser() {
    if (typeCase_ == 6) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if the user has never seen a trigger script before.
   * </pre>
   *
   * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
   */
  private void setIsFirstTimeUser(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  type_ = value;
    typeCase_ = 6;
  }
  /**
   * <pre>
   * The condition matches if the user has never seen a trigger script before.
   * </pre>
   *
   * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
   */
  private void mergeIsFirstTimeUser(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  if (typeCase_ == 6 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.Empty.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 6;
  }
  /**
   * <pre>
   * The condition matches if the user has never seen a trigger script before.
   * </pre>
   *
   * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
   */
  private void clearIsFirstTimeUser() {
    if (typeCase_ == 6) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int EXPERIMENT_ID_FIELD_NUMBER = 7;
  /**
   * <pre>
   * The condition matches if the client is in the specified experiment.
   * </pre>
   *
   * <code>int32 experiment_id = 7;</code>
   * @return Whether the experimentId field is set.
   */
  @java.lang.Override
  public boolean hasExperimentId() {
    return typeCase_ == 7;
  }
  /**
   * <pre>
   * The condition matches if the client is in the specified experiment.
   * </pre>
   *
   * <code>int32 experiment_id = 7;</code>
   * @return The experimentId.
   */
  @java.lang.Override
  public int getExperimentId() {
    if (typeCase_ == 7) {
      return (java.lang.Integer) type_;
    }
    return 0;
  }
  /**
   * <pre>
   * The condition matches if the client is in the specified experiment.
   * </pre>
   *
   * <code>int32 experiment_id = 7;</code>
   * @param value The experimentId to set.
   */
  private void setExperimentId(int value) {
    typeCase_ = 7;
    type_ = value;
  }
  /**
   * <pre>
   * The condition matches if the client is in the specified experiment.
   * </pre>
   *
   * <code>int32 experiment_id = 7;</code>
   */
  private void clearExperimentId() {
    if (typeCase_ == 7) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int KEYBOARD_HIDDEN_FIELD_NUMBER = 9;
  /**
   * <pre>
   * The condition matches if the keyboard is hidden.
   * </pre>
   *
   * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
   */
  @java.lang.Override
  public boolean hasKeyboardHidden() {
    return typeCase_ == 9;
  }
  /**
   * <pre>
   * The condition matches if the keyboard is hidden.
   * </pre>
   *
   * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.Empty getKeyboardHidden() {
    if (typeCase_ == 9) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if the keyboard is hidden.
   * </pre>
   *
   * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
   */
  private void setKeyboardHidden(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  type_ = value;
    typeCase_ = 9;
  }
  /**
   * <pre>
   * The condition matches if the keyboard is hidden.
   * </pre>
   *
   * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
   */
  private void mergeKeyboardHidden(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
    value.getClass();
  if (typeCase_ == 9 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.Empty.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.Empty.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.Empty) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 9;
  }
  /**
   * <pre>
   * The condition matches if the keyboard is hidden.
   * </pre>
   *
   * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
   */
  private void clearKeyboardHidden() {
    if (typeCase_ == 9) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.TriggerScriptConditionProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.TriggerScriptConditionProto)
      org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public TypeCase
        getTypeCase() {
      return instance.getTypeCase();
    }

    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }


    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    @java.lang.Override
    public boolean hasAllOf() {
      return instance.hasAllOf();
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getAllOf() {
      return instance.getAllOf();
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    public Builder setAllOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.setAllOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    public Builder setAllOf(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setAllOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    public Builder mergeAllOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.mergeAllOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto all_of = 1;</code>
     */
    public Builder clearAllOf() {
      copyOnWrite();
      instance.clearAllOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    @java.lang.Override
    public boolean hasAnyOf() {
      return instance.hasAnyOf();
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getAnyOf() {
      return instance.getAnyOf();
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    public Builder setAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.setAnyOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    public Builder setAnyOf(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setAnyOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    public Builder mergeAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.mergeAnyOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto any_of = 2;</code>
     */
    public Builder clearAnyOf() {
      copyOnWrite();
      instance.clearAnyOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    @java.lang.Override
    public boolean hasNoneOf() {
      return instance.hasNoneOf();
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto getNoneOf() {
      return instance.getNoneOf();
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    public Builder setNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.setNoneOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    public Builder setNoneOf(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setNoneOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    public Builder mergeNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto value) {
      copyOnWrite();
      instance.mergeNoneOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.TriggerScriptConditionsProto none_of = 3;</code>
     */
    public Builder clearNoneOf() {
      copyOnWrite();
      instance.clearNoneOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    @java.lang.Override
    public boolean hasSelector() {
      return instance.hasSelector();
    }
    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getSelector() {
      return instance.getSelector();
    }
    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    public Builder setSelector(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    public Builder setSelector(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.Builder builderForValue) {
      copyOnWrite();
      instance.setSelector(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    public Builder mergeSelector(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.mergeSelector(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the specified selector matches the current DOM..
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto selector = 8;</code>
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    @java.lang.Override
    public boolean hasStoredLoginCredentials() {
      return instance.hasStoredLoginCredentials();
    }
    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.Empty getStoredLoginCredentials() {
      return instance.getStoredLoginCredentials();
    }
    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    public Builder setStoredLoginCredentials(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.setStoredLoginCredentials(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    public Builder setStoredLoginCredentials(
        org.chromium.chrome.browser.autofill_assistant.proto.Empty.Builder builderForValue) {
      copyOnWrite();
      instance.setStoredLoginCredentials(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    public Builder mergeStoredLoginCredentials(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.mergeStoredLoginCredentials(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has stored login credentials for the
     * domain.
     * </pre>
     *
     * <code>.autofill_assistant.Empty stored_login_credentials = 5;</code>
     */
    public Builder clearStoredLoginCredentials() {
      copyOnWrite();
      instance.clearStoredLoginCredentials();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    @java.lang.Override
    public boolean hasIsFirstTimeUser() {
      return instance.hasIsFirstTimeUser();
    }
    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.Empty getIsFirstTimeUser() {
      return instance.getIsFirstTimeUser();
    }
    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    public Builder setIsFirstTimeUser(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.setIsFirstTimeUser(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    public Builder setIsFirstTimeUser(
        org.chromium.chrome.browser.autofill_assistant.proto.Empty.Builder builderForValue) {
      copyOnWrite();
      instance.setIsFirstTimeUser(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    public Builder mergeIsFirstTimeUser(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.mergeIsFirstTimeUser(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the user has never seen a trigger script before.
     * </pre>
     *
     * <code>.autofill_assistant.Empty is_first_time_user = 6;</code>
     */
    public Builder clearIsFirstTimeUser() {
      copyOnWrite();
      instance.clearIsFirstTimeUser();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the client is in the specified experiment.
     * </pre>
     *
     * <code>int32 experiment_id = 7;</code>
     * @return Whether the experimentId field is set.
     */
    @java.lang.Override
    public boolean hasExperimentId() {
      return instance.hasExperimentId();
    }
    /**
     * <pre>
     * The condition matches if the client is in the specified experiment.
     * </pre>
     *
     * <code>int32 experiment_id = 7;</code>
     * @return The experimentId.
     */
    @java.lang.Override
    public int getExperimentId() {
      return instance.getExperimentId();
    }
    /**
     * <pre>
     * The condition matches if the client is in the specified experiment.
     * </pre>
     *
     * <code>int32 experiment_id = 7;</code>
     * @param value The experimentId to set.
     * @return This builder for chaining.
     */
    public Builder setExperimentId(int value) {
      copyOnWrite();
      instance.setExperimentId(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the client is in the specified experiment.
     * </pre>
     *
     * <code>int32 experiment_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearExperimentId() {
      copyOnWrite();
      instance.clearExperimentId();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    @java.lang.Override
    public boolean hasKeyboardHidden() {
      return instance.hasKeyboardHidden();
    }
    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.Empty getKeyboardHidden() {
      return instance.getKeyboardHidden();
    }
    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    public Builder setKeyboardHidden(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.setKeyboardHidden(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    public Builder setKeyboardHidden(
        org.chromium.chrome.browser.autofill_assistant.proto.Empty.Builder builderForValue) {
      copyOnWrite();
      instance.setKeyboardHidden(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    public Builder mergeKeyboardHidden(org.chromium.chrome.browser.autofill_assistant.proto.Empty value) {
      copyOnWrite();
      instance.mergeKeyboardHidden(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the keyboard is hidden.
     * </pre>
     *
     * <code>.autofill_assistant.Empty keyboard_hidden = 9;</code>
     */
    public Builder clearKeyboardHidden() {
      copyOnWrite();
      instance.clearKeyboardHidden();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.TriggerScriptConditionProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "type_",
            "typeCase_",
            "bitField0_",
            org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.Empty.class,
            org.chromium.chrome.browser.autofill_assistant.proto.Empty.class,
            org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.Empty.class,
          };
          java.lang.String info =
              "\u0001\b\u0001\u0001\u0001\t\b\u0000\u0000\u0000\u0001\u103c\u0000\u0002\u103c\u0000" +
              "\u0003\u103c\u0000\u0005\u103c\u0000\u0006\u103c\u0000\u0007\u1037\u0000\b\u103c" +
              "\u0000\t\u103c\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.TriggerScriptConditionProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto DEFAULT_INSTANCE;
  static {
    TriggerScriptConditionProto defaultInstance = new TriggerScriptConditionProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TriggerScriptConditionProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TriggerScriptConditionProto> PARSER;

  public static com.google.protobuf.Parser<TriggerScriptConditionProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

