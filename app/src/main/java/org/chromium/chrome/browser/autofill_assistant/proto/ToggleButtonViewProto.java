// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_layout.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A toggle button (either a radio button or a check box). Note: view identifier
 * is mandatory!
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ToggleButtonViewProto}
 */
public  final class ToggleButtonViewProto extends
    com.google.protobuf.GeneratedMessageLite<
        ToggleButtonViewProto, ToggleButtonViewProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ToggleButtonViewProto)
    ToggleButtonViewProtoOrBuilder {
  private ToggleButtonViewProto() {
    modelIdentifier_ = "";
  }
  public interface CheckBoxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ToggleButtonViewProto.CheckBox)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code autofill_assistant.ToggleButtonViewProto.CheckBox}
   */
  public  static final class CheckBox extends
      com.google.protobuf.GeneratedMessageLite<
          CheckBox, CheckBox.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ToggleButtonViewProto.CheckBox)
      CheckBoxOrBuilder {
    private CheckBox() {
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.ToggleButtonViewProto.CheckBox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ToggleButtonViewProto.CheckBox)
        org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBoxOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:autofill_assistant.ToggleButtonViewProto.CheckBox)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0001\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ToggleButtonViewProto.CheckBox)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox DEFAULT_INSTANCE;
    static {
      CheckBox defaultInstance = new CheckBox();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CheckBox.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CheckBox> PARSER;

    public static com.google.protobuf.Parser<CheckBox> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RadioButtonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ToggleButtonViewProto.RadioButton)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return Whether the radioGroupIdentifier field is set.
     */
    boolean hasRadioGroupIdentifier();
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return The radioGroupIdentifier.
     */
    java.lang.String getRadioGroupIdentifier();
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return The bytes for radioGroupIdentifier.
     */
    com.google.protobuf.ByteString
        getRadioGroupIdentifierBytes();
  }
  /**
   * Protobuf type {@code autofill_assistant.ToggleButtonViewProto.RadioButton}
   */
  public  static final class RadioButton extends
      com.google.protobuf.GeneratedMessageLite<
          RadioButton, RadioButton.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ToggleButtonViewProto.RadioButton)
      RadioButtonOrBuilder {
    private RadioButton() {
      radioGroupIdentifier_ = "";
    }
    private int bitField0_;
    public static final int RADIO_GROUP_IDENTIFIER_FIELD_NUMBER = 1;
    private java.lang.String radioGroupIdentifier_;
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return Whether the radioGroupIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasRadioGroupIdentifier() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return The radioGroupIdentifier.
     */
    @java.lang.Override
    public java.lang.String getRadioGroupIdentifier() {
      return radioGroupIdentifier_;
    }
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @return The bytes for radioGroupIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRadioGroupIdentifierBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(radioGroupIdentifier_);
    }
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @param value The radioGroupIdentifier to set.
     */
    private void setRadioGroupIdentifier(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      radioGroupIdentifier_ = value;
    }
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     */
    private void clearRadioGroupIdentifier() {
      bitField0_ = (bitField0_ & ~0x00000001);
      radioGroupIdentifier_ = getDefaultInstance().getRadioGroupIdentifier();
    }
    /**
     * <pre>
     * This is an arbitrary string that should be shared among all radio buttons
     * belonging to the same exclusion group.
     * </pre>
     *
     * <code>optional string radio_group_identifier = 1;</code>
     * @param value The bytes for radioGroupIdentifier to set.
     */
    private void setRadioGroupIdentifierBytes(
        com.google.protobuf.ByteString value) {
      radioGroupIdentifier_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.ToggleButtonViewProto.RadioButton}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ToggleButtonViewProto.RadioButton)
        org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButtonOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @return Whether the radioGroupIdentifier field is set.
       */
      @java.lang.Override
      public boolean hasRadioGroupIdentifier() {
        return instance.hasRadioGroupIdentifier();
      }
      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @return The radioGroupIdentifier.
       */
      @java.lang.Override
      public java.lang.String getRadioGroupIdentifier() {
        return instance.getRadioGroupIdentifier();
      }
      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @return The bytes for radioGroupIdentifier.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRadioGroupIdentifierBytes() {
        return instance.getRadioGroupIdentifierBytes();
      }
      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @param value The radioGroupIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setRadioGroupIdentifier(
          java.lang.String value) {
        copyOnWrite();
        instance.setRadioGroupIdentifier(value);
        return this;
      }
      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRadioGroupIdentifier() {
        copyOnWrite();
        instance.clearRadioGroupIdentifier();
        return this;
      }
      /**
       * <pre>
       * This is an arbitrary string that should be shared among all radio buttons
       * belonging to the same exclusion group.
       * </pre>
       *
       * <code>optional string radio_group_identifier = 1;</code>
       * @param value The bytes for radioGroupIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setRadioGroupIdentifierBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRadioGroupIdentifierBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.ToggleButtonViewProto.RadioButton)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "radioGroupIdentifier_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1008\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ToggleButtonViewProto.RadioButton)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton DEFAULT_INSTANCE;
    static {
      RadioButton defaultInstance = new RadioButton();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RadioButton.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RadioButton> PARSER;

    public static com.google.protobuf.Parser<RadioButton> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  private int kindCase_ = 0;
  private java.lang.Object kind_;
  public enum KindCase {
    CHECK_BOX(1),
    RADIO_BUTTON(2),
    KIND_NOT_SET(0);
    private final int value;
    private KindCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KindCase valueOf(int value) {
      return forNumber(value);
    }

    public static KindCase forNumber(int value) {
      switch (value) {
        case 1: return CHECK_BOX;
        case 2: return RADIO_BUTTON;
        case 0: return KIND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public KindCase
  getKindCase() {
    return KindCase.forNumber(
        kindCase_);
  }

  private void clearKind() {
    kindCase_ = 0;
    kind_ = null;
  }

  public static final int CHECK_BOX_FIELD_NUMBER = 1;
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
   */
  @java.lang.Override
  public boolean hasCheckBox() {
    return kindCase_ == 1;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox getCheckBox() {
    if (kindCase_ == 1) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.getDefaultInstance();
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
   */
  private void setCheckBox(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 1;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
   */
  private void mergeCheckBox(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox value) {
    value.getClass();
  if (kindCase_ == 1 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 1;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
   */
  private void clearCheckBox() {
    if (kindCase_ == 1) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int RADIO_BUTTON_FIELD_NUMBER = 2;
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
   */
  @java.lang.Override
  public boolean hasRadioButton() {
    return kindCase_ == 2;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton getRadioButton() {
    if (kindCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.getDefaultInstance();
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
   */
  private void setRadioButton(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 2;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
   */
  private void mergeRadioButton(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton value) {
    value.getClass();
  if (kindCase_ == 2 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 2;
  }
  /**
   * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
   */
  private void clearRadioButton() {
    if (kindCase_ == 2) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int LEFT_CONTENT_VIEW_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.ViewProto leftContentView_;
  /**
   * <pre>
   * The view to display to the left of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
   */
  @java.lang.Override
  public boolean hasLeftContentView() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The view to display to the left of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ViewProto getLeftContentView() {
    return leftContentView_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.getDefaultInstance() : leftContentView_;
  }
  /**
   * <pre>
   * The view to display to the left of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
   */
  private void setLeftContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
    value.getClass();
  leftContentView_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * The view to display to the left of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLeftContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
    value.getClass();
  if (leftContentView_ != null &&
        leftContentView_ != org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.getDefaultInstance()) {
      leftContentView_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.newBuilder(leftContentView_).mergeFrom(value).buildPartial();
    } else {
      leftContentView_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * The view to display to the left of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
   */
  private void clearLeftContentView() {  leftContentView_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int RIGHT_CONTENT_VIEW_FIELD_NUMBER = 4;
  private org.chromium.chrome.browser.autofill_assistant.proto.ViewProto rightContentView_;
  /**
   * <pre>
   * The view to display to the right of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
   */
  @java.lang.Override
  public boolean hasRightContentView() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The view to display to the right of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ViewProto getRightContentView() {
    return rightContentView_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.getDefaultInstance() : rightContentView_;
  }
  /**
   * <pre>
   * The view to display to the right of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
   */
  private void setRightContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
    value.getClass();
  rightContentView_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * The view to display to the right of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeRightContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
    value.getClass();
  if (rightContentView_ != null &&
        rightContentView_ != org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.getDefaultInstance()) {
      rightContentView_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.newBuilder(rightContentView_).mergeFrom(value).buildPartial();
    } else {
      rightContentView_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * The view to display to the right of the toggle (if any).
   * </pre>
   *
   * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
   */
  private void clearRightContentView() {  rightContentView_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int MODEL_IDENTIFIER_FIELD_NUMBER = 5;
  private java.lang.String modelIdentifier_;
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   * @return Whether the modelIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasModelIdentifier() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   * @return The modelIdentifier.
   */
  @java.lang.Override
  public java.lang.String getModelIdentifier() {
    return modelIdentifier_;
  }
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   * @return The bytes for modelIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelIdentifierBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(modelIdentifier_);
  }
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   * @param value The modelIdentifier to set.
   */
  private void setModelIdentifier(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    modelIdentifier_ = value;
  }
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   */
  private void clearModelIdentifier() {
    bitField0_ = (bitField0_ & ~0x00000010);
    modelIdentifier_ = getDefaultInstance().getModelIdentifier();
  }
  /**
   * <pre>
   * The model identifier to keep in sync with the selection. Should point to a
   * single bool value.
   * </pre>
   *
   * <code>optional string model_identifier = 5;</code>
   * @param value The bytes for modelIdentifier to set.
   */
  private void setModelIdentifierBytes(
      com.google.protobuf.ByteString value) {
    modelIdentifier_ = value.toStringUtf8();
    bitField0_ |= 0x00000010;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A toggle button (either a radio button or a check box). Note: view identifier
   * is mandatory!
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ToggleButtonViewProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ToggleButtonViewProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public KindCase
        getKindCase() {
      return instance.getKindCase();
    }

    public Builder clearKind() {
      copyOnWrite();
      instance.clearKind();
      return this;
    }


    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    @java.lang.Override
    public boolean hasCheckBox() {
      return instance.hasCheckBox();
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox getCheckBox() {
      return instance.getCheckBox();
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    public Builder setCheckBox(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox value) {
      copyOnWrite();
      instance.setCheckBox(value);
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    public Builder setCheckBox(
        org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.Builder builderForValue) {
      copyOnWrite();
      instance.setCheckBox(builderForValue.build());
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    public Builder mergeCheckBox(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox value) {
      copyOnWrite();
      instance.mergeCheckBox(value);
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.CheckBox check_box = 1;</code>
     */
    public Builder clearCheckBox() {
      copyOnWrite();
      instance.clearCheckBox();
      return this;
    }

    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    @java.lang.Override
    public boolean hasRadioButton() {
      return instance.hasRadioButton();
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton getRadioButton() {
      return instance.getRadioButton();
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    public Builder setRadioButton(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton value) {
      copyOnWrite();
      instance.setRadioButton(value);
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    public Builder setRadioButton(
        org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.Builder builderForValue) {
      copyOnWrite();
      instance.setRadioButton(builderForValue.build());
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    public Builder mergeRadioButton(org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton value) {
      copyOnWrite();
      instance.mergeRadioButton(value);
      return this;
    }
    /**
     * <code>.autofill_assistant.ToggleButtonViewProto.RadioButton radio_button = 2;</code>
     */
    public Builder clearRadioButton() {
      copyOnWrite();
      instance.clearRadioButton();
      return this;
    }

    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    @java.lang.Override
    public boolean hasLeftContentView() {
      return instance.hasLeftContentView();
    }
    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ViewProto getLeftContentView() {
      return instance.getLeftContentView();
    }
    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    public Builder setLeftContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
      copyOnWrite();
      instance.setLeftContentView(value);
      return this;
      }
    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    public Builder setLeftContentView(
        org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.Builder builderForValue) {
      copyOnWrite();
      instance.setLeftContentView(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    public Builder mergeLeftContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
      copyOnWrite();
      instance.mergeLeftContentView(value);
      return this;
    }
    /**
     * <pre>
     * The view to display to the left of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto left_content_view = 3;</code>
     */
    public Builder clearLeftContentView() {  copyOnWrite();
      instance.clearLeftContentView();
      return this;
    }

    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    @java.lang.Override
    public boolean hasRightContentView() {
      return instance.hasRightContentView();
    }
    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ViewProto getRightContentView() {
      return instance.getRightContentView();
    }
    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    public Builder setRightContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
      copyOnWrite();
      instance.setRightContentView(value);
      return this;
      }
    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    public Builder setRightContentView(
        org.chromium.chrome.browser.autofill_assistant.proto.ViewProto.Builder builderForValue) {
      copyOnWrite();
      instance.setRightContentView(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    public Builder mergeRightContentView(org.chromium.chrome.browser.autofill_assistant.proto.ViewProto value) {
      copyOnWrite();
      instance.mergeRightContentView(value);
      return this;
    }
    /**
     * <pre>
     * The view to display to the right of the toggle (if any).
     * </pre>
     *
     * <code>optional .autofill_assistant.ViewProto right_content_view = 4;</code>
     */
    public Builder clearRightContentView() {  copyOnWrite();
      instance.clearRightContentView();
      return this;
    }

    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @return Whether the modelIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasModelIdentifier() {
      return instance.hasModelIdentifier();
    }
    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @return The modelIdentifier.
     */
    @java.lang.Override
    public java.lang.String getModelIdentifier() {
      return instance.getModelIdentifier();
    }
    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @return The bytes for modelIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelIdentifierBytes() {
      return instance.getModelIdentifierBytes();
    }
    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @param value The modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setModelIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearModelIdentifier() {
      copyOnWrite();
      instance.clearModelIdentifier();
      return this;
    }
    /**
     * <pre>
     * The model identifier to keep in sync with the selection. Should point to a
     * single bool value.
     * </pre>
     *
     * <code>optional string model_identifier = 5;</code>
     * @param value The bytes for modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setModelIdentifierBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ToggleButtonViewProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "kind_",
            "kindCase_",
            "bitField0_",
            org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.CheckBox.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.RadioButton.class,
            "leftContentView_",
            "rightContentView_",
            "modelIdentifier_",
          };
          java.lang.String info =
              "\u0001\u0005\u0001\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u103c\u0000\u0002" +
              "\u103c\u0000\u0003\u1009\u0002\u0004\u1009\u0003\u0005\u1008\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ToggleButtonViewProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto DEFAULT_INSTANCE;
  static {
    ToggleButtonViewProto defaultInstance = new ToggleButtonViewProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ToggleButtonViewProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ToggleButtonViewProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ToggleButtonViewProto> PARSER;

  public static com.google.protobuf.Parser<ToggleButtonViewProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

