// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generic_ui.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Computes a value and stores the result to |result_model_identifier|.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ComputeValueProto}
 */
public  final class ComputeValueProto extends
    com.google.protobuf.GeneratedMessageLite<
        ComputeValueProto, ComputeValueProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ComputeValueProto)
    ComputeValueProtoOrBuilder {
  private ComputeValueProto() {
    resultModelIdentifier_ = "";
  }
  private int bitField0_;
  private int kindCase_ = 0;
  private java.lang.Object kind_;
  public enum KindCase {
    BOOLEAN_AND(2),
    BOOLEAN_OR(3),
    BOOLEAN_NOT(4),
    TO_STRING(5),
    COMPARISON(6),
    INTEGER_SUM(7),
    CREATE_CREDIT_CARD_RESPONSE(8),
    CREATE_LOGIN_OPTION_RESPONSE(9),
    KIND_NOT_SET(0);
    private final int value;
    private KindCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KindCase valueOf(int value) {
      return forNumber(value);
    }

    public static KindCase forNumber(int value) {
      switch (value) {
        case 2: return BOOLEAN_AND;
        case 3: return BOOLEAN_OR;
        case 4: return BOOLEAN_NOT;
        case 5: return TO_STRING;
        case 6: return COMPARISON;
        case 7: return INTEGER_SUM;
        case 8: return CREATE_CREDIT_CARD_RESPONSE;
        case 9: return CREATE_LOGIN_OPTION_RESPONSE;
        case 0: return KIND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public KindCase
  getKindCase() {
    return KindCase.forNumber(
        kindCase_);
  }

  private void clearKind() {
    kindCase_ = 0;
    kind_ = null;
  }

  public static final int BOOLEAN_AND_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Computes the logical AND of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
   */
  @java.lang.Override
  public boolean hasBooleanAnd() {
    return kindCase_ == 2;
  }
  /**
   * <pre>
   * Computes the logical AND of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto getBooleanAnd() {
    if (kindCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Computes the logical AND of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
   */
  private void setBooleanAnd(org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 2;
  }
  /**
   * <pre>
   * Computes the logical AND of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
   */
  private void mergeBooleanAnd(org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto value) {
    value.getClass();
  if (kindCase_ == 2 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 2;
  }
  /**
   * <pre>
   * Computes the logical AND of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
   */
  private void clearBooleanAnd() {
    if (kindCase_ == 2) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int BOOLEAN_OR_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Computes the logical OR of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
   */
  @java.lang.Override
  public boolean hasBooleanOr() {
    return kindCase_ == 3;
  }
  /**
   * <pre>
   * Computes the logical OR of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto getBooleanOr() {
    if (kindCase_ == 3) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Computes the logical OR of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
   */
  private void setBooleanOr(org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 3;
  }
  /**
   * <pre>
   * Computes the logical OR of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
   */
  private void mergeBooleanOr(org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto value) {
    value.getClass();
  if (kindCase_ == 3 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 3;
  }
  /**
   * <pre>
   * Computes the logical OR of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
   */
  private void clearBooleanOr() {
    if (kindCase_ == 3) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int BOOLEAN_NOT_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Computes the logical NOT of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
   */
  @java.lang.Override
  public boolean hasBooleanNot() {
    return kindCase_ == 4;
  }
  /**
   * <pre>
   * Computes the logical NOT of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto getBooleanNot() {
    if (kindCase_ == 4) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Computes the logical NOT of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
   */
  private void setBooleanNot(org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 4;
  }
  /**
   * <pre>
   * Computes the logical NOT of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
   */
  private void mergeBooleanNot(org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto value) {
    value.getClass();
  if (kindCase_ == 4 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 4;
  }
  /**
   * <pre>
   * Computes the logical NOT of the specified model identifiers.
   * </pre>
   *
   * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
   */
  private void clearBooleanNot() {
    if (kindCase_ == 4) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int TO_STRING_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Creates a string representation of the specified value.
   * </pre>
   *
   * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
   */
  @java.lang.Override
  public boolean hasToString() {
    return kindCase_ == 5;
  }
  /**
   * <pre>
   * Creates a string representation of the specified value.
   * </pre>
   *
   * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto getToString() {
    if (kindCase_ == 5) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Creates a string representation of the specified value.
   * </pre>
   *
   * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
   */
  private void setToString(org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 5;
  }
  /**
   * <pre>
   * Creates a string representation of the specified value.
   * </pre>
   *
   * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
   */
  private void mergeToString(org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto value) {
    value.getClass();
  if (kindCase_ == 5 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 5;
  }
  /**
   * <pre>
   * Creates a string representation of the specified value.
   * </pre>
   *
   * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
   */
  private void clearToString() {
    if (kindCase_ == 5) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int COMPARISON_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Compares two values.
   * </pre>
   *
   * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
   */
  @java.lang.Override
  public boolean hasComparison() {
    return kindCase_ == 6;
  }
  /**
   * <pre>
   * Compares two values.
   * </pre>
   *
   * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto getComparison() {
    if (kindCase_ == 6) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Compares two values.
   * </pre>
   *
   * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
   */
  private void setComparison(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 6;
  }
  /**
   * <pre>
   * Compares two values.
   * </pre>
   *
   * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
   */
  private void mergeComparison(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto value) {
    value.getClass();
  if (kindCase_ == 6 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 6;
  }
  /**
   * <pre>
   * Compares two values.
   * </pre>
   *
   * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
   */
  private void clearComparison() {
    if (kindCase_ == 6) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int INTEGER_SUM_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Computes the sum of two single integers.
   * </pre>
   *
   * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
   */
  @java.lang.Override
  public boolean hasIntegerSum() {
    return kindCase_ == 7;
  }
  /**
   * <pre>
   * Computes the sum of two single integers.
   * </pre>
   *
   * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto getIntegerSum() {
    if (kindCase_ == 7) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Computes the sum of two single integers.
   * </pre>
   *
   * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
   */
  private void setIntegerSum(org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 7;
  }
  /**
   * <pre>
   * Computes the sum of two single integers.
   * </pre>
   *
   * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
   */
  private void mergeIntegerSum(org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto value) {
    value.getClass();
  if (kindCase_ == 7 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 7;
  }
  /**
   * <pre>
   * Computes the sum of two single integers.
   * </pre>
   *
   * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
   */
  private void clearIntegerSum() {
    if (kindCase_ == 7) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int CREATE_CREDIT_CARD_RESPONSE_FIELD_NUMBER = 8;
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input credit card to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
   */
  @java.lang.Override
  public boolean hasCreateCreditCardResponse() {
    return kindCase_ == 8;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input credit card to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto getCreateCreditCardResponse() {
    if (kindCase_ == 8) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input credit card to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
   */
  private void setCreateCreditCardResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 8;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input credit card to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
   */
  private void mergeCreateCreditCardResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto value) {
    value.getClass();
  if (kindCase_ == 8 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 8;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input credit card to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
   */
  private void clearCreateCreditCardResponse() {
    if (kindCase_ == 8) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int CREATE_LOGIN_OPTION_RESPONSE_FIELD_NUMBER = 9;
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input login option to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
   */
  @java.lang.Override
  public boolean hasCreateLoginOptionResponse() {
    return kindCase_ == 9;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input login option to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto getCreateLoginOptionResponse() {
    if (kindCase_ == 9) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto) kind_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto.getDefaultInstance();
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input login option to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
   */
  private void setCreateLoginOptionResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto value) {
    value.getClass();
  kind_ = value;
    kindCase_ = 9;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input login option to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
   */
  private void mergeCreateLoginOptionResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto value) {
    value.getClass();
  if (kindCase_ == 9 &&
        kind_ != org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto.getDefaultInstance()) {
      kind_ = org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto) kind_)
          .mergeFrom(value).buildPartial();
    } else {
      kind_ = value;
    }
    kindCase_ = 9;
  }
  /**
   * <pre>
   * Writes safe-to-transmit parts of the input login option to the result.
   * </pre>
   *
   * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
   */
  private void clearCreateLoginOptionResponse() {
    if (kindCase_ == 9) {
      kindCase_ = 0;
      kind_ = null;
    }
  }

  public static final int RESULT_MODEL_IDENTIFIER_FIELD_NUMBER = 1;
  private java.lang.String resultModelIdentifier_;
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   * @return Whether the resultModelIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasResultModelIdentifier() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   * @return The resultModelIdentifier.
   */
  @java.lang.Override
  public java.lang.String getResultModelIdentifier() {
    return resultModelIdentifier_;
  }
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   * @return The bytes for resultModelIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResultModelIdentifierBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(resultModelIdentifier_);
  }
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   * @param value The resultModelIdentifier to set.
   */
  private void setResultModelIdentifier(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000100;
    resultModelIdentifier_ = value;
  }
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   */
  private void clearResultModelIdentifier() {
    bitField0_ = (bitField0_ & ~0x00000100);
    resultModelIdentifier_ = getDefaultInstance().getResultModelIdentifier();
  }
  /**
   * <pre>
   * The model identifier to write the result to.
   * </pre>
   *
   * <code>optional string result_model_identifier = 1;</code>
   * @param value The bytes for resultModelIdentifier to set.
   */
  private void setResultModelIdentifierBytes(
      com.google.protobuf.ByteString value) {
    resultModelIdentifier_ = value.toStringUtf8();
    bitField0_ |= 0x00000100;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Computes a value and stores the result to |result_model_identifier|.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ComputeValueProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ComputeValueProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public KindCase
        getKindCase() {
      return instance.getKindCase();
    }

    public Builder clearKind() {
      copyOnWrite();
      instance.clearKind();
      return this;
    }


    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    @java.lang.Override
    public boolean hasBooleanAnd() {
      return instance.hasBooleanAnd();
    }
    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto getBooleanAnd() {
      return instance.getBooleanAnd();
    }
    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    public Builder setBooleanAnd(org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto value) {
      copyOnWrite();
      instance.setBooleanAnd(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    public Builder setBooleanAnd(
        org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto.Builder builderForValue) {
      copyOnWrite();
      instance.setBooleanAnd(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    public Builder mergeBooleanAnd(org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto value) {
      copyOnWrite();
      instance.mergeBooleanAnd(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical AND of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanAndProto boolean_and = 2;</code>
     */
    public Builder clearBooleanAnd() {
      copyOnWrite();
      instance.clearBooleanAnd();
      return this;
    }

    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    @java.lang.Override
    public boolean hasBooleanOr() {
      return instance.hasBooleanOr();
    }
    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto getBooleanOr() {
      return instance.getBooleanOr();
    }
    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    public Builder setBooleanOr(org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto value) {
      copyOnWrite();
      instance.setBooleanOr(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    public Builder setBooleanOr(
        org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto.Builder builderForValue) {
      copyOnWrite();
      instance.setBooleanOr(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    public Builder mergeBooleanOr(org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto value) {
      copyOnWrite();
      instance.mergeBooleanOr(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical OR of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanOrProto boolean_or = 3;</code>
     */
    public Builder clearBooleanOr() {
      copyOnWrite();
      instance.clearBooleanOr();
      return this;
    }

    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    @java.lang.Override
    public boolean hasBooleanNot() {
      return instance.hasBooleanNot();
    }
    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto getBooleanNot() {
      return instance.getBooleanNot();
    }
    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    public Builder setBooleanNot(org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto value) {
      copyOnWrite();
      instance.setBooleanNot(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    public Builder setBooleanNot(
        org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto.Builder builderForValue) {
      copyOnWrite();
      instance.setBooleanNot(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    public Builder mergeBooleanNot(org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto value) {
      copyOnWrite();
      instance.mergeBooleanNot(value);
      return this;
    }
    /**
     * <pre>
     * Computes the logical NOT of the specified model identifiers.
     * </pre>
     *
     * <code>.autofill_assistant.BooleanNotProto boolean_not = 4;</code>
     */
    public Builder clearBooleanNot() {
      copyOnWrite();
      instance.clearBooleanNot();
      return this;
    }

    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    @java.lang.Override
    public boolean hasToString() {
      return instance.hasToString();
    }
    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto getToString() {
      return instance.getToString();
    }
    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    public Builder setToString(org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto value) {
      copyOnWrite();
      instance.setToString(value);
      return this;
    }
    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    public Builder setToString(
        org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto.Builder builderForValue) {
      copyOnWrite();
      instance.setToString(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    public Builder mergeToString(org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto value) {
      copyOnWrite();
      instance.mergeToString(value);
      return this;
    }
    /**
     * <pre>
     * Creates a string representation of the specified value.
     * </pre>
     *
     * <code>.autofill_assistant.ToStringProto to_string = 5;</code>
     */
    public Builder clearToString() {
      copyOnWrite();
      instance.clearToString();
      return this;
    }

    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    @java.lang.Override
    public boolean hasComparison() {
      return instance.hasComparison();
    }
    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto getComparison() {
      return instance.getComparison();
    }
    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    public Builder setComparison(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto value) {
      copyOnWrite();
      instance.setComparison(value);
      return this;
    }
    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    public Builder setComparison(
        org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Builder builderForValue) {
      copyOnWrite();
      instance.setComparison(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    public Builder mergeComparison(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto value) {
      copyOnWrite();
      instance.mergeComparison(value);
      return this;
    }
    /**
     * <pre>
     * Compares two values.
     * </pre>
     *
     * <code>.autofill_assistant.ValueComparisonProto comparison = 6;</code>
     */
    public Builder clearComparison() {
      copyOnWrite();
      instance.clearComparison();
      return this;
    }

    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    @java.lang.Override
    public boolean hasIntegerSum() {
      return instance.hasIntegerSum();
    }
    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto getIntegerSum() {
      return instance.getIntegerSum();
    }
    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    public Builder setIntegerSum(org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto value) {
      copyOnWrite();
      instance.setIntegerSum(value);
      return this;
    }
    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    public Builder setIntegerSum(
        org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto.Builder builderForValue) {
      copyOnWrite();
      instance.setIntegerSum(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    public Builder mergeIntegerSum(org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto value) {
      copyOnWrite();
      instance.mergeIntegerSum(value);
      return this;
    }
    /**
     * <pre>
     * Computes the sum of two single integers.
     * </pre>
     *
     * <code>.autofill_assistant.IntegerSumProto integer_sum = 7;</code>
     */
    public Builder clearIntegerSum() {
      copyOnWrite();
      instance.clearIntegerSum();
      return this;
    }

    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    @java.lang.Override
    public boolean hasCreateCreditCardResponse() {
      return instance.hasCreateCreditCardResponse();
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto getCreateCreditCardResponse() {
      return instance.getCreateCreditCardResponse();
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    public Builder setCreateCreditCardResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto value) {
      copyOnWrite();
      instance.setCreateCreditCardResponse(value);
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    public Builder setCreateCreditCardResponse(
        org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateCreditCardResponse(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    public Builder mergeCreateCreditCardResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto value) {
      copyOnWrite();
      instance.mergeCreateCreditCardResponse(value);
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input credit card to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateCreditCardResponseProto create_credit_card_response = 8;</code>
     */
    public Builder clearCreateCreditCardResponse() {
      copyOnWrite();
      instance.clearCreateCreditCardResponse();
      return this;
    }

    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    @java.lang.Override
    public boolean hasCreateLoginOptionResponse() {
      return instance.hasCreateLoginOptionResponse();
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto getCreateLoginOptionResponse() {
      return instance.getCreateLoginOptionResponse();
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    public Builder setCreateLoginOptionResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto value) {
      copyOnWrite();
      instance.setCreateLoginOptionResponse(value);
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    public Builder setCreateLoginOptionResponse(
        org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateLoginOptionResponse(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    public Builder mergeCreateLoginOptionResponse(org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto value) {
      copyOnWrite();
      instance.mergeCreateLoginOptionResponse(value);
      return this;
    }
    /**
     * <pre>
     * Writes safe-to-transmit parts of the input login option to the result.
     * </pre>
     *
     * <code>.autofill_assistant.CreateLoginOptionResponseProto create_login_option_response = 9;</code>
     */
    public Builder clearCreateLoginOptionResponse() {
      copyOnWrite();
      instance.clearCreateLoginOptionResponse();
      return this;
    }

    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @return Whether the resultModelIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasResultModelIdentifier() {
      return instance.hasResultModelIdentifier();
    }
    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @return The resultModelIdentifier.
     */
    @java.lang.Override
    public java.lang.String getResultModelIdentifier() {
      return instance.getResultModelIdentifier();
    }
    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @return The bytes for resultModelIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResultModelIdentifierBytes() {
      return instance.getResultModelIdentifierBytes();
    }
    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @param value The resultModelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setResultModelIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setResultModelIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearResultModelIdentifier() {
      copyOnWrite();
      instance.clearResultModelIdentifier();
      return this;
    }
    /**
     * <pre>
     * The model identifier to write the result to.
     * </pre>
     *
     * <code>optional string result_model_identifier = 1;</code>
     * @param value The bytes for resultModelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setResultModelIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResultModelIdentifierBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ComputeValueProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "kind_",
            "kindCase_",
            "bitField0_",
            "resultModelIdentifier_",
            org.chromium.chrome.browser.autofill_assistant.proto.BooleanAndProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.BooleanOrProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.BooleanNotProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ToStringProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.IntegerSumProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.CreateCreditCardResponseProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.CreateLoginOptionResponseProto.class,
          };
          java.lang.String info =
              "\u0001\t\u0001\u0001\u0001\t\t\u0000\u0000\u0000\u0001\u1008\b\u0002\u103c\u0000" +
              "\u0003\u103c\u0000\u0004\u103c\u0000\u0005\u103c\u0000\u0006\u103c\u0000\u0007\u103c" +
              "\u0000\b\u103c\u0000\t\u103c\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ComputeValueProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto DEFAULT_INSTANCE;
  static {
    ComputeValueProto defaultInstance = new ComputeValueProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ComputeValueProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ComputeValueProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ComputeValueProto> PARSER;

  public static com.google.protobuf.Parser<ComputeValueProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

