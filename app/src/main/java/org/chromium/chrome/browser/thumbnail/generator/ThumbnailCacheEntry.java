// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: thumbnail_cache_entry.proto

package org.chromium.chrome.browser.thumbnail.generator;

public final class ThumbnailCacheEntry {
  private ThumbnailCacheEntry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ContentIdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.thumbnail.generator.ContentId)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * Protobuf type {@code org.chromium.chrome.browser.thumbnail.generator.ContentId}
   */
  public  static final class ContentId extends
      com.google.protobuf.GeneratedMessageLite<
          ContentId, ContentId.Builder> implements
      // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.thumbnail.generator.ContentId)
      ContentIdOrBuilder {
    private ContentId() {
      id_ = "";
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.String id_;
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @param value The id to set.
     */
    private void setId(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = getDefaultInstance().getId();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @param value The bytes for id to set.
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      id_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.chromium.chrome.browser.thumbnail.generator.ContentId}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.thumbnail.generator.ContentId)
        org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentIdOrBuilder {
      // Construct using org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.thumbnail.generator.ContentId)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1008\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.thumbnail.generator.ContentId)
    private static final org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId DEFAULT_INSTANCE;
    static {
      ContentId defaultInstance = new ContentId();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ContentId.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ContentId> PARSER;

    public static com.google.protobuf.Parser<ContentId> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ThumbnailEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     * @return Whether the contentId field is set.
     */
    boolean hasContentId();
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     * @return The contentId.
     */
    org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId getContentId();

    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     * @return Whether the sizePx field is set.
     */
    boolean hasSizePx();
    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     * @return The sizePx.
     */
    int getSizePx();

    /**
     * <code>optional bytes compressed_png = 3;</code>
     * @return Whether the compressedPng field is set.
     */
    boolean hasCompressedPng();
    /**
     * <code>optional bytes compressed_png = 3;</code>
     * @return The compressedPng.
     */
    com.google.protobuf.ByteString getCompressedPng();
  }
  /**
   * Protobuf type {@code org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry}
   */
  public  static final class ThumbnailEntry extends
      com.google.protobuf.GeneratedMessageLite<
          ThumbnailEntry, ThumbnailEntry.Builder> implements
      // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry)
      ThumbnailEntryOrBuilder {
    private ThumbnailEntry() {
      compressedPng_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CONTENT_ID_FIELD_NUMBER = 1;
    private org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId contentId_;
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId getContentId() {
      return contentId_ == null ? org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.getDefaultInstance() : contentId_;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     */
    private void setContentId(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId value) {
      value.getClass();
  contentId_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeContentId(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId value) {
      value.getClass();
  if (contentId_ != null &&
          contentId_ != org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.getDefaultInstance()) {
        contentId_ =
          org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.newBuilder(contentId_).mergeFrom(value).buildPartial();
      } else {
        contentId_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
     */
    private void clearContentId() {  contentId_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int SIZE_PX_FIELD_NUMBER = 2;
    private int sizePx_;
    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     * @return Whether the sizePx field is set.
     */
    @java.lang.Override
    public boolean hasSizePx() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     * @return The sizePx.
     */
    @java.lang.Override
    public int getSizePx() {
      return sizePx_;
    }
    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     * @param value The sizePx to set.
     */
    private void setSizePx(int value) {
      bitField0_ |= 0x00000002;
      sizePx_ = value;
    }
    /**
     * <pre>
     * Requested size (maximum required dimension (pixel) of the smaller side)
     * of the thumbnail.
     * Required.
     * </pre>
     *
     * <code>optional int32 size_px = 2;</code>
     */
    private void clearSizePx() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sizePx_ = 0;
    }

    public static final int COMPRESSED_PNG_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString compressedPng_;
    /**
     * <code>optional bytes compressed_png = 3;</code>
     * @return Whether the compressedPng field is set.
     */
    @java.lang.Override
    public boolean hasCompressedPng() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bytes compressed_png = 3;</code>
     * @return The compressedPng.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCompressedPng() {
      return compressedPng_;
    }
    /**
     * <code>optional bytes compressed_png = 3;</code>
     * @param value The compressedPng to set.
     */
    private void setCompressedPng(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000004;
      compressedPng_ = value;
    }
    /**
     * <code>optional bytes compressed_png = 3;</code>
     */
    private void clearCompressedPng() {
      bitField0_ = (bitField0_ & ~0x00000004);
      compressedPng_ = getDefaultInstance().getCompressedPng();
    }

    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry)
        org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntryOrBuilder {
      // Construct using org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasContentId() {
        return instance.hasContentId();
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId getContentId() {
        return instance.getContentId();
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      public Builder setContentId(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
        }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      public Builder setContentId(
          org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId.Builder builderForValue) {
        copyOnWrite();
        instance.setContentId(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      public Builder mergeContentId(org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ContentId value) {
        copyOnWrite();
        instance.mergeContentId(value);
        return this;
      }
      /**
       * <pre>
       * Required.
       * </pre>
       *
       * <code>optional .org.chromium.chrome.browser.thumbnail.generator.ContentId content_id = 1;</code>
       */
      public Builder clearContentId() {  copyOnWrite();
        instance.clearContentId();
        return this;
      }

      /**
       * <pre>
       * Requested size (maximum required dimension (pixel) of the smaller side)
       * of the thumbnail.
       * Required.
       * </pre>
       *
       * <code>optional int32 size_px = 2;</code>
       * @return Whether the sizePx field is set.
       */
      @java.lang.Override
      public boolean hasSizePx() {
        return instance.hasSizePx();
      }
      /**
       * <pre>
       * Requested size (maximum required dimension (pixel) of the smaller side)
       * of the thumbnail.
       * Required.
       * </pre>
       *
       * <code>optional int32 size_px = 2;</code>
       * @return The sizePx.
       */
      @java.lang.Override
      public int getSizePx() {
        return instance.getSizePx();
      }
      /**
       * <pre>
       * Requested size (maximum required dimension (pixel) of the smaller side)
       * of the thumbnail.
       * Required.
       * </pre>
       *
       * <code>optional int32 size_px = 2;</code>
       * @param value The sizePx to set.
       * @return This builder for chaining.
       */
      public Builder setSizePx(int value) {
        copyOnWrite();
        instance.setSizePx(value);
        return this;
      }
      /**
       * <pre>
       * Requested size (maximum required dimension (pixel) of the smaller side)
       * of the thumbnail.
       * Required.
       * </pre>
       *
       * <code>optional int32 size_px = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizePx() {
        copyOnWrite();
        instance.clearSizePx();
        return this;
      }

      /**
       * <code>optional bytes compressed_png = 3;</code>
       * @return Whether the compressedPng field is set.
       */
      @java.lang.Override
      public boolean hasCompressedPng() {
        return instance.hasCompressedPng();
      }
      /**
       * <code>optional bytes compressed_png = 3;</code>
       * @return The compressedPng.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCompressedPng() {
        return instance.getCompressedPng();
      }
      /**
       * <code>optional bytes compressed_png = 3;</code>
       * @param value The compressedPng to set.
       * @return This builder for chaining.
       */
      public Builder setCompressedPng(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCompressedPng(value);
        return this;
      }
      /**
       * <code>optional bytes compressed_png = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompressedPng() {
        copyOnWrite();
        instance.clearCompressedPng();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "contentId_",
              "sizePx_",
              "compressedPng_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1004\u0001\u0003\u100a\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.thumbnail.generator.ThumbnailEntry)
    private static final org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry DEFAULT_INSTANCE;
    static {
      ThumbnailEntry defaultInstance = new ThumbnailEntry();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ThumbnailEntry.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.thumbnail.generator.ThumbnailCacheEntry.ThumbnailEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ThumbnailEntry> PARSER;

    public static com.google.protobuf.Parser<ThumbnailEntry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
