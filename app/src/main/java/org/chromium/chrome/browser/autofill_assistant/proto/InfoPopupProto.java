// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_layout.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A generic read-only popup message.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.InfoPopupProto}
 */
public  final class InfoPopupProto extends
    com.google.protobuf.GeneratedMessageLite<
        InfoPopupProto, InfoPopupProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.InfoPopupProto)
    InfoPopupProtoOrBuilder {
  private InfoPopupProto() {
    title_ = "";
    text_ = "";
  }
  public interface DialogButtonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.InfoPopupProto.DialogButton)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     * @return Whether the closeDialog field is set.
     */
    boolean hasCloseDialog();
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     * @return The closeDialog.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog getCloseDialog();

    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     * @return Whether the openUrlInCct field is set.
     */
    boolean hasOpenUrlInCct();
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     * @return The openUrlInCct.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT getOpenUrlInCct();

    /**
     * <code>optional string label = 1;</code>
     * @return Whether the label field is set.
     */
    boolean hasLabel();
    /**
     * <code>optional string label = 1;</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>optional string label = 1;</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.ClickActionCase getClickActionCase();
  }
  /**
   * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton}
   */
  public  static final class DialogButton extends
      com.google.protobuf.GeneratedMessageLite<
          DialogButton, DialogButton.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.InfoPopupProto.DialogButton)
      DialogButtonOrBuilder {
    private DialogButton() {
      label_ = "";
    }
    public interface CloseDialogOrBuilder extends
        // @@protoc_insertion_point(interface_extends:autofill_assistant.InfoPopupProto.DialogButton.CloseDialog)
        com.google.protobuf.MessageLiteOrBuilder {
    }
    /**
     * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton.CloseDialog}
     */
    public  static final class CloseDialog extends
        com.google.protobuf.GeneratedMessageLite<
            CloseDialog, CloseDialog.Builder> implements
        // @@protoc_insertion_point(message_implements:autofill_assistant.InfoPopupProto.DialogButton.CloseDialog)
        CloseDialogOrBuilder {
      private CloseDialog() {
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton.CloseDialog}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog, Builder> implements
          // @@protoc_insertion_point(builder_implements:autofill_assistant.InfoPopupProto.DialogButton.CloseDialog)
          org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialogOrBuilder {
        // Construct using org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        // @@protoc_insertion_point(builder_scope:autofill_assistant.InfoPopupProto.DialogButton.CloseDialog)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = null;java.lang.String info =
                  "\u0001\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:autofill_assistant.InfoPopupProto.DialogButton.CloseDialog)
      private static final org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog DEFAULT_INSTANCE;
      static {
        CloseDialog defaultInstance = new CloseDialog();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          CloseDialog.class, defaultInstance);
      }

      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<CloseDialog> PARSER;

      public static com.google.protobuf.Parser<CloseDialog> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface OpenUrlInCCTOrBuilder extends
        // @@protoc_insertion_point(interface_extends:autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string url = 1;</code>
       * @return Whether the url field is set.
       */
      boolean hasUrl();
      /**
       * <code>optional string url = 1;</code>
       * @return The url.
       */
      java.lang.String getUrl();
      /**
       * <code>optional string url = 1;</code>
       * @return The bytes for url.
       */
      com.google.protobuf.ByteString
          getUrlBytes();
    }
    /**
     * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT}
     */
    public  static final class OpenUrlInCCT extends
        com.google.protobuf.GeneratedMessageLite<
            OpenUrlInCCT, OpenUrlInCCT.Builder> implements
        // @@protoc_insertion_point(message_implements:autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT)
        OpenUrlInCCTOrBuilder {
      private OpenUrlInCCT() {
        url_ = "";
      }
      private int bitField0_;
      public static final int URL_FIELD_NUMBER = 1;
      private java.lang.String url_;
      /**
       * <code>optional string url = 1;</code>
       * @return Whether the url field is set.
       */
      @java.lang.Override
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string url = 1;</code>
       * @return The url.
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        return url_;
      }
      /**
       * <code>optional string url = 1;</code>
       * @return The bytes for url.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(url_);
      }
      /**
       * <code>optional string url = 1;</code>
       * @param value The url to set.
       */
      private void setUrl(
          java.lang.String value) {
        value.getClass();
  bitField0_ |= 0x00000001;
        url_ = value;
      }
      /**
       * <code>optional string url = 1;</code>
       */
      private void clearUrl() {
        bitField0_ = (bitField0_ & ~0x00000001);
        url_ = getDefaultInstance().getUrl();
      }
      /**
       * <code>optional string url = 1;</code>
       * @param value The bytes for url to set.
       */
      private void setUrlBytes(
          com.google.protobuf.ByteString value) {
        url_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
      }

      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT, Builder> implements
          // @@protoc_insertion_point(builder_implements:autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT)
          org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCTOrBuilder {
        // Construct using org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string url = 1;</code>
         * @return Whether the url field is set.
         */
        @java.lang.Override
        public boolean hasUrl() {
          return instance.hasUrl();
        }
        /**
         * <code>optional string url = 1;</code>
         * @return The url.
         */
        @java.lang.Override
        public java.lang.String getUrl() {
          return instance.getUrl();
        }
        /**
         * <code>optional string url = 1;</code>
         * @return The bytes for url.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUrlBytes() {
          return instance.getUrlBytes();
        }
        /**
         * <code>optional string url = 1;</code>
         * @param value The url to set.
         * @return This builder for chaining.
         */
        public Builder setUrl(
            java.lang.String value) {
          copyOnWrite();
          instance.setUrl(value);
          return this;
        }
        /**
         * <code>optional string url = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUrl() {
          copyOnWrite();
          instance.clearUrl();
          return this;
        }
        /**
         * <code>optional string url = 1;</code>
         * @param value The bytes for url to set.
         * @return This builder for chaining.
         */
        public Builder setUrlBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setUrlBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "url_",
              };
              java.lang.String info =
                  "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1008\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT)
      private static final org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT DEFAULT_INSTANCE;
      static {
        OpenUrlInCCT defaultInstance = new OpenUrlInCCT();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          OpenUrlInCCT.class, defaultInstance);
      }

      public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<OpenUrlInCCT> PARSER;

      public static com.google.protobuf.Parser<OpenUrlInCCT> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    private int clickActionCase_ = 0;
    private java.lang.Object clickAction_;
    public enum ClickActionCase {
      CLOSE_DIALOG(4),
      OPEN_URL_IN_CCT(5),
      CLICKACTION_NOT_SET(0);
      private final int value;
      private ClickActionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ClickActionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ClickActionCase forNumber(int value) {
        switch (value) {
          case 4: return CLOSE_DIALOG;
          case 5: return OPEN_URL_IN_CCT;
          case 0: return CLICKACTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ClickActionCase
    getClickActionCase() {
      return ClickActionCase.forNumber(
          clickActionCase_);
    }

    private void clearClickAction() {
      clickActionCase_ = 0;
      clickAction_ = null;
    }

    public static final int CLOSE_DIALOG_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     */
    @java.lang.Override
    public boolean hasCloseDialog() {
      return clickActionCase_ == 4;
    }
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog getCloseDialog() {
      if (clickActionCase_ == 4) {
         return (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog) clickAction_;
      }
      return org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.getDefaultInstance();
    }
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     */
    private void setCloseDialog(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog value) {
      value.getClass();
  clickAction_ = value;
      clickActionCase_ = 4;
    }
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     */
    private void mergeCloseDialog(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog value) {
      value.getClass();
  if (clickActionCase_ == 4 &&
          clickAction_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.getDefaultInstance()) {
        clickAction_ = org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog) clickAction_)
            .mergeFrom(value).buildPartial();
      } else {
        clickAction_ = value;
      }
      clickActionCase_ = 4;
    }
    /**
     * <pre>
     * Closes the popup.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
     */
    private void clearCloseDialog() {
      if (clickActionCase_ == 4) {
        clickActionCase_ = 0;
        clickAction_ = null;
      }
    }

    public static final int OPEN_URL_IN_CCT_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     */
    @java.lang.Override
    public boolean hasOpenUrlInCct() {
      return clickActionCase_ == 5;
    }
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT getOpenUrlInCct() {
      if (clickActionCase_ == 5) {
         return (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT) clickAction_;
      }
      return org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.getDefaultInstance();
    }
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     */
    private void setOpenUrlInCct(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT value) {
      value.getClass();
  clickAction_ = value;
      clickActionCase_ = 5;
    }
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     */
    private void mergeOpenUrlInCct(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT value) {
      value.getClass();
  if (clickActionCase_ == 5 &&
          clickAction_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.getDefaultInstance()) {
        clickAction_ = org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT) clickAction_)
            .mergeFrom(value).buildPartial();
      } else {
        clickAction_ = value;
      }
      clickActionCase_ = 5;
    }
    /**
     * <pre>
     * Opens the specified url into a new CCT.
     * </pre>
     *
     * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
     */
    private void clearOpenUrlInCct() {
      if (clickActionCase_ == 5) {
        clickActionCase_ = 0;
        clickAction_ = null;
      }
    }

    public static final int LABEL_FIELD_NUMBER = 1;
    private java.lang.String label_;
    /**
     * <code>optional string label = 1;</code>
     * @return Whether the label field is set.
     */
    @java.lang.Override
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string label = 1;</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      return label_;
    }
    /**
     * <code>optional string label = 1;</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(label_);
    }
    /**
     * <code>optional string label = 1;</code>
     * @param value The label to set.
     */
    private void setLabel(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000004;
      label_ = value;
    }
    /**
     * <code>optional string label = 1;</code>
     */
    private void clearLabel() {
      bitField0_ = (bitField0_ & ~0x00000004);
      label_ = getDefaultInstance().getLabel();
    }
    /**
     * <code>optional string label = 1;</code>
     * @param value The bytes for label to set.
     */
    private void setLabelBytes(
        com.google.protobuf.ByteString value) {
      label_ = value.toStringUtf8();
      bitField0_ |= 0x00000004;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.InfoPopupProto.DialogButton}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.InfoPopupProto.DialogButton)
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButtonOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public ClickActionCase
          getClickActionCase() {
        return instance.getClickActionCase();
      }

      public Builder clearClickAction() {
        copyOnWrite();
        instance.clearClickAction();
        return this;
      }


      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      @java.lang.Override
      public boolean hasCloseDialog() {
        return instance.hasCloseDialog();
      }
      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog getCloseDialog() {
        return instance.getCloseDialog();
      }
      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      public Builder setCloseDialog(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog value) {
        copyOnWrite();
        instance.setCloseDialog(value);
        return this;
      }
      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      public Builder setCloseDialog(
          org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.Builder builderForValue) {
        copyOnWrite();
        instance.setCloseDialog(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      public Builder mergeCloseDialog(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog value) {
        copyOnWrite();
        instance.mergeCloseDialog(value);
        return this;
      }
      /**
       * <pre>
       * Closes the popup.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.CloseDialog close_dialog = 4;</code>
       */
      public Builder clearCloseDialog() {
        copyOnWrite();
        instance.clearCloseDialog();
        return this;
      }

      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      @java.lang.Override
      public boolean hasOpenUrlInCct() {
        return instance.hasOpenUrlInCct();
      }
      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT getOpenUrlInCct() {
        return instance.getOpenUrlInCct();
      }
      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      public Builder setOpenUrlInCct(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT value) {
        copyOnWrite();
        instance.setOpenUrlInCct(value);
        return this;
      }
      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      public Builder setOpenUrlInCct(
          org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.Builder builderForValue) {
        copyOnWrite();
        instance.setOpenUrlInCct(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      public Builder mergeOpenUrlInCct(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT value) {
        copyOnWrite();
        instance.mergeOpenUrlInCct(value);
        return this;
      }
      /**
       * <pre>
       * Opens the specified url into a new CCT.
       * </pre>
       *
       * <code>.autofill_assistant.InfoPopupProto.DialogButton.OpenUrlInCCT open_url_in_cct = 5;</code>
       */
      public Builder clearOpenUrlInCct() {
        copyOnWrite();
        instance.clearOpenUrlInCct();
        return this;
      }

      /**
       * <code>optional string label = 1;</code>
       * @return Whether the label field is set.
       */
      @java.lang.Override
      public boolean hasLabel() {
        return instance.hasLabel();
      }
      /**
       * <code>optional string label = 1;</code>
       * @return The label.
       */
      @java.lang.Override
      public java.lang.String getLabel() {
        return instance.getLabel();
      }
      /**
       * <code>optional string label = 1;</code>
       * @return The bytes for label.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLabelBytes() {
        return instance.getLabelBytes();
      }
      /**
       * <code>optional string label = 1;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        copyOnWrite();
        instance.setLabel(value);
        return this;
      }
      /**
       * <code>optional string label = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        copyOnWrite();
        instance.clearLabel();
        return this;
      }
      /**
       * <code>optional string label = 1;</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLabelBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.InfoPopupProto.DialogButton)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "clickAction_",
              "clickActionCase_",
              "bitField0_",
              "label_",
              org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.CloseDialog.class,
              org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.OpenUrlInCCT.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0001\u0001\u0001\u0005\u0003\u0000\u0000\u0000\u0001\u1008\u0002\u0004" +
                "\u103c\u0000\u0005\u103c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.InfoPopupProto.DialogButton)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton DEFAULT_INSTANCE;
    static {
      DialogButton defaultInstance = new DialogButton();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DialogButton.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DialogButton> PARSER;

    public static com.google.protobuf.Parser<DialogButton> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int TITLE_FIELD_NUMBER = 1;
  private java.lang.String title_;
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   * @return Whether the title field is set.
   */
  @java.lang.Override
  public boolean hasTitle() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   * @return The title.
   */
  @java.lang.Override
  public java.lang.String getTitle() {
    return title_;
  }
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   * @return The bytes for title.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTitleBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(title_);
  }
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   * @param value The title to set.
   */
  private void setTitle(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    title_ = value;
  }
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   */
  private void clearTitle() {
    bitField0_ = (bitField0_ & ~0x00000001);
    title_ = getDefaultInstance().getTitle();
  }
  /**
   * <pre>
   * The title of the popup window.
   * </pre>
   *
   * <code>optional string title = 1;</code>
   * @param value The bytes for title to set.
   */
  private void setTitleBytes(
      com.google.protobuf.ByteString value) {
    title_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int TEXT_FIELD_NUMBER = 2;
  private java.lang.String text_;
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   * @return Whether the text field is set.
   */
  @java.lang.Override
  public boolean hasText() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   * @return The text.
   */
  @java.lang.Override
  public java.lang.String getText() {
    return text_;
  }
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   * @return The bytes for text.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTextBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(text_);
  }
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   * @param value The text to set.
   */
  private void setText(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    text_ = value;
  }
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   */
  private void clearText() {
    bitField0_ = (bitField0_ & ~0x00000002);
    text_ = getDefaultInstance().getText();
  }
  /**
   * <pre>
   * The text of the popup window.
   * </pre>
   *
   * <code>optional string text = 2;</code>
   * @param value The bytes for text to set.
   */
  private void setTextBytes(
      com.google.protobuf.ByteString value) {
    text_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int POSITIVE_BUTTON_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton positiveButton_;
  /**
   * <pre>
   * Optional: adds a positive button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
   */
  @java.lang.Override
  public boolean hasPositiveButton() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Optional: adds a positive button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getPositiveButton() {
    return positiveButton_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance() : positiveButton_;
  }
  /**
   * <pre>
   * Optional: adds a positive button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
   */
  private void setPositiveButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  positiveButton_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * Optional: adds a positive button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePositiveButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  if (positiveButton_ != null &&
        positiveButton_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance()) {
      positiveButton_ =
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.newBuilder(positiveButton_).mergeFrom(value).buildPartial();
    } else {
      positiveButton_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * Optional: adds a positive button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
   */
  private void clearPositiveButton() {  positiveButton_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int NEGATIVE_BUTTON_FIELD_NUMBER = 4;
  private org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton negativeButton_;
  /**
   * <pre>
   * Optional: adds a negative button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
   */
  @java.lang.Override
  public boolean hasNegativeButton() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Optional: adds a negative button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getNegativeButton() {
    return negativeButton_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance() : negativeButton_;
  }
  /**
   * <pre>
   * Optional: adds a negative button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
   */
  private void setNegativeButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  negativeButton_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * Optional: adds a negative button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNegativeButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  if (negativeButton_ != null &&
        negativeButton_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance()) {
      negativeButton_ =
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.newBuilder(negativeButton_).mergeFrom(value).buildPartial();
    } else {
      negativeButton_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * Optional: adds a negative button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
   */
  private void clearNegativeButton() {  negativeButton_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int NEUTRAL_BUTTON_FIELD_NUMBER = 5;
  private org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton neutralButton_;
  /**
   * <pre>
   * Optional: adds a neutral button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
   */
  @java.lang.Override
  public boolean hasNeutralButton() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Optional: adds a neutral button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getNeutralButton() {
    return neutralButton_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance() : neutralButton_;
  }
  /**
   * <pre>
   * Optional: adds a neutral button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
   */
  private void setNeutralButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  neutralButton_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * Optional: adds a neutral button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNeutralButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
    value.getClass();
  if (neutralButton_ != null &&
        neutralButton_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.getDefaultInstance()) {
      neutralButton_ =
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.newBuilder(neutralButton_).mergeFrom(value).buildPartial();
    } else {
      neutralButton_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * Optional: adds a neutral button.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
   */
  private void clearNeutralButton() {  neutralButton_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A generic read-only popup message.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.InfoPopupProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.InfoPopupProto)
      org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @return Whether the title field is set.
     */
    @java.lang.Override
    public boolean hasTitle() {
      return instance.hasTitle();
    }
    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      return instance.getTitle();
    }
    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTitleBytes() {
      return instance.getTitleBytes();
    }
    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @param value The title to set.
     * @return This builder for chaining.
     */
    public Builder setTitle(
        java.lang.String value) {
      copyOnWrite();
      instance.setTitle(value);
      return this;
    }
    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTitle() {
      copyOnWrite();
      instance.clearTitle();
      return this;
    }
    /**
     * <pre>
     * The title of the popup window.
     * </pre>
     *
     * <code>optional string title = 1;</code>
     * @param value The bytes for title to set.
     * @return This builder for chaining.
     */
    public Builder setTitleBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTitleBytes(value);
      return this;
    }

    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return instance.hasText();
    }
    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      return instance.getText();
    }
    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      return instance.getTextBytes();
    }
    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @param value The text to set.
     * @return This builder for chaining.
     */
    public Builder setText(
        java.lang.String value) {
      copyOnWrite();
      instance.setText(value);
      return this;
    }
    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearText() {
      copyOnWrite();
      instance.clearText();
      return this;
    }
    /**
     * <pre>
     * The text of the popup window.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     * @param value The bytes for text to set.
     * @return This builder for chaining.
     */
    public Builder setTextBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTextBytes(value);
      return this;
    }

    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    @java.lang.Override
    public boolean hasPositiveButton() {
      return instance.hasPositiveButton();
    }
    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getPositiveButton() {
      return instance.getPositiveButton();
    }
    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    public Builder setPositiveButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.setPositiveButton(value);
      return this;
      }
    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    public Builder setPositiveButton(
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.Builder builderForValue) {
      copyOnWrite();
      instance.setPositiveButton(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    public Builder mergePositiveButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.mergePositiveButton(value);
      return this;
    }
    /**
     * <pre>
     * Optional: adds a positive button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton positive_button = 3;</code>
     */
    public Builder clearPositiveButton() {  copyOnWrite();
      instance.clearPositiveButton();
      return this;
    }

    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    @java.lang.Override
    public boolean hasNegativeButton() {
      return instance.hasNegativeButton();
    }
    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getNegativeButton() {
      return instance.getNegativeButton();
    }
    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    public Builder setNegativeButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.setNegativeButton(value);
      return this;
      }
    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    public Builder setNegativeButton(
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.Builder builderForValue) {
      copyOnWrite();
      instance.setNegativeButton(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    public Builder mergeNegativeButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.mergeNegativeButton(value);
      return this;
    }
    /**
     * <pre>
     * Optional: adds a negative button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton negative_button = 4;</code>
     */
    public Builder clearNegativeButton() {  copyOnWrite();
      instance.clearNegativeButton();
      return this;
    }

    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    @java.lang.Override
    public boolean hasNeutralButton() {
      return instance.hasNeutralButton();
    }
    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton getNeutralButton() {
      return instance.getNeutralButton();
    }
    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    public Builder setNeutralButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.setNeutralButton(value);
      return this;
      }
    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    public Builder setNeutralButton(
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton.Builder builderForValue) {
      copyOnWrite();
      instance.setNeutralButton(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    public Builder mergeNeutralButton(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.DialogButton value) {
      copyOnWrite();
      instance.mergeNeutralButton(value);
      return this;
    }
    /**
     * <pre>
     * Optional: adds a neutral button.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto.DialogButton neutral_button = 5;</code>
     */
    public Builder clearNeutralButton() {  copyOnWrite();
      instance.clearNeutralButton();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.InfoPopupProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "title_",
            "text_",
            "positiveButton_",
            "negativeButton_",
            "neutralButton_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1008\u0001\u0003\u1009\u0002\u0004\u1009\u0003\u0005\u1009\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.InfoPopupProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto DEFAULT_INSTANCE;
  static {
    InfoPopupProto defaultInstance = new InfoPopupProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      InfoPopupProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<InfoPopupProto> PARSER;

  public static com.google.protobuf.Parser<InfoPopupProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

