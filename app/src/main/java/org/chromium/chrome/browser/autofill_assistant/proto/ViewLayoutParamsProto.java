// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_layout.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Parameters configuring how views attach to their parents.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ViewLayoutParamsProto}
 */
public  final class ViewLayoutParamsProto extends
    com.google.protobuf.GeneratedMessageLite<
        ViewLayoutParamsProto, ViewLayoutParamsProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ViewLayoutParamsProto)
    ViewLayoutParamsProtoOrBuilder {
  private ViewLayoutParamsProto() {
    layoutWidth_ = -2;
    layoutHeight_ = -2;
  }
  /**
   * <pre>
   * Enum values map directly to corresponding Android values. This was done for
   * two reasons: (1), for ease-of-implementation and (2) because it is unlikely
   * that any one chosen enum mapping will apply to more than one platform; we
   * might as well match one platform directly.
   * </pre>
   *
   * Protobuf enum {@code autofill_assistant.ViewLayoutParamsProto.Gravity}
   */
  public enum Gravity
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNDEFINED = 0;</code>
     */
    UNDEFINED(0),
    /**
     * <code>CENTER = 17;</code>
     */
    CENTER(17),
    /**
     * <code>CENTER_HORIZONTAL = 1;</code>
     */
    CENTER_HORIZONTAL(1),
    /**
     * <code>CENTER_VERTICAL = 16;</code>
     */
    CENTER_VERTICAL(16),
    /**
     * <code>START = 8388611;</code>
     */
    START(8388611),
    /**
     * <code>TOP = 48;</code>
     */
    TOP(48),
    /**
     * <code>END = 8388613;</code>
     */
    END(8388613),
    /**
     * <code>BOTTOM = 80;</code>
     */
    BOTTOM(80),
    /**
     * <code>FILL_HORIZONTAL = 7;</code>
     */
    FILL_HORIZONTAL(7),
    /**
     * <code>FILL_VERTICAL = 112;</code>
     */
    FILL_VERTICAL(112),
    ;

    /**
     * <code>UNDEFINED = 0;</code>
     */
    public static final int UNDEFINED_VALUE = 0;
    /**
     * <code>CENTER = 17;</code>
     */
    public static final int CENTER_VALUE = 17;
    /**
     * <code>CENTER_HORIZONTAL = 1;</code>
     */
    public static final int CENTER_HORIZONTAL_VALUE = 1;
    /**
     * <code>CENTER_VERTICAL = 16;</code>
     */
    public static final int CENTER_VERTICAL_VALUE = 16;
    /**
     * <code>START = 8388611;</code>
     */
    public static final int START_VALUE = 8388611;
    /**
     * <code>TOP = 48;</code>
     */
    public static final int TOP_VALUE = 48;
    /**
     * <code>END = 8388613;</code>
     */
    public static final int END_VALUE = 8388613;
    /**
     * <code>BOTTOM = 80;</code>
     */
    public static final int BOTTOM_VALUE = 80;
    /**
     * <code>FILL_HORIZONTAL = 7;</code>
     */
    public static final int FILL_HORIZONTAL_VALUE = 7;
    /**
     * <code>FILL_VERTICAL = 112;</code>
     */
    public static final int FILL_VERTICAL_VALUE = 112;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Gravity valueOf(int value) {
      return forNumber(value);
    }

    public static Gravity forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED;
        case 17: return CENTER;
        case 1: return CENTER_HORIZONTAL;
        case 16: return CENTER_VERTICAL;
        case 8388611: return START;
        case 48: return TOP;
        case 8388613: return END;
        case 80: return BOTTOM;
        case 7: return FILL_HORIZONTAL;
        case 112: return FILL_VERTICAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Gravity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Gravity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Gravity>() {
            @java.lang.Override
            public Gravity findValueByNumber(int number) {
              return Gravity.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return GravityVerifier.INSTANCE;
    }

    private static final class GravityVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new GravityVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Gravity.forNumber(number) != null;
            }
          };

    private final int value;

    private Gravity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.ViewLayoutParamsProto.Gravity)
  }

  /**
   * Protobuf enum {@code autofill_assistant.ViewLayoutParamsProto.Size}
   */
  public enum Size
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WRAP_CONTENT = -2;</code>
     */
    WRAP_CONTENT(-2),
    /**
     * <code>MATCH_PARENT = -1;</code>
     */
    MATCH_PARENT(-1),
    ;

    /**
     * <code>WRAP_CONTENT = -2;</code>
     */
    public static final int WRAP_CONTENT_VALUE = -2;
    /**
     * <code>MATCH_PARENT = -1;</code>
     */
    public static final int MATCH_PARENT_VALUE = -1;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Size valueOf(int value) {
      return forNumber(value);
    }

    public static Size forNumber(int value) {
      switch (value) {
        case -2: return WRAP_CONTENT;
        case -1: return MATCH_PARENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Size>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Size> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Size>() {
            @java.lang.Override
            public Size findValueByNumber(int number) {
              return Size.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return SizeVerifier.INSTANCE;
    }

    private static final class SizeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SizeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Size.forNumber(number) != null;
            }
          };

    private final int value;

    private Size(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.ViewLayoutParamsProto.Size)
  }

  private int bitField0_;
  public static final int LAYOUT_WIDTH_FIELD_NUMBER = 1;
  private int layoutWidth_;
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_width = 1 [default = -2];</code>
   * @return Whether the layoutWidth field is set.
   */
  @java.lang.Override
  public boolean hasLayoutWidth() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_width = 1 [default = -2];</code>
   * @return The layoutWidth.
   */
  @java.lang.Override
  public int getLayoutWidth() {
    return layoutWidth_;
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_width = 1 [default = -2];</code>
   * @param value The layoutWidth to set.
   */
  private void setLayoutWidth(int value) {
    bitField0_ |= 0x00000001;
    layoutWidth_ = value;
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_width = 1 [default = -2];</code>
   */
  private void clearLayoutWidth() {
    bitField0_ = (bitField0_ & ~0x00000001);
    layoutWidth_ = -2;
  }

  public static final int LAYOUT_HEIGHT_FIELD_NUMBER = 2;
  private int layoutHeight_;
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_height = 2 [default = -2];</code>
   * @return Whether the layoutHeight field is set.
   */
  @java.lang.Override
  public boolean hasLayoutHeight() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_height = 2 [default = -2];</code>
   * @return The layoutHeight.
   */
  @java.lang.Override
  public int getLayoutHeight() {
    return layoutHeight_;
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_height = 2 [default = -2];</code>
   * @param value The layoutHeight to set.
   */
  private void setLayoutHeight(int value) {
    bitField0_ |= 0x00000002;
    layoutHeight_ = value;
  }
  /**
   * <pre>
   * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
   * are special values as defined in the |Size| enum.
   * </pre>
   *
   * <code>optional int32 layout_height = 2 [default = -2];</code>
   */
  private void clearLayoutHeight() {
    bitField0_ = (bitField0_ & ~0x00000002);
    layoutHeight_ = -2;
  }

  public static final int LAYOUT_WEIGHT_FIELD_NUMBER = 8;
  private float layoutWeight_;
  /**
   * <pre>
   * The relative weight of the view. Only available in some containers.
   * </pre>
   *
   * <code>optional float layout_weight = 8;</code>
   * @return Whether the layoutWeight field is set.
   */
  @java.lang.Override
  public boolean hasLayoutWeight() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The relative weight of the view. Only available in some containers.
   * </pre>
   *
   * <code>optional float layout_weight = 8;</code>
   * @return The layoutWeight.
   */
  @java.lang.Override
  public float getLayoutWeight() {
    return layoutWeight_;
  }
  /**
   * <pre>
   * The relative weight of the view. Only available in some containers.
   * </pre>
   *
   * <code>optional float layout_weight = 8;</code>
   * @param value The layoutWeight to set.
   */
  private void setLayoutWeight(float value) {
    bitField0_ |= 0x00000004;
    layoutWeight_ = value;
  }
  /**
   * <pre>
   * The relative weight of the view. Only available in some containers.
   * </pre>
   *
   * <code>optional float layout_weight = 8;</code>
   */
  private void clearLayoutWeight() {
    bitField0_ = (bitField0_ & ~0x00000004);
    layoutWeight_ = 0F;
  }

  public static final int MARGIN_START_FIELD_NUMBER = 3;
  private int marginStart_;
  /**
   * <code>optional int32 margin_start = 3;</code>
   * @return Whether the marginStart field is set.
   */
  @java.lang.Override
  public boolean hasMarginStart() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional int32 margin_start = 3;</code>
   * @return The marginStart.
   */
  @java.lang.Override
  public int getMarginStart() {
    return marginStart_;
  }
  /**
   * <code>optional int32 margin_start = 3;</code>
   * @param value The marginStart to set.
   */
  private void setMarginStart(int value) {
    bitField0_ |= 0x00000008;
    marginStart_ = value;
  }
  /**
   * <code>optional int32 margin_start = 3;</code>
   */
  private void clearMarginStart() {
    bitField0_ = (bitField0_ & ~0x00000008);
    marginStart_ = 0;
  }

  public static final int MARGIN_TOP_FIELD_NUMBER = 4;
  private int marginTop_;
  /**
   * <code>optional int32 margin_top = 4;</code>
   * @return Whether the marginTop field is set.
   */
  @java.lang.Override
  public boolean hasMarginTop() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>optional int32 margin_top = 4;</code>
   * @return The marginTop.
   */
  @java.lang.Override
  public int getMarginTop() {
    return marginTop_;
  }
  /**
   * <code>optional int32 margin_top = 4;</code>
   * @param value The marginTop to set.
   */
  private void setMarginTop(int value) {
    bitField0_ |= 0x00000010;
    marginTop_ = value;
  }
  /**
   * <code>optional int32 margin_top = 4;</code>
   */
  private void clearMarginTop() {
    bitField0_ = (bitField0_ & ~0x00000010);
    marginTop_ = 0;
  }

  public static final int MARGIN_END_FIELD_NUMBER = 5;
  private int marginEnd_;
  /**
   * <code>optional int32 margin_end = 5;</code>
   * @return Whether the marginEnd field is set.
   */
  @java.lang.Override
  public boolean hasMarginEnd() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>optional int32 margin_end = 5;</code>
   * @return The marginEnd.
   */
  @java.lang.Override
  public int getMarginEnd() {
    return marginEnd_;
  }
  /**
   * <code>optional int32 margin_end = 5;</code>
   * @param value The marginEnd to set.
   */
  private void setMarginEnd(int value) {
    bitField0_ |= 0x00000020;
    marginEnd_ = value;
  }
  /**
   * <code>optional int32 margin_end = 5;</code>
   */
  private void clearMarginEnd() {
    bitField0_ = (bitField0_ & ~0x00000020);
    marginEnd_ = 0;
  }

  public static final int MARGIN_BOTTOM_FIELD_NUMBER = 6;
  private int marginBottom_;
  /**
   * <code>optional int32 margin_bottom = 6;</code>
   * @return Whether the marginBottom field is set.
   */
  @java.lang.Override
  public boolean hasMarginBottom() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional int32 margin_bottom = 6;</code>
   * @return The marginBottom.
   */
  @java.lang.Override
  public int getMarginBottom() {
    return marginBottom_;
  }
  /**
   * <code>optional int32 margin_bottom = 6;</code>
   * @param value The marginBottom to set.
   */
  private void setMarginBottom(int value) {
    bitField0_ |= 0x00000040;
    marginBottom_ = value;
  }
  /**
   * <code>optional int32 margin_bottom = 6;</code>
   */
  private void clearMarginBottom() {
    bitField0_ = (bitField0_ & ~0x00000040);
    marginBottom_ = 0;
  }

  public static final int LAYOUT_GRAVITY_FIELD_NUMBER = 7;
  private int layoutGravity_;
  /**
   * <pre>
   * A bit-wise OR of the desired |Gravity| values.
   * </pre>
   *
   * <code>optional int32 layout_gravity = 7;</code>
   * @return Whether the layoutGravity field is set.
   */
  @java.lang.Override
  public boolean hasLayoutGravity() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * A bit-wise OR of the desired |Gravity| values.
   * </pre>
   *
   * <code>optional int32 layout_gravity = 7;</code>
   * @return The layoutGravity.
   */
  @java.lang.Override
  public int getLayoutGravity() {
    return layoutGravity_;
  }
  /**
   * <pre>
   * A bit-wise OR of the desired |Gravity| values.
   * </pre>
   *
   * <code>optional int32 layout_gravity = 7;</code>
   * @param value The layoutGravity to set.
   */
  private void setLayoutGravity(int value) {
    bitField0_ |= 0x00000080;
    layoutGravity_ = value;
  }
  /**
   * <pre>
   * A bit-wise OR of the desired |Gravity| values.
   * </pre>
   *
   * <code>optional int32 layout_gravity = 7;</code>
   */
  private void clearLayoutGravity() {
    bitField0_ = (bitField0_ & ~0x00000080);
    layoutGravity_ = 0;
  }

  public static final int MINIMUM_WIDTH_FIELD_NUMBER = 9;
  private int minimumWidth_;
  /**
   * <pre>
   * The minimum width of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_width = 9;</code>
   * @return Whether the minimumWidth field is set.
   */
  @java.lang.Override
  public boolean hasMinimumWidth() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The minimum width of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_width = 9;</code>
   * @return The minimumWidth.
   */
  @java.lang.Override
  public int getMinimumWidth() {
    return minimumWidth_;
  }
  /**
   * <pre>
   * The minimum width of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_width = 9;</code>
   * @param value The minimumWidth to set.
   */
  private void setMinimumWidth(int value) {
    bitField0_ |= 0x00000100;
    minimumWidth_ = value;
  }
  /**
   * <pre>
   * The minimum width of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_width = 9;</code>
   */
  private void clearMinimumWidth() {
    bitField0_ = (bitField0_ & ~0x00000100);
    minimumWidth_ = 0;
  }

  public static final int MINIMUM_HEIGHT_FIELD_NUMBER = 10;
  private int minimumHeight_;
  /**
   * <pre>
   * The minimum height of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_height = 10;</code>
   * @return Whether the minimumHeight field is set.
   */
  @java.lang.Override
  public boolean hasMinimumHeight() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The minimum height of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_height = 10;</code>
   * @return The minimumHeight.
   */
  @java.lang.Override
  public int getMinimumHeight() {
    return minimumHeight_;
  }
  /**
   * <pre>
   * The minimum height of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_height = 10;</code>
   * @param value The minimumHeight to set.
   */
  private void setMinimumHeight(int value) {
    bitField0_ |= 0x00000200;
    minimumHeight_ = value;
  }
  /**
   * <pre>
   * The minimum height of the view, in dp.
   * </pre>
   *
   * <code>optional int32 minimum_height = 10;</code>
   */
  private void clearMinimumHeight() {
    bitField0_ = (bitField0_ & ~0x00000200);
    minimumHeight_ = 0;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Parameters configuring how views attach to their parents.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ViewLayoutParamsProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ViewLayoutParamsProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_width = 1 [default = -2];</code>
     * @return Whether the layoutWidth field is set.
     */
    @java.lang.Override
    public boolean hasLayoutWidth() {
      return instance.hasLayoutWidth();
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_width = 1 [default = -2];</code>
     * @return The layoutWidth.
     */
    @java.lang.Override
    public int getLayoutWidth() {
      return instance.getLayoutWidth();
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_width = 1 [default = -2];</code>
     * @param value The layoutWidth to set.
     * @return This builder for chaining.
     */
    public Builder setLayoutWidth(int value) {
      copyOnWrite();
      instance.setLayoutWidth(value);
      return this;
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp. Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_width = 1 [default = -2];</code>
     * @return This builder for chaining.
     */
    public Builder clearLayoutWidth() {
      copyOnWrite();
      instance.clearLayoutWidth();
      return this;
    }

    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_height = 2 [default = -2];</code>
     * @return Whether the layoutHeight field is set.
     */
    @java.lang.Override
    public boolean hasLayoutHeight() {
      return instance.hasLayoutHeight();
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_height = 2 [default = -2];</code>
     * @return The layoutHeight.
     */
    @java.lang.Override
    public int getLayoutHeight() {
      return instance.getLayoutHeight();
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_height = 2 [default = -2];</code>
     * @param value The layoutHeight to set.
     * @return This builder for chaining.
     */
    public Builder setLayoutHeight(int value) {
      copyOnWrite();
      instance.setLayoutHeight(value);
      return this;
    }
    /**
     * <pre>
     * The width of the view. Values &gt;= 0 are interpreted as dp.Values &lt; 0
     * are special values as defined in the |Size| enum.
     * </pre>
     *
     * <code>optional int32 layout_height = 2 [default = -2];</code>
     * @return This builder for chaining.
     */
    public Builder clearLayoutHeight() {
      copyOnWrite();
      instance.clearLayoutHeight();
      return this;
    }

    /**
     * <pre>
     * The relative weight of the view. Only available in some containers.
     * </pre>
     *
     * <code>optional float layout_weight = 8;</code>
     * @return Whether the layoutWeight field is set.
     */
    @java.lang.Override
    public boolean hasLayoutWeight() {
      return instance.hasLayoutWeight();
    }
    /**
     * <pre>
     * The relative weight of the view. Only available in some containers.
     * </pre>
     *
     * <code>optional float layout_weight = 8;</code>
     * @return The layoutWeight.
     */
    @java.lang.Override
    public float getLayoutWeight() {
      return instance.getLayoutWeight();
    }
    /**
     * <pre>
     * The relative weight of the view. Only available in some containers.
     * </pre>
     *
     * <code>optional float layout_weight = 8;</code>
     * @param value The layoutWeight to set.
     * @return This builder for chaining.
     */
    public Builder setLayoutWeight(float value) {
      copyOnWrite();
      instance.setLayoutWeight(value);
      return this;
    }
    /**
     * <pre>
     * The relative weight of the view. Only available in some containers.
     * </pre>
     *
     * <code>optional float layout_weight = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearLayoutWeight() {
      copyOnWrite();
      instance.clearLayoutWeight();
      return this;
    }

    /**
     * <code>optional int32 margin_start = 3;</code>
     * @return Whether the marginStart field is set.
     */
    @java.lang.Override
    public boolean hasMarginStart() {
      return instance.hasMarginStart();
    }
    /**
     * <code>optional int32 margin_start = 3;</code>
     * @return The marginStart.
     */
    @java.lang.Override
    public int getMarginStart() {
      return instance.getMarginStart();
    }
    /**
     * <code>optional int32 margin_start = 3;</code>
     * @param value The marginStart to set.
     * @return This builder for chaining.
     */
    public Builder setMarginStart(int value) {
      copyOnWrite();
      instance.setMarginStart(value);
      return this;
    }
    /**
     * <code>optional int32 margin_start = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMarginStart() {
      copyOnWrite();
      instance.clearMarginStart();
      return this;
    }

    /**
     * <code>optional int32 margin_top = 4;</code>
     * @return Whether the marginTop field is set.
     */
    @java.lang.Override
    public boolean hasMarginTop() {
      return instance.hasMarginTop();
    }
    /**
     * <code>optional int32 margin_top = 4;</code>
     * @return The marginTop.
     */
    @java.lang.Override
    public int getMarginTop() {
      return instance.getMarginTop();
    }
    /**
     * <code>optional int32 margin_top = 4;</code>
     * @param value The marginTop to set.
     * @return This builder for chaining.
     */
    public Builder setMarginTop(int value) {
      copyOnWrite();
      instance.setMarginTop(value);
      return this;
    }
    /**
     * <code>optional int32 margin_top = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMarginTop() {
      copyOnWrite();
      instance.clearMarginTop();
      return this;
    }

    /**
     * <code>optional int32 margin_end = 5;</code>
     * @return Whether the marginEnd field is set.
     */
    @java.lang.Override
    public boolean hasMarginEnd() {
      return instance.hasMarginEnd();
    }
    /**
     * <code>optional int32 margin_end = 5;</code>
     * @return The marginEnd.
     */
    @java.lang.Override
    public int getMarginEnd() {
      return instance.getMarginEnd();
    }
    /**
     * <code>optional int32 margin_end = 5;</code>
     * @param value The marginEnd to set.
     * @return This builder for chaining.
     */
    public Builder setMarginEnd(int value) {
      copyOnWrite();
      instance.setMarginEnd(value);
      return this;
    }
    /**
     * <code>optional int32 margin_end = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMarginEnd() {
      copyOnWrite();
      instance.clearMarginEnd();
      return this;
    }

    /**
     * <code>optional int32 margin_bottom = 6;</code>
     * @return Whether the marginBottom field is set.
     */
    @java.lang.Override
    public boolean hasMarginBottom() {
      return instance.hasMarginBottom();
    }
    /**
     * <code>optional int32 margin_bottom = 6;</code>
     * @return The marginBottom.
     */
    @java.lang.Override
    public int getMarginBottom() {
      return instance.getMarginBottom();
    }
    /**
     * <code>optional int32 margin_bottom = 6;</code>
     * @param value The marginBottom to set.
     * @return This builder for chaining.
     */
    public Builder setMarginBottom(int value) {
      copyOnWrite();
      instance.setMarginBottom(value);
      return this;
    }
    /**
     * <code>optional int32 margin_bottom = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMarginBottom() {
      copyOnWrite();
      instance.clearMarginBottom();
      return this;
    }

    /**
     * <pre>
     * A bit-wise OR of the desired |Gravity| values.
     * </pre>
     *
     * <code>optional int32 layout_gravity = 7;</code>
     * @return Whether the layoutGravity field is set.
     */
    @java.lang.Override
    public boolean hasLayoutGravity() {
      return instance.hasLayoutGravity();
    }
    /**
     * <pre>
     * A bit-wise OR of the desired |Gravity| values.
     * </pre>
     *
     * <code>optional int32 layout_gravity = 7;</code>
     * @return The layoutGravity.
     */
    @java.lang.Override
    public int getLayoutGravity() {
      return instance.getLayoutGravity();
    }
    /**
     * <pre>
     * A bit-wise OR of the desired |Gravity| values.
     * </pre>
     *
     * <code>optional int32 layout_gravity = 7;</code>
     * @param value The layoutGravity to set.
     * @return This builder for chaining.
     */
    public Builder setLayoutGravity(int value) {
      copyOnWrite();
      instance.setLayoutGravity(value);
      return this;
    }
    /**
     * <pre>
     * A bit-wise OR of the desired |Gravity| values.
     * </pre>
     *
     * <code>optional int32 layout_gravity = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearLayoutGravity() {
      copyOnWrite();
      instance.clearLayoutGravity();
      return this;
    }

    /**
     * <pre>
     * The minimum width of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_width = 9;</code>
     * @return Whether the minimumWidth field is set.
     */
    @java.lang.Override
    public boolean hasMinimumWidth() {
      return instance.hasMinimumWidth();
    }
    /**
     * <pre>
     * The minimum width of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_width = 9;</code>
     * @return The minimumWidth.
     */
    @java.lang.Override
    public int getMinimumWidth() {
      return instance.getMinimumWidth();
    }
    /**
     * <pre>
     * The minimum width of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_width = 9;</code>
     * @param value The minimumWidth to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumWidth(int value) {
      copyOnWrite();
      instance.setMinimumWidth(value);
      return this;
    }
    /**
     * <pre>
     * The minimum width of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_width = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumWidth() {
      copyOnWrite();
      instance.clearMinimumWidth();
      return this;
    }

    /**
     * <pre>
     * The minimum height of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_height = 10;</code>
     * @return Whether the minimumHeight field is set.
     */
    @java.lang.Override
    public boolean hasMinimumHeight() {
      return instance.hasMinimumHeight();
    }
    /**
     * <pre>
     * The minimum height of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_height = 10;</code>
     * @return The minimumHeight.
     */
    @java.lang.Override
    public int getMinimumHeight() {
      return instance.getMinimumHeight();
    }
    /**
     * <pre>
     * The minimum height of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_height = 10;</code>
     * @param value The minimumHeight to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumHeight(int value) {
      copyOnWrite();
      instance.setMinimumHeight(value);
      return this;
    }
    /**
     * <pre>
     * The minimum height of the view, in dp.
     * </pre>
     *
     * <code>optional int32 minimum_height = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumHeight() {
      copyOnWrite();
      instance.clearMinimumHeight();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ViewLayoutParamsProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "layoutWidth_",
            "layoutHeight_",
            "marginStart_",
            "marginTop_",
            "marginEnd_",
            "marginBottom_",
            "layoutGravity_",
            "layoutWeight_",
            "minimumWidth_",
            "minimumHeight_",
          };
          java.lang.String info =
              "\u0001\n\u0000\u0001\u0001\n\n\u0000\u0000\u0000\u0001\u1004\u0000\u0002\u1004\u0001" +
              "\u0003\u1004\u0003\u0004\u1004\u0004\u0005\u1004\u0005\u0006\u1004\u0006\u0007\u1004" +
              "\u0007\b\u1001\u0002\t\u1004\b\n\u1004\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ViewLayoutParamsProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto DEFAULT_INSTANCE;
  static {
    ViewLayoutParamsProto defaultInstance = new ViewLayoutParamsProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ViewLayoutParamsProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ViewLayoutParamsProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ViewLayoutParamsProto> PARSER;

  public static com.google.protobuf.Parser<ViewLayoutParamsProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

