
// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     java_cpp_enum.py
// From
//     ../../components/autofill_assistant/browser/metrics.h

package org.chromium.chrome.browser.autofill_assistant.metrics;

import androidx.annotation.IntDef;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@IntDef({
    LiteScriptFinishedState.LITE_SCRIPT_GET_ACTIONS_FAILED,
    LiteScriptFinishedState.LITE_SCRIPT_GET_ACTIONS_PARSE_ERROR,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_NAVIGATE,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_SUCCEEDED,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_CANCEL_SESSION,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_CANCEL_FOREVER,
    LiteScriptFinishedState.LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT,
    LiteScriptFinishedState.LITE_SCRIPT_NAVIGATION_ERROR,
    LiteScriptFinishedState.LITE_SCRIPT_WEB_CONTENTS_DESTROYED_WHILE_VISIBLE,
    LiteScriptFinishedState.LITE_SCRIPT_WEB_CONTENTS_DESTROYED_WHILE_INVISIBLE,
    LiteScriptFinishedState.LITE_SCRIPT_NO_TRIGGER_SCRIPT_AVAILABLE,
    LiteScriptFinishedState.LITE_SCRIPT_FAILED_TO_SHOW,
    LiteScriptFinishedState.LITE_SCRIPT_DISABLED_PROACTIVE_HELP_SETTING,
    LiteScriptFinishedState.LITE_SCRIPT_BASE64_DECODING_ERROR,
    LiteScriptFinishedState.LITE_SCRIPT_BOTTOMSHEET_ONBOARDING_REJECTED,
    LiteScriptFinishedState.LITE_SCRIPT_UNKNOWN_FAILURE,
    LiteScriptFinishedState.LITE_SCRIPT_SERVICE_DELETED,
    LiteScriptFinishedState.LITE_SCRIPT_PATH_MISMATCH,
    LiteScriptFinishedState.LITE_SCRIPT_UNSAFE_ACTIONS,
    LiteScriptFinishedState.LITE_SCRIPT_INVALID_SCRIPT,
    LiteScriptFinishedState.LITE_SCRIPT_BROWSE_FAILED_NAVIGATE,
    LiteScriptFinishedState.LITE_SCRIPT_BROWSE_FAILED_OTHER,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_CONDITION_NO_LONGER_TRUE,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_CLOSE,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_FAILED_OTHER,
    LiteScriptFinishedState.LITE_SCRIPT_PROMPT_SWIPE_DISMISSED, LiteScriptFinishedState.MAX_VALUE
})
@Retention(RetentionPolicy.SOURCE)
public @interface LiteScriptFinishedState {
  /**
   * Communication with backend failed.
   */
  int LITE_SCRIPT_GET_ACTIONS_FAILED = 3;
  /**
   * Failed to parse the proto sent by the backend.
   */
  int LITE_SCRIPT_GET_ACTIONS_PARSE_ERROR = 4;
  /**
   * Lite script failed due to a navigation event to a non-allowed domain.
   */
  int LITE_SCRIPT_PROMPT_FAILED_NAVIGATE = 9;
  /**
   * Lite script succeeded. The user accepted the prompt.
   */
  int LITE_SCRIPT_PROMPT_SUCCEEDED = 13;
  /**
   * Since Chrome M-88. The user tapped the 'cancel for this session' button.
   */
  int LITE_SCRIPT_PROMPT_FAILED_CANCEL_SESSION = 14;
  /**
   * Since Chrome M-88. The user tapped the 'never show again' button.
   */
  int LITE_SCRIPT_PROMPT_FAILED_CANCEL_FOREVER = 15;
  /**
   * Since Chrome M-88. The trigger script has timed out. This indicates that trigger conditions
   * were evaluated for >= timeout without success. Time is only counted while the tab is visible
   * and the lite script is invisible. The timeout resets on tab change.
   */
  int LITE_SCRIPT_TRIGGER_CONDITION_TIMEOUT = 17;
  /**
   * Since Chrome M-88. A navigation error occurred, leading to Chrome showing an error page.
   */
  int LITE_SCRIPT_NAVIGATION_ERROR = 18;
  /**
   * Since Chrome M-88. The tab was closed while the prompt was visible.
   */
  int LITE_SCRIPT_WEB_CONTENTS_DESTROYED_WHILE_VISIBLE = 19;
  /**
   * Since Chrome M-88. The tab was closed while the prompt was invisible.
   */
  int LITE_SCRIPT_WEB_CONTENTS_DESTROYED_WHILE_INVISIBLE = 20;
  /**
   * Since Chrome M-88. The RPC to fetch the trigger scripts returned with an empty response.
   */
  int LITE_SCRIPT_NO_TRIGGER_SCRIPT_AVAILABLE = 21;
  /**
   * Since Chrome M-88. The trigger script failed to show. This can happen, for example, if the
   * activity was changed after triggering (e.g., switching from CCT to regular tab).
   */
  int LITE_SCRIPT_FAILED_TO_SHOW = 22;
  /**
   * Since Chrome M-88. The proactive help switch was enabled at start, but then manually disabled
   * in the Chrome settings.
   */
  int LITE_SCRIPT_DISABLED_PROACTIVE_HELP_SETTING = 23;
  /**
   * Since Chrome M-88. The client failed to base64-decode the trigger script specified in the
   * script parameters.
   */
  int LITE_SCRIPT_BASE64_DECODING_ERROR = 24;
  /**
   * The user rejected the bottom sheet onboarding
   */
  int LITE_SCRIPT_BOTTOMSHEET_ONBOARDING_REJECTED = 25;
  /**
   * NOTE: All values in this block are DEPRECATED and will only be sent by Chrome M-86 and M-87.
   * The lite script failed for an unknown reason.
   */
  int LITE_SCRIPT_UNKNOWN_FAILURE = 0;
  /**
   * Can happen when users close the tab or similar.
   */
  int LITE_SCRIPT_SERVICE_DELETED = 1;
  /**
   * |GetActions| was asked to retrieve a wrong script path.
   */
  int LITE_SCRIPT_PATH_MISMATCH = 2;
  /**
   * One or multiple unsafe actions were contained in script.
   */
  int LITE_SCRIPT_UNSAFE_ACTIONS = 5;
  /**
   * The mini script is invalid. A valid script must contain a prompt (browse=true) action and end
   * in a prompt(browse=false) action.
   */
  int LITE_SCRIPT_INVALID_SCRIPT = 6;
  /**
   * The prompt(browse) action failed due to a navigation event to a non-allowed domain.
   */
  int LITE_SCRIPT_BROWSE_FAILED_NAVIGATE = 7;
  /**
   * The prompt(browse) action failed for an unknown reason.
   */
  int LITE_SCRIPT_BROWSE_FAILED_OTHER = 8;
  /**
   * The prompt(regular) action failed because the condition to show it was no longer true.
   */
  int LITE_SCRIPT_PROMPT_FAILED_CONDITION_NO_LONGER_TRUE = 10;
  /**
   * The prompt(regular) action failed because the user tapped the close chip.
   */
  int LITE_SCRIPT_PROMPT_FAILED_CLOSE = 11;
  /**
   * The prompt(regular) action failed for an unknown reason.
   */
  int LITE_SCRIPT_PROMPT_FAILED_OTHER = 12;
  /**
   * Since Chrome M-88. The bottom sheet was swipe-dismissed by the user.
   */
  int LITE_SCRIPT_PROMPT_SWIPE_DISMISSED = 16;
  int MAX_VALUE = LITE_SCRIPT_BOTTOMSHEET_ONBOARDING_REJECTED;
}
