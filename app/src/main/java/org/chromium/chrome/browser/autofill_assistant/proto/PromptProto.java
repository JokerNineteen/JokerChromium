// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Allow choosing one or more possibility. If ShowCast was called just
 * before, allow interaction with the touchable element area, otherwise don't
 * allow any interactions.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.PromptProto}
 */
public  final class PromptProto extends
    com.google.protobuf.GeneratedMessageLite<
        PromptProto, PromptProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.PromptProto)
    PromptProtoOrBuilder {
  private PromptProto() {
    message_ = "";
    choices_ = emptyProtobufList();
    browseDomainsAllowlist_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  public interface ChoiceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.PromptProto.Choice)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     * @return Whether the chip field is set.
     */
    boolean hasChip();
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     * @return The chip.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ChipProto getChip();

    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     * @return Whether the directAction field is set.
     */
    boolean hasDirectAction();
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     * @return The directAction.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto getDirectAction();

    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     * @return Whether the autoSelectWhen field is set.
     */
    boolean hasAutoSelectWhen();
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     * @return The autoSelectWhen.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getAutoSelectWhen();

    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     * @return Whether the showOnlyWhen field is set.
     */
    boolean hasShowOnlyWhen();
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     * @return The showOnlyWhen.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getShowOnlyWhen();

    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     * @return Whether the allowDisabling field is set.
     */
    boolean hasAllowDisabling();
    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     * @return The allowDisabling.
     */
    boolean getAllowDisabling();

    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return Whether the serverPayload field is set.
     */
    boolean hasServerPayload();
    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return The serverPayload.
     */
    com.google.protobuf.ByteString getServerPayload();
  }
  /**
   * <pre>
   * A choice that can be triggered:
   * - by clicking on a chip, if a chip is set
   * - by triggering a direct action, if direct action names are set
   * - indirectly, DOM change, if auto_select_when if set
   * One of these protos must is transmitted as-is back to the server as part of
   * ProcessedActionProto.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.PromptProto.Choice}
   */
  public  static final class Choice extends
      com.google.protobuf.GeneratedMessageLite<
          Choice, Choice.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.PromptProto.Choice)
      ChoiceOrBuilder {
    private Choice() {
      serverPayload_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CHIP_FIELD_NUMBER = 11;
    private org.chromium.chrome.browser.autofill_assistant.proto.ChipProto chip_;
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     */
    @java.lang.Override
    public boolean hasChip() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ChipProto getChip() {
      return chip_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ChipProto.getDefaultInstance() : chip_;
    }
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     */
    private void setChip(org.chromium.chrome.browser.autofill_assistant.proto.ChipProto value) {
      value.getClass();
  chip_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeChip(org.chromium.chrome.browser.autofill_assistant.proto.ChipProto value) {
      value.getClass();
  if (chip_ != null &&
          chip_ != org.chromium.chrome.browser.autofill_assistant.proto.ChipProto.getDefaultInstance()) {
        chip_ =
          org.chromium.chrome.browser.autofill_assistant.proto.ChipProto.newBuilder(chip_).mergeFrom(value).buildPartial();
      } else {
        chip_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The chip to display to the UI.
     * </pre>
     *
     * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
     */
    private void clearChip() {  chip_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int DIRECT_ACTION_FIELD_NUMBER = 12;
    private org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto directAction_;
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     */
    @java.lang.Override
    public boolean hasDirectAction() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto getDirectAction() {
      return directAction_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto.getDefaultInstance() : directAction_;
    }
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     */
    private void setDirectAction(org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto value) {
      value.getClass();
  directAction_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDirectAction(org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto value) {
      value.getClass();
  if (directAction_ != null &&
          directAction_ != org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto.getDefaultInstance()) {
        directAction_ =
          org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto.newBuilder(directAction_).mergeFrom(value).buildPartial();
      } else {
        directAction_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Map this choice to a direct action.
     * </pre>
     *
     * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
     */
    private void clearDirectAction() {  directAction_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int AUTO_SELECT_WHEN_FIELD_NUMBER = 15;
    private org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto autoSelectWhen_;
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     */
    @java.lang.Override
    public boolean hasAutoSelectWhen() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getAutoSelectWhen() {
      return autoSelectWhen_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.getDefaultInstance() : autoSelectWhen_;
    }
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     */
    private void setAutoSelectWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
      value.getClass();
  autoSelectWhen_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAutoSelectWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
      value.getClass();
  if (autoSelectWhen_ != null &&
          autoSelectWhen_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.getDefaultInstance()) {
        autoSelectWhen_ =
          org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.newBuilder(autoSelectWhen_).mergeFrom(value).buildPartial();
      } else {
        autoSelectWhen_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Auto-select this choice when the condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
     */
    private void clearAutoSelectWhen() {  autoSelectWhen_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int SHOW_ONLY_WHEN_FIELD_NUMBER = 16;
    private org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto showOnlyWhen_;
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     */
    @java.lang.Override
    public boolean hasShowOnlyWhen() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getShowOnlyWhen() {
      return showOnlyWhen_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.getDefaultInstance() : showOnlyWhen_;
    }
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     */
    private void setShowOnlyWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
      value.getClass();
  showOnlyWhen_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeShowOnlyWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
      value.getClass();
  if (showOnlyWhen_ != null &&
          showOnlyWhen_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.getDefaultInstance()) {
        showOnlyWhen_ =
          org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.newBuilder(showOnlyWhen_).mergeFrom(value).buildPartial();
      } else {
        showOnlyWhen_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * This chip is only visible or enabled if this condition is met.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
     */
    private void clearShowOnlyWhen() {  showOnlyWhen_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ALLOW_DISABLING_FIELD_NUMBER = 9;
    private boolean allowDisabling_;
    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     * @return Whether the allowDisabling field is set.
     */
    @java.lang.Override
    public boolean hasAllowDisabling() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     * @return The allowDisabling.
     */
    @java.lang.Override
    public boolean getAllowDisabling() {
      return allowDisabling_;
    }
    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     * @param value The allowDisabling to set.
     */
    private void setAllowDisabling(boolean value) {
      bitField0_ |= 0x00000010;
      allowDisabling_ = value;
    }
    /**
     * <pre>
     * Disable the chip instead of hiding it completely, if the preconditions
     * don't match.
     * </pre>
     *
     * <code>optional bool allow_disabling = 9;</code>
     */
    private void clearAllowDisabling() {
      bitField0_ = (bitField0_ & ~0x00000010);
      allowDisabling_ = false;
    }

    public static final int SERVER_PAYLOAD_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString serverPayload_;
    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return Whether the serverPayload field is set.
     */
    @java.lang.Override
    public boolean hasServerPayload() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return The serverPayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServerPayload() {
      return serverPayload_;
    }
    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @param value The serverPayload to set.
     */
    private void setServerPayload(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000020;
      serverPayload_ = value;
    }
    /**
     * <pre>
     * Server payload originally sent by the server. This should
     * be transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     */
    private void clearServerPayload() {
      bitField0_ = (bitField0_ & ~0x00000020);
      serverPayload_ = getDefaultInstance().getServerPayload();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A choice that can be triggered:
     * - by clicking on a chip, if a chip is set
     * - by triggering a direct action, if direct action names are set
     * - indirectly, DOM change, if auto_select_when if set
     * One of these protos must is transmitted as-is back to the server as part of
     * ProcessedActionProto.
     * </pre>
     *
     * Protobuf type {@code autofill_assistant.PromptProto.Choice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.PromptProto.Choice)
        org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.ChoiceOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      @java.lang.Override
      public boolean hasChip() {
        return instance.hasChip();
      }
      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.ChipProto getChip() {
        return instance.getChip();
      }
      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      public Builder setChip(org.chromium.chrome.browser.autofill_assistant.proto.ChipProto value) {
        copyOnWrite();
        instance.setChip(value);
        return this;
        }
      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      public Builder setChip(
          org.chromium.chrome.browser.autofill_assistant.proto.ChipProto.Builder builderForValue) {
        copyOnWrite();
        instance.setChip(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      public Builder mergeChip(org.chromium.chrome.browser.autofill_assistant.proto.ChipProto value) {
        copyOnWrite();
        instance.mergeChip(value);
        return this;
      }
      /**
       * <pre>
       * The chip to display to the UI.
       * </pre>
       *
       * <code>optional .autofill_assistant.ChipProto chip = 11;</code>
       */
      public Builder clearChip() {  copyOnWrite();
        instance.clearChip();
        return this;
      }

      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      @java.lang.Override
      public boolean hasDirectAction() {
        return instance.hasDirectAction();
      }
      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto getDirectAction() {
        return instance.getDirectAction();
      }
      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      public Builder setDirectAction(org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto value) {
        copyOnWrite();
        instance.setDirectAction(value);
        return this;
        }
      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      public Builder setDirectAction(
          org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto.Builder builderForValue) {
        copyOnWrite();
        instance.setDirectAction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      public Builder mergeDirectAction(org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto value) {
        copyOnWrite();
        instance.mergeDirectAction(value);
        return this;
      }
      /**
       * <pre>
       * Map this choice to a direct action.
       * </pre>
       *
       * <code>optional .autofill_assistant.DirectActionProto direct_action = 12;</code>
       */
      public Builder clearDirectAction() {  copyOnWrite();
        instance.clearDirectAction();
        return this;
      }

      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      @java.lang.Override
      public boolean hasAutoSelectWhen() {
        return instance.hasAutoSelectWhen();
      }
      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getAutoSelectWhen() {
        return instance.getAutoSelectWhen();
      }
      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      public Builder setAutoSelectWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
        copyOnWrite();
        instance.setAutoSelectWhen(value);
        return this;
        }
      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      public Builder setAutoSelectWhen(
          org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.Builder builderForValue) {
        copyOnWrite();
        instance.setAutoSelectWhen(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      public Builder mergeAutoSelectWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
        copyOnWrite();
        instance.mergeAutoSelectWhen(value);
        return this;
      }
      /**
       * <pre>
       * Auto-select this choice when the condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto auto_select_when = 15;</code>
       */
      public Builder clearAutoSelectWhen() {  copyOnWrite();
        instance.clearAutoSelectWhen();
        return this;
      }

      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      @java.lang.Override
      public boolean hasShowOnlyWhen() {
        return instance.hasShowOnlyWhen();
      }
      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getShowOnlyWhen() {
        return instance.getShowOnlyWhen();
      }
      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      public Builder setShowOnlyWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
        copyOnWrite();
        instance.setShowOnlyWhen(value);
        return this;
        }
      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      public Builder setShowOnlyWhen(
          org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.Builder builderForValue) {
        copyOnWrite();
        instance.setShowOnlyWhen(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      public Builder mergeShowOnlyWhen(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto value) {
        copyOnWrite();
        instance.mergeShowOnlyWhen(value);
        return this;
      }
      /**
       * <pre>
       * This chip is only visible or enabled if this condition is met.
       * </pre>
       *
       * <code>optional .autofill_assistant.ElementConditionProto show_only_when = 16;</code>
       */
      public Builder clearShowOnlyWhen() {  copyOnWrite();
        instance.clearShowOnlyWhen();
        return this;
      }

      /**
       * <pre>
       * Disable the chip instead of hiding it completely, if the preconditions
       * don't match.
       * </pre>
       *
       * <code>optional bool allow_disabling = 9;</code>
       * @return Whether the allowDisabling field is set.
       */
      @java.lang.Override
      public boolean hasAllowDisabling() {
        return instance.hasAllowDisabling();
      }
      /**
       * <pre>
       * Disable the chip instead of hiding it completely, if the preconditions
       * don't match.
       * </pre>
       *
       * <code>optional bool allow_disabling = 9;</code>
       * @return The allowDisabling.
       */
      @java.lang.Override
      public boolean getAllowDisabling() {
        return instance.getAllowDisabling();
      }
      /**
       * <pre>
       * Disable the chip instead of hiding it completely, if the preconditions
       * don't match.
       * </pre>
       *
       * <code>optional bool allow_disabling = 9;</code>
       * @param value The allowDisabling to set.
       * @return This builder for chaining.
       */
      public Builder setAllowDisabling(boolean value) {
        copyOnWrite();
        instance.setAllowDisabling(value);
        return this;
      }
      /**
       * <pre>
       * Disable the chip instead of hiding it completely, if the preconditions
       * don't match.
       * </pre>
       *
       * <code>optional bool allow_disabling = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowDisabling() {
        copyOnWrite();
        instance.clearAllowDisabling();
        return this;
      }

      /**
       * <pre>
       * Server payload originally sent by the server. This should
       * be transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return Whether the serverPayload field is set.
       */
      @java.lang.Override
      public boolean hasServerPayload() {
        return instance.hasServerPayload();
      }
      /**
       * <pre>
       * Server payload originally sent by the server. This should
       * be transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return The serverPayload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getServerPayload() {
        return instance.getServerPayload();
      }
      /**
       * <pre>
       * Server payload originally sent by the server. This should
       * be transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @param value The serverPayload to set.
       * @return This builder for chaining.
       */
      public Builder setServerPayload(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerPayload(value);
        return this;
      }
      /**
       * <pre>
       * Server payload originally sent by the server. This should
       * be transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerPayload() {
        copyOnWrite();
        instance.clearServerPayload();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.PromptProto.Choice)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "serverPayload_",
              "allowDisabling_",
              "chip_",
              "directAction_",
              "autoSelectWhen_",
              "showOnlyWhen_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0005\u0010\u0006\u0000\u0000\u0000\u0005\u100a\u0005\t" +
                "\u1007\u0004\u000b\u1009\u0000\f\u1009\u0001\u000f\u1009\u0002\u0010\u1009\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.PromptProto.Choice)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice DEFAULT_INSTANCE;
    static {
      Choice defaultInstance = new Choice();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Choice.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Choice> PARSER;

    public static com.google.protobuf.Parser<Choice> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.PromptProto.Result)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     * @return Whether the navigationEnded field is set.
     */
    boolean hasNavigationEnded();
    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     * @return The navigationEnded.
     */
    boolean getNavigationEnded();

    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return Whether the serverPayload field is set.
     */
    boolean hasServerPayload();
    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return The serverPayload.
     */
    com.google.protobuf.ByteString getServerPayload();
  }
  /**
   * <pre>
   * Result to pass to ProcessedActionProto.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.PromptProto.Result}
   */
  public  static final class Result extends
      com.google.protobuf.GeneratedMessageLite<
          Result, Result.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.PromptProto.Result)
      ResultOrBuilder {
    private Result() {
      serverPayload_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int NAVIGATION_ENDED_FIELD_NUMBER = 2;
    private boolean navigationEnded_;
    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     * @return Whether the navigationEnded field is set.
     */
    @java.lang.Override
    public boolean hasNavigationEnded() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     * @return The navigationEnded.
     */
    @java.lang.Override
    public boolean getNavigationEnded() {
      return navigationEnded_;
    }
    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     * @param value The navigationEnded to set.
     */
    private void setNavigationEnded(boolean value) {
      bitField0_ |= 0x00000001;
      navigationEnded_ = value;
    }
    /**
     * <pre>
     * This field is only used when crafting a response Choice for the server
     * when the |end_on_navigation| option is set. It means there was a
     * navigation event while in prompt mode that ended the action.
     * </pre>
     *
     * <code>optional bool navigation_ended = 2;</code>
     */
    private void clearNavigationEnded() {
      bitField0_ = (bitField0_ & ~0x00000001);
      navigationEnded_ = false;
    }

    public static final int SERVER_PAYLOAD_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString serverPayload_;
    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return Whether the serverPayload field is set.
     */
    @java.lang.Override
    public boolean hasServerPayload() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @return The serverPayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServerPayload() {
      return serverPayload_;
    }
    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     * @param value The serverPayload to set.
     */
    private void setServerPayload(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      serverPayload_ = value;
    }
    /**
     * <pre>
     * Server payload originally found in Choice.server_payload. This should be
     * transmitted as-is by the client without interpreting.
     * </pre>
     *
     * <code>optional bytes server_payload = 5;</code>
     */
    private void clearServerPayload() {
      bitField0_ = (bitField0_ & ~0x00000002);
      serverPayload_ = getDefaultInstance().getServerPayload();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result to pass to ProcessedActionProto.
     * </pre>
     *
     * Protobuf type {@code autofill_assistant.PromptProto.Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.PromptProto.Result)
        org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.ResultOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * This field is only used when crafting a response Choice for the server
       * when the |end_on_navigation| option is set. It means there was a
       * navigation event while in prompt mode that ended the action.
       * </pre>
       *
       * <code>optional bool navigation_ended = 2;</code>
       * @return Whether the navigationEnded field is set.
       */
      @java.lang.Override
      public boolean hasNavigationEnded() {
        return instance.hasNavigationEnded();
      }
      /**
       * <pre>
       * This field is only used when crafting a response Choice for the server
       * when the |end_on_navigation| option is set. It means there was a
       * navigation event while in prompt mode that ended the action.
       * </pre>
       *
       * <code>optional bool navigation_ended = 2;</code>
       * @return The navigationEnded.
       */
      @java.lang.Override
      public boolean getNavigationEnded() {
        return instance.getNavigationEnded();
      }
      /**
       * <pre>
       * This field is only used when crafting a response Choice for the server
       * when the |end_on_navigation| option is set. It means there was a
       * navigation event while in prompt mode that ended the action.
       * </pre>
       *
       * <code>optional bool navigation_ended = 2;</code>
       * @param value The navigationEnded to set.
       * @return This builder for chaining.
       */
      public Builder setNavigationEnded(boolean value) {
        copyOnWrite();
        instance.setNavigationEnded(value);
        return this;
      }
      /**
       * <pre>
       * This field is only used when crafting a response Choice for the server
       * when the |end_on_navigation| option is set. It means there was a
       * navigation event while in prompt mode that ended the action.
       * </pre>
       *
       * <code>optional bool navigation_ended = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNavigationEnded() {
        copyOnWrite();
        instance.clearNavigationEnded();
        return this;
      }

      /**
       * <pre>
       * Server payload originally found in Choice.server_payload. This should be
       * transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return Whether the serverPayload field is set.
       */
      @java.lang.Override
      public boolean hasServerPayload() {
        return instance.hasServerPayload();
      }
      /**
       * <pre>
       * Server payload originally found in Choice.server_payload. This should be
       * transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return The serverPayload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getServerPayload() {
        return instance.getServerPayload();
      }
      /**
       * <pre>
       * Server payload originally found in Choice.server_payload. This should be
       * transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @param value The serverPayload to set.
       * @return This builder for chaining.
       */
      public Builder setServerPayload(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerPayload(value);
        return this;
      }
      /**
       * <pre>
       * Server payload originally found in Choice.server_payload. This should be
       * transmitted as-is by the client without interpreting.
       * </pre>
       *
       * <code>optional bytes server_payload = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerPayload() {
        copyOnWrite();
        instance.clearServerPayload();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.PromptProto.Result)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "navigationEnded_",
              "serverPayload_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0002\u0005\u0002\u0000\u0000\u0000\u0002\u1007\u0000\u0005" +
                "\u100a\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.PromptProto.Result)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result DEFAULT_INSTANCE;
    static {
      Result defaultInstance = new Result();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Result.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Result getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Result> PARSER;

    public static com.google.protobuf.Parser<Result> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int MESSAGE_FIELD_NUMBER = 1;
  private java.lang.String message_;
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return Whether the message field is set.
   */
  @java.lang.Override
  public boolean hasMessage() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    return message_;
  }
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(message_);
  }
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @param value The message to set.
   */
  private void setMessage(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    message_ = value;
  }
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   */
  private void clearMessage() {
    bitField0_ = (bitField0_ & ~0x00000001);
    message_ = getDefaultInstance().getMessage();
  }
  /**
   * <pre>
   * Display this message to the user.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @param value The bytes for message to set.
   */
  private void setMessageBytes(
      com.google.protobuf.ByteString value) {
    message_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int CHOICES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> choices_;
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> getChoicesList() {
    return choices_;
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.ChoiceOrBuilder> 
      getChoicesOrBuilderList() {
    return choices_;
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  @java.lang.Override
  public int getChoicesCount() {
    return choices_.size();
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice getChoices(int index) {
    return choices_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.ChoiceOrBuilder getChoicesOrBuilder(
      int index) {
    return choices_.get(index);
  }
  private void ensureChoicesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> tmp = choices_;
    if (!tmp.isModifiable()) {
      choices_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void setChoices(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
    value.getClass();
  ensureChoicesIsMutable();
    choices_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void addChoices(org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
    value.getClass();
  ensureChoicesIsMutable();
    choices_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void addChoices(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
    value.getClass();
  ensureChoicesIsMutable();
    choices_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void addAllChoices(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> values) {
    ensureChoicesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, choices_);
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void clearChoices() {
    choices_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
   */
  private void removeChoices(int index) {
    ensureChoicesIsMutable();
    choices_.remove(index);
  }

  public static final int ALLOW_INTERRUPT_FIELD_NUMBER = 5;
  private boolean allowInterrupt_;
  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match, then go back to the prompt.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 5;</code>
   * @return Whether the allowInterrupt field is set.
   */
  @java.lang.Override
  public boolean hasAllowInterrupt() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match, then go back to the prompt.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 5;</code>
   * @return The allowInterrupt.
   */
  @java.lang.Override
  public boolean getAllowInterrupt() {
    return allowInterrupt_;
  }
  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match, then go back to the prompt.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 5;</code>
   * @param value The allowInterrupt to set.
   */
  private void setAllowInterrupt(boolean value) {
    bitField0_ |= 0x00000002;
    allowInterrupt_ = value;
  }
  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match, then go back to the prompt.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 5;</code>
   */
  private void clearAllowInterrupt() {
    bitField0_ = (bitField0_ & ~0x00000002);
    allowInterrupt_ = false;
  }

  public static final int DISABLE_FORCE_EXPAND_SHEET_FIELD_NUMBER = 6;
  private boolean disableForceExpandSheet_;
  /**
   * <pre>
   * If this is true, then we do not force expand the sheet when entering the
   * prompt state. When false or not set, this keeps the default behavior.
   * </pre>
   *
   * <code>optional bool disable_force_expand_sheet = 6;</code>
   * @return Whether the disableForceExpandSheet field is set.
   */
  @java.lang.Override
  public boolean hasDisableForceExpandSheet() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * If this is true, then we do not force expand the sheet when entering the
   * prompt state. When false or not set, this keeps the default behavior.
   * </pre>
   *
   * <code>optional bool disable_force_expand_sheet = 6;</code>
   * @return The disableForceExpandSheet.
   */
  @java.lang.Override
  public boolean getDisableForceExpandSheet() {
    return disableForceExpandSheet_;
  }
  /**
   * <pre>
   * If this is true, then we do not force expand the sheet when entering the
   * prompt state. When false or not set, this keeps the default behavior.
   * </pre>
   *
   * <code>optional bool disable_force_expand_sheet = 6;</code>
   * @param value The disableForceExpandSheet to set.
   */
  private void setDisableForceExpandSheet(boolean value) {
    bitField0_ |= 0x00000004;
    disableForceExpandSheet_ = value;
  }
  /**
   * <pre>
   * If this is true, then we do not force expand the sheet when entering the
   * prompt state. When false or not set, this keeps the default behavior.
   * </pre>
   *
   * <code>optional bool disable_force_expand_sheet = 6;</code>
   */
  private void clearDisableForceExpandSheet() {
    bitField0_ = (bitField0_ & ~0x00000004);
    disableForceExpandSheet_ = false;
  }

  public static final int BROWSE_MODE_FIELD_NUMBER = 7;
  private boolean browseMode_;
  /**
   * <pre>
   * If this is true, go into browse mode where navigation and user gestures
   * like go_back do not shut down autofill assistant.
   * TODO(marianfe): Consider introducing a BrowseAction instead.
   * </pre>
   *
   * <code>optional bool browse_mode = 7;</code>
   * @return Whether the browseMode field is set.
   */
  @java.lang.Override
  public boolean hasBrowseMode() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * If this is true, go into browse mode where navigation and user gestures
   * like go_back do not shut down autofill assistant.
   * TODO(marianfe): Consider introducing a BrowseAction instead.
   * </pre>
   *
   * <code>optional bool browse_mode = 7;</code>
   * @return The browseMode.
   */
  @java.lang.Override
  public boolean getBrowseMode() {
    return browseMode_;
  }
  /**
   * <pre>
   * If this is true, go into browse mode where navigation and user gestures
   * like go_back do not shut down autofill assistant.
   * TODO(marianfe): Consider introducing a BrowseAction instead.
   * </pre>
   *
   * <code>optional bool browse_mode = 7;</code>
   * @param value The browseMode to set.
   */
  private void setBrowseMode(boolean value) {
    bitField0_ |= 0x00000008;
    browseMode_ = value;
  }
  /**
   * <pre>
   * If this is true, go into browse mode where navigation and user gestures
   * like go_back do not shut down autofill assistant.
   * TODO(marianfe): Consider introducing a BrowseAction instead.
   * </pre>
   *
   * <code>optional bool browse_mode = 7;</code>
   */
  private void clearBrowseMode() {
    bitField0_ = (bitField0_ & ~0x00000008);
    browseMode_ = false;
  }

  public static final int BROWSE_MODE_INVISIBLE_FIELD_NUMBER = 10;
  private boolean browseModeInvisible_;
  /**
   * <pre>
   * EXPERIMENTAL.
   * Only relevant if |browse_mode| is true. If set, the bottom sheet will
   * completely disappear when the action starts, and re-appear when the action
   * ends.
   * Note: invisible prompts can't show chips to the user. This flag is intended
   * to be used with prompts that exclusively use choices which are
   * auto-selected based on DOM state, i.e., |auto_select_when|.
   * </pre>
   *
   * <code>optional bool browse_mode_invisible = 10;</code>
   * @return Whether the browseModeInvisible field is set.
   */
  @java.lang.Override
  public boolean hasBrowseModeInvisible() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * EXPERIMENTAL.
   * Only relevant if |browse_mode| is true. If set, the bottom sheet will
   * completely disappear when the action starts, and re-appear when the action
   * ends.
   * Note: invisible prompts can't show chips to the user. This flag is intended
   * to be used with prompts that exclusively use choices which are
   * auto-selected based on DOM state, i.e., |auto_select_when|.
   * </pre>
   *
   * <code>optional bool browse_mode_invisible = 10;</code>
   * @return The browseModeInvisible.
   */
  @java.lang.Override
  public boolean getBrowseModeInvisible() {
    return browseModeInvisible_;
  }
  /**
   * <pre>
   * EXPERIMENTAL.
   * Only relevant if |browse_mode| is true. If set, the bottom sheet will
   * completely disappear when the action starts, and re-appear when the action
   * ends.
   * Note: invisible prompts can't show chips to the user. This flag is intended
   * to be used with prompts that exclusively use choices which are
   * auto-selected based on DOM state, i.e., |auto_select_when|.
   * </pre>
   *
   * <code>optional bool browse_mode_invisible = 10;</code>
   * @param value The browseModeInvisible to set.
   */
  private void setBrowseModeInvisible(boolean value) {
    bitField0_ |= 0x00000010;
    browseModeInvisible_ = value;
  }
  /**
   * <pre>
   * EXPERIMENTAL.
   * Only relevant if |browse_mode| is true. If set, the bottom sheet will
   * completely disappear when the action starts, and re-appear when the action
   * ends.
   * Note: invisible prompts can't show chips to the user. This flag is intended
   * to be used with prompts that exclusively use choices which are
   * auto-selected based on DOM state, i.e., |auto_select_when|.
   * </pre>
   *
   * <code>optional bool browse_mode_invisible = 10;</code>
   */
  private void clearBrowseModeInvisible() {
    bitField0_ = (bitField0_ & ~0x00000010);
    browseModeInvisible_ = false;
  }

  public static final int END_ON_NAVIGATION_FIELD_NUMBER = 8;
  private boolean endOnNavigation_;
  /**
   * <pre>
   * When set to true, end prompt on navigation events happening during a prompt
   * action. The result sent back to the server in
   * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
   * true.
   * </pre>
   *
   * <code>optional bool end_on_navigation = 8;</code>
   * @return Whether the endOnNavigation field is set.
   */
  @java.lang.Override
  public boolean hasEndOnNavigation() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * When set to true, end prompt on navigation events happening during a prompt
   * action. The result sent back to the server in
   * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
   * true.
   * </pre>
   *
   * <code>optional bool end_on_navigation = 8;</code>
   * @return The endOnNavigation.
   */
  @java.lang.Override
  public boolean getEndOnNavigation() {
    return endOnNavigation_;
  }
  /**
   * <pre>
   * When set to true, end prompt on navigation events happening during a prompt
   * action. The result sent back to the server in
   * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
   * true.
   * </pre>
   *
   * <code>optional bool end_on_navigation = 8;</code>
   * @param value The endOnNavigation to set.
   */
  private void setEndOnNavigation(boolean value) {
    bitField0_ |= 0x00000020;
    endOnNavigation_ = value;
  }
  /**
   * <pre>
   * When set to true, end prompt on navigation events happening during a prompt
   * action. The result sent back to the server in
   * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
   * true.
   * </pre>
   *
   * <code>optional bool end_on_navigation = 8;</code>
   */
  private void clearEndOnNavigation() {
    bitField0_ = (bitField0_ & ~0x00000020);
    endOnNavigation_ = false;
  }

  public static final int BROWSE_DOMAINS_ALLOWLIST_FIELD_NUMBER = 9;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> browseDomainsAllowlist_;
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @return A list containing the browseDomainsAllowlist.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getBrowseDomainsAllowlistList() {
    return browseDomainsAllowlist_;
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @return The count of browseDomainsAllowlist.
   */
  @java.lang.Override
  public int getBrowseDomainsAllowlistCount() {
    return browseDomainsAllowlist_.size();
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param index The index of the element to return.
   * @return The browseDomainsAllowlist at the given index.
   */
  @java.lang.Override
  public java.lang.String getBrowseDomainsAllowlist(int index) {
    return browseDomainsAllowlist_.get(index);
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the browseDomainsAllowlist at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBrowseDomainsAllowlistBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        browseDomainsAllowlist_.get(index));
  }
  private void ensureBrowseDomainsAllowlistIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        browseDomainsAllowlist_;  if (!tmp.isModifiable()) {
      browseDomainsAllowlist_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param index The index to set the value at.
   * @param value The browseDomainsAllowlist to set.
   */
  private void setBrowseDomainsAllowlist(
      int index, java.lang.String value) {
    value.getClass();
  ensureBrowseDomainsAllowlistIsMutable();
    browseDomainsAllowlist_.set(index, value);
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param value The browseDomainsAllowlist to add.
   */
  private void addBrowseDomainsAllowlist(
      java.lang.String value) {
    value.getClass();
  ensureBrowseDomainsAllowlistIsMutable();
    browseDomainsAllowlist_.add(value);
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param values The browseDomainsAllowlist to add.
   */
  private void addAllBrowseDomainsAllowlist(
      java.lang.Iterable<java.lang.String> values) {
    ensureBrowseDomainsAllowlistIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, browseDomainsAllowlist_);
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   */
  private void clearBrowseDomainsAllowlist() {
    browseDomainsAllowlist_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of domains and subdomains to allow users to navigate to when in
   * browse mode.
   * </pre>
   *
   * <code>repeated string browse_domains_allowlist = 9;</code>
   * @param value The bytes of the browseDomainsAllowlist to add.
   */
  private void addBrowseDomainsAllowlistBytes(
      com.google.protobuf.ByteString value) {
    ensureBrowseDomainsAllowlistIsMutable();
    browseDomainsAllowlist_.add(value.toStringUtf8());
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.PromptProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Allow choosing one or more possibility. If ShowCast was called just
   * before, allow interaction with the touchable element area, otherwise don't
   * allow any interactions.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.PromptProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.PromptProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.PromptProto)
      org.chromium.chrome.browser.autofill_assistant.proto.PromptProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return instance.hasMessage();
    }
    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return instance.getMessage();
    }
    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return instance.getMessageBytes();
    }
    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setMessage(value);
      return this;
    }
    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      copyOnWrite();
      instance.clearMessage();
      return this;
    }
    /**
     * <pre>
     * Display this message to the user.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMessageBytes(value);
      return this;
    }

    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> getChoicesList() {
      return java.util.Collections.unmodifiableList(
          instance.getChoicesList());
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    @java.lang.Override
    public int getChoicesCount() {
      return instance.getChoicesCount();
    }/**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice getChoices(int index) {
      return instance.getChoices(index);
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder setChoices(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
      copyOnWrite();
      instance.setChoices(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder setChoices(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.Builder builderForValue) {
      copyOnWrite();
      instance.setChoices(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder addChoices(org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
      copyOnWrite();
      instance.addChoices(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder addChoices(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice value) {
      copyOnWrite();
      instance.addChoices(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder addChoices(
        org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.Builder builderForValue) {
      copyOnWrite();
      instance.addChoices(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder addChoices(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.Builder builderForValue) {
      copyOnWrite();
      instance.addChoices(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder addAllChoices(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice> values) {
      copyOnWrite();
      instance.addAllChoices(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder clearChoices() {
      copyOnWrite();
      instance.clearChoices();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.PromptProto.Choice choices = 4;</code>
     */
    public Builder removeChoices(int index) {
      copyOnWrite();
      instance.removeChoices(index);
      return this;
    }

    /**
     * <pre>
     * If true, run scripts flagged with 'interrupt=true' as soon as their
     * preconditions match, then go back to the prompt.
     * </pre>
     *
     * <code>optional bool allow_interrupt = 5;</code>
     * @return Whether the allowInterrupt field is set.
     */
    @java.lang.Override
    public boolean hasAllowInterrupt() {
      return instance.hasAllowInterrupt();
    }
    /**
     * <pre>
     * If true, run scripts flagged with 'interrupt=true' as soon as their
     * preconditions match, then go back to the prompt.
     * </pre>
     *
     * <code>optional bool allow_interrupt = 5;</code>
     * @return The allowInterrupt.
     */
    @java.lang.Override
    public boolean getAllowInterrupt() {
      return instance.getAllowInterrupt();
    }
    /**
     * <pre>
     * If true, run scripts flagged with 'interrupt=true' as soon as their
     * preconditions match, then go back to the prompt.
     * </pre>
     *
     * <code>optional bool allow_interrupt = 5;</code>
     * @param value The allowInterrupt to set.
     * @return This builder for chaining.
     */
    public Builder setAllowInterrupt(boolean value) {
      copyOnWrite();
      instance.setAllowInterrupt(value);
      return this;
    }
    /**
     * <pre>
     * If true, run scripts flagged with 'interrupt=true' as soon as their
     * preconditions match, then go back to the prompt.
     * </pre>
     *
     * <code>optional bool allow_interrupt = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowInterrupt() {
      copyOnWrite();
      instance.clearAllowInterrupt();
      return this;
    }

    /**
     * <pre>
     * If this is true, then we do not force expand the sheet when entering the
     * prompt state. When false or not set, this keeps the default behavior.
     * </pre>
     *
     * <code>optional bool disable_force_expand_sheet = 6;</code>
     * @return Whether the disableForceExpandSheet field is set.
     */
    @java.lang.Override
    public boolean hasDisableForceExpandSheet() {
      return instance.hasDisableForceExpandSheet();
    }
    /**
     * <pre>
     * If this is true, then we do not force expand the sheet when entering the
     * prompt state. When false or not set, this keeps the default behavior.
     * </pre>
     *
     * <code>optional bool disable_force_expand_sheet = 6;</code>
     * @return The disableForceExpandSheet.
     */
    @java.lang.Override
    public boolean getDisableForceExpandSheet() {
      return instance.getDisableForceExpandSheet();
    }
    /**
     * <pre>
     * If this is true, then we do not force expand the sheet when entering the
     * prompt state. When false or not set, this keeps the default behavior.
     * </pre>
     *
     * <code>optional bool disable_force_expand_sheet = 6;</code>
     * @param value The disableForceExpandSheet to set.
     * @return This builder for chaining.
     */
    public Builder setDisableForceExpandSheet(boolean value) {
      copyOnWrite();
      instance.setDisableForceExpandSheet(value);
      return this;
    }
    /**
     * <pre>
     * If this is true, then we do not force expand the sheet when entering the
     * prompt state. When false or not set, this keeps the default behavior.
     * </pre>
     *
     * <code>optional bool disable_force_expand_sheet = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableForceExpandSheet() {
      copyOnWrite();
      instance.clearDisableForceExpandSheet();
      return this;
    }

    /**
     * <pre>
     * If this is true, go into browse mode where navigation and user gestures
     * like go_back do not shut down autofill assistant.
     * TODO(marianfe): Consider introducing a BrowseAction instead.
     * </pre>
     *
     * <code>optional bool browse_mode = 7;</code>
     * @return Whether the browseMode field is set.
     */
    @java.lang.Override
    public boolean hasBrowseMode() {
      return instance.hasBrowseMode();
    }
    /**
     * <pre>
     * If this is true, go into browse mode where navigation and user gestures
     * like go_back do not shut down autofill assistant.
     * TODO(marianfe): Consider introducing a BrowseAction instead.
     * </pre>
     *
     * <code>optional bool browse_mode = 7;</code>
     * @return The browseMode.
     */
    @java.lang.Override
    public boolean getBrowseMode() {
      return instance.getBrowseMode();
    }
    /**
     * <pre>
     * If this is true, go into browse mode where navigation and user gestures
     * like go_back do not shut down autofill assistant.
     * TODO(marianfe): Consider introducing a BrowseAction instead.
     * </pre>
     *
     * <code>optional bool browse_mode = 7;</code>
     * @param value The browseMode to set.
     * @return This builder for chaining.
     */
    public Builder setBrowseMode(boolean value) {
      copyOnWrite();
      instance.setBrowseMode(value);
      return this;
    }
    /**
     * <pre>
     * If this is true, go into browse mode where navigation and user gestures
     * like go_back do not shut down autofill assistant.
     * TODO(marianfe): Consider introducing a BrowseAction instead.
     * </pre>
     *
     * <code>optional bool browse_mode = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBrowseMode() {
      copyOnWrite();
      instance.clearBrowseMode();
      return this;
    }

    /**
     * <pre>
     * EXPERIMENTAL.
     * Only relevant if |browse_mode| is true. If set, the bottom sheet will
     * completely disappear when the action starts, and re-appear when the action
     * ends.
     * Note: invisible prompts can't show chips to the user. This flag is intended
     * to be used with prompts that exclusively use choices which are
     * auto-selected based on DOM state, i.e., |auto_select_when|.
     * </pre>
     *
     * <code>optional bool browse_mode_invisible = 10;</code>
     * @return Whether the browseModeInvisible field is set.
     */
    @java.lang.Override
    public boolean hasBrowseModeInvisible() {
      return instance.hasBrowseModeInvisible();
    }
    /**
     * <pre>
     * EXPERIMENTAL.
     * Only relevant if |browse_mode| is true. If set, the bottom sheet will
     * completely disappear when the action starts, and re-appear when the action
     * ends.
     * Note: invisible prompts can't show chips to the user. This flag is intended
     * to be used with prompts that exclusively use choices which are
     * auto-selected based on DOM state, i.e., |auto_select_when|.
     * </pre>
     *
     * <code>optional bool browse_mode_invisible = 10;</code>
     * @return The browseModeInvisible.
     */
    @java.lang.Override
    public boolean getBrowseModeInvisible() {
      return instance.getBrowseModeInvisible();
    }
    /**
     * <pre>
     * EXPERIMENTAL.
     * Only relevant if |browse_mode| is true. If set, the bottom sheet will
     * completely disappear when the action starts, and re-appear when the action
     * ends.
     * Note: invisible prompts can't show chips to the user. This flag is intended
     * to be used with prompts that exclusively use choices which are
     * auto-selected based on DOM state, i.e., |auto_select_when|.
     * </pre>
     *
     * <code>optional bool browse_mode_invisible = 10;</code>
     * @param value The browseModeInvisible to set.
     * @return This builder for chaining.
     */
    public Builder setBrowseModeInvisible(boolean value) {
      copyOnWrite();
      instance.setBrowseModeInvisible(value);
      return this;
    }
    /**
     * <pre>
     * EXPERIMENTAL.
     * Only relevant if |browse_mode| is true. If set, the bottom sheet will
     * completely disappear when the action starts, and re-appear when the action
     * ends.
     * Note: invisible prompts can't show chips to the user. This flag is intended
     * to be used with prompts that exclusively use choices which are
     * auto-selected based on DOM state, i.e., |auto_select_when|.
     * </pre>
     *
     * <code>optional bool browse_mode_invisible = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearBrowseModeInvisible() {
      copyOnWrite();
      instance.clearBrowseModeInvisible();
      return this;
    }

    /**
     * <pre>
     * When set to true, end prompt on navigation events happening during a prompt
     * action. The result sent back to the server in
     * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
     * true.
     * </pre>
     *
     * <code>optional bool end_on_navigation = 8;</code>
     * @return Whether the endOnNavigation field is set.
     */
    @java.lang.Override
    public boolean hasEndOnNavigation() {
      return instance.hasEndOnNavigation();
    }
    /**
     * <pre>
     * When set to true, end prompt on navigation events happening during a prompt
     * action. The result sent back to the server in
     * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
     * true.
     * </pre>
     *
     * <code>optional bool end_on_navigation = 8;</code>
     * @return The endOnNavigation.
     */
    @java.lang.Override
    public boolean getEndOnNavigation() {
      return instance.getEndOnNavigation();
    }
    /**
     * <pre>
     * When set to true, end prompt on navigation events happening during a prompt
     * action. The result sent back to the server in
     * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
     * true.
     * </pre>
     *
     * <code>optional bool end_on_navigation = 8;</code>
     * @param value The endOnNavigation to set.
     * @return This builder for chaining.
     */
    public Builder setEndOnNavigation(boolean value) {
      copyOnWrite();
      instance.setEndOnNavigation(value);
      return this;
    }
    /**
     * <pre>
     * When set to true, end prompt on navigation events happening during a prompt
     * action. The result sent back to the server in
     * ProcessedActionProto.prompt_choice will have |navigation_ended| set to
     * true.
     * </pre>
     *
     * <code>optional bool end_on_navigation = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndOnNavigation() {
      copyOnWrite();
      instance.clearEndOnNavigation();
      return this;
    }

    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @return A list containing the browseDomainsAllowlist.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getBrowseDomainsAllowlistList() {
      return java.util.Collections.unmodifiableList(
          instance.getBrowseDomainsAllowlistList());
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @return The count of browseDomainsAllowlist.
     */
    @java.lang.Override
    public int getBrowseDomainsAllowlistCount() {
      return instance.getBrowseDomainsAllowlistCount();
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param index The index of the element to return.
     * @return The browseDomainsAllowlist at the given index.
     */
    @java.lang.Override
    public java.lang.String getBrowseDomainsAllowlist(int index) {
      return instance.getBrowseDomainsAllowlist(index);
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the browseDomainsAllowlist at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBrowseDomainsAllowlistBytes(int index) {
      return instance.getBrowseDomainsAllowlistBytes(index);
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param index The index to set the value at.
     * @param value The browseDomainsAllowlist to set.
     * @return This builder for chaining.
     */
    public Builder setBrowseDomainsAllowlist(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setBrowseDomainsAllowlist(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param value The browseDomainsAllowlist to add.
     * @return This builder for chaining.
     */
    public Builder addBrowseDomainsAllowlist(
        java.lang.String value) {
      copyOnWrite();
      instance.addBrowseDomainsAllowlist(value);
      return this;
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param values The browseDomainsAllowlist to add.
     * @return This builder for chaining.
     */
    public Builder addAllBrowseDomainsAllowlist(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllBrowseDomainsAllowlist(values);
      return this;
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearBrowseDomainsAllowlist() {
      copyOnWrite();
      instance.clearBrowseDomainsAllowlist();
      return this;
    }
    /**
     * <pre>
     * A list of domains and subdomains to allow users to navigate to when in
     * browse mode.
     * </pre>
     *
     * <code>repeated string browse_domains_allowlist = 9;</code>
     * @param value The bytes of the browseDomainsAllowlist to add.
     * @return This builder for chaining.
     */
    public Builder addBrowseDomainsAllowlistBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addBrowseDomainsAllowlistBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.PromptProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.PromptProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "message_",
            "choices_",
            org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.Choice.class,
            "allowInterrupt_",
            "disableForceExpandSheet_",
            "browseMode_",
            "endOnNavigation_",
            "browseDomainsAllowlist_",
            "browseModeInvisible_",
          };
          java.lang.String info =
              "\u0001\b\u0000\u0001\u0001\n\b\u0000\u0002\u0000\u0001\u1008\u0000\u0004\u001b\u0005" +
              "\u1007\u0001\u0006\u1007\u0002\u0007\u1007\u0003\b\u1007\u0005\t\u001a\n\u1007\u0004" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.PromptProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.PromptProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.PromptProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.PromptProto DEFAULT_INSTANCE;
  static {
    PromptProto defaultInstance = new PromptProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PromptProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.PromptProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PromptProto> PARSER;

  public static com.google.protobuf.Parser<PromptProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

