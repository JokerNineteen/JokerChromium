// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface ClientContextProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.ClientContextProto)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>.autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   * @return Whether the chrome field is set.
   */
  boolean hasChrome();
  /**
   * <code>.autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   * @return The chrome.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome getChrome();

  /**
   * <pre>
   * locale will be the language tag of the default locale. The tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   * @return Whether the locale field is set.
   */
  boolean hasLocale();
  /**
   * <pre>
   * locale will be the language tag of the default locale. The tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   * @return The locale.
   */
  java.lang.String getLocale();
  /**
   * <pre>
   * locale will be the language tag of the default locale. The tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   * @return The bytes for locale.
   */
  com.google.protobuf.ByteString
      getLocaleBytes();

  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   * @return Whether the country field is set.
   */
  boolean hasCountry();
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   * @return The country.
   */
  java.lang.String getCountry();
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   * @return The bytes for country.
   */
  com.google.protobuf.ByteString
      getCountryBytes();

  /**
   * <pre>
   * Experiment ids string provided by the 'caller'.
   * </pre>
   *
   * <code>optional string experiment_ids = 7;</code>
   * @return Whether the experimentIds field is set.
   */
  boolean hasExperimentIds();
  /**
   * <pre>
   * Experiment ids string provided by the 'caller'.
   * </pre>
   *
   * <code>optional string experiment_ids = 7;</code>
   * @return The experimentIds.
   */
  java.lang.String getExperimentIds();
  /**
   * <pre>
   * Experiment ids string provided by the 'caller'.
   * </pre>
   *
   * <code>optional string experiment_ids = 7;</code>
   * @return The bytes for experimentIds.
   */
  com.google.protobuf.ByteString
      getExperimentIdsBytes();

  /**
   * <pre>
   * True if the script is called from a Chrome Custom Tab created for Autofill
   * Assistant.
   * </pre>
   *
   * <code>optional bool is_cct = 8;</code>
   * @return Whether the isCct field is set.
   */
  boolean hasIsCct();
  /**
   * <pre>
   * True if the script is called from a Chrome Custom Tab created for Autofill
   * Assistant.
   * </pre>
   *
   * <code>optional bool is_cct = 8;</code>
   * @return The isCct.
   */
  boolean getIsCct();

  /**
   * <pre>
   * True if the onboarding screen was shown to the user.
   * </pre>
   *
   * <code>optional bool is_onboarding_shown = 10;</code>
   * @return Whether the isOnboardingShown field is set.
   */
  boolean hasIsOnboardingShown();
  /**
   * <pre>
   * True if the onboarding screen was shown to the user.
   * </pre>
   *
   * <code>optional bool is_onboarding_shown = 10;</code>
   * @return The isOnboardingShown.
   */
  boolean getIsOnboardingShown();

  /**
   * <pre>
   * True if the script was triggered by a direct action.
   * </pre>
   *
   * <code>optional bool is_direct_action = 9;</code>
   * @return Whether the isDirectAction field is set.
   */
  boolean hasIsDirectAction();
  /**
   * <pre>
   * True if the script was triggered by a direct action.
   * </pre>
   *
   * <code>optional bool is_direct_action = 9;</code>
   * @return The isDirectAction.
   */
  boolean getIsDirectAction();

  /**
   * <code>optional .autofill_assistant.ClientContextProto.DeviceContextProto device_context = 11;</code>
   * @return Whether the deviceContext field is set.
   */
  boolean hasDeviceContext();
  /**
   * <code>optional .autofill_assistant.ClientContextProto.DeviceContextProto device_context = 11;</code>
   * @return The deviceContext.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.DeviceContextProto getDeviceContext();

  /**
   * <pre>
   * Whether the account from the intent and the chrome account match.
   * </pre>
   *
   * <code>optional .autofill_assistant.ClientContextProto.AccountsMatchingStatus accounts_matching_status = 12;</code>
   * @return Whether the accountsMatchingStatus field is set.
   */
  boolean hasAccountsMatchingStatus();
  /**
   * <pre>
   * Whether the account from the intent and the chrome account match.
   * </pre>
   *
   * <code>optional .autofill_assistant.ClientContextProto.AccountsMatchingStatus accounts_matching_status = 12;</code>
   * @return The accountsMatchingStatus.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.AccountsMatchingStatus getAccountsMatchingStatus();

  /**
   * <pre>
   * Whether a11y (talkback and touch exploration) is enabled or not.
   * </pre>
   *
   * <code>optional bool accessibility_enabled = 13;</code>
   * @return Whether the accessibilityEnabled field is set.
   */
  boolean hasAccessibilityEnabled();
  /**
   * <pre>
   * Whether a11y (talkback and touch exploration) is enabled or not.
   * </pre>
   *
   * <code>optional bool accessibility_enabled = 13;</code>
   * @return The accessibilityEnabled.
   */
  boolean getAccessibilityEnabled();

  /**
   * <code>optional .autofill_assistant.ClientContextProto.SignedIntoChromeStatus signed_into_chrome_status = 14;</code>
   * @return Whether the signedIntoChromeStatus field is set.
   */
  boolean hasSignedIntoChromeStatus();
  /**
   * <code>optional .autofill_assistant.ClientContextProto.SignedIntoChromeStatus signed_into_chrome_status = 14;</code>
   * @return The signedIntoChromeStatus.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.SignedIntoChromeStatus getSignedIntoChromeStatus();

  public org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.ClientCase getClientCase();
}
