// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generic_ui.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A comparison of two values in the form |value_a| &lt;mode&gt; |value_b|. EQUAL and
 * NOT_EQUAL are supported for all values. All other comparison modes are only
 * supported for single integers, strings, and dates.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ValueComparisonProto}
 */
public  final class ValueComparisonProto extends
    com.google.protobuf.GeneratedMessageLite<
        ValueComparisonProto, ValueComparisonProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ValueComparisonProto)
    ValueComparisonProtoOrBuilder {
  private ValueComparisonProto() {
  }
  /**
   * Protobuf enum {@code autofill_assistant.ValueComparisonProto.Mode}
   */
  public enum Mode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNDEFINED = 0;</code>
     */
    UNDEFINED(0),
    /**
     * <code>LESS = 1;</code>
     */
    LESS(1),
    /**
     * <code>LESS_OR_EQUAL = 2;</code>
     */
    LESS_OR_EQUAL(2),
    /**
     * <code>EQUAL = 3;</code>
     */
    EQUAL(3),
    /**
     * <code>GREATER_OR_EQUAL = 4;</code>
     */
    GREATER_OR_EQUAL(4),
    /**
     * <code>GREATER = 5;</code>
     */
    GREATER(5),
    /**
     * <code>NOT_EQUAL = 6;</code>
     */
    NOT_EQUAL(6),
    ;

    /**
     * <code>UNDEFINED = 0;</code>
     */
    public static final int UNDEFINED_VALUE = 0;
    /**
     * <code>LESS = 1;</code>
     */
    public static final int LESS_VALUE = 1;
    /**
     * <code>LESS_OR_EQUAL = 2;</code>
     */
    public static final int LESS_OR_EQUAL_VALUE = 2;
    /**
     * <code>EQUAL = 3;</code>
     */
    public static final int EQUAL_VALUE = 3;
    /**
     * <code>GREATER_OR_EQUAL = 4;</code>
     */
    public static final int GREATER_OR_EQUAL_VALUE = 4;
    /**
     * <code>GREATER = 5;</code>
     */
    public static final int GREATER_VALUE = 5;
    /**
     * <code>NOT_EQUAL = 6;</code>
     */
    public static final int NOT_EQUAL_VALUE = 6;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    public static Mode forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED;
        case 1: return LESS;
        case 2: return LESS_OR_EQUAL;
        case 3: return EQUAL;
        case 4: return GREATER_OR_EQUAL;
        case 5: return GREATER;
        case 6: return NOT_EQUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
            @java.lang.Override
            public Mode findValueByNumber(int number) {
              return Mode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ModeVerifier.INSTANCE;
    }

    private static final class ModeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ModeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Mode.forNumber(number) != null;
            }
          };

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.ValueComparisonProto.Mode)
  }

  private int bitField0_;
  public static final int VALUE_A_FIELD_NUMBER = 4;
  private org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto valueA_;
  /**
   * <pre>
   * The first value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
   */
  @java.lang.Override
  public boolean hasValueA() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The first value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto getValueA() {
    return valueA_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.getDefaultInstance() : valueA_;
  }
  /**
   * <pre>
   * The first value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
   */
  private void setValueA(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
    value.getClass();
  valueA_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * The first value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeValueA(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
    value.getClass();
  if (valueA_ != null &&
        valueA_ != org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.getDefaultInstance()) {
      valueA_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.newBuilder(valueA_).mergeFrom(value).buildPartial();
    } else {
      valueA_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * The first value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
   */
  private void clearValueA() {  valueA_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int VALUE_B_FIELD_NUMBER = 5;
  private org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto valueB_;
  /**
   * <pre>
   * The second value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
   */
  @java.lang.Override
  public boolean hasValueB() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The second value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto getValueB() {
    return valueB_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.getDefaultInstance() : valueB_;
  }
  /**
   * <pre>
   * The second value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
   */
  private void setValueB(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
    value.getClass();
  valueB_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * The second value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeValueB(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
    value.getClass();
  if (valueB_ != null &&
        valueB_ != org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.getDefaultInstance()) {
      valueB_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.newBuilder(valueB_).mergeFrom(value).buildPartial();
    } else {
      valueB_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * The second value to compare.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
   */
  private void clearValueB() {  valueB_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int MODE_FIELD_NUMBER = 3;
  private int mode_;
  /**
   * <pre>
   * The comparison mode.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
   * @return Whether the mode field is set.
   */
  @java.lang.Override
  public boolean hasMode() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The comparison mode.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
   * @return The mode.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode getMode() {
    org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode result = org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode.forNumber(mode_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode.UNDEFINED : result;
  }
  /**
   * <pre>
   * The comparison mode.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
   * @param value The mode to set.
   */
  private void setMode(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode value) {
    mode_ = value.getNumber();
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * The comparison mode.
   * </pre>
   *
   * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
   */
  private void clearMode() {
    bitField0_ = (bitField0_ & ~0x00000004);
    mode_ = 0;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A comparison of two values in the form |value_a| &lt;mode&gt; |value_b|. EQUAL and
   * NOT_EQUAL are supported for all values. All other comparison modes are only
   * supported for single integers, strings, and dates.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ValueComparisonProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ValueComparisonProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    @java.lang.Override
    public boolean hasValueA() {
      return instance.hasValueA();
    }
    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto getValueA() {
      return instance.getValueA();
    }
    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    public Builder setValueA(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
      copyOnWrite();
      instance.setValueA(value);
      return this;
      }
    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    public Builder setValueA(
        org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.setValueA(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    public Builder mergeValueA(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
      copyOnWrite();
      instance.mergeValueA(value);
      return this;
    }
    /**
     * <pre>
     * The first value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_a = 4;</code>
     */
    public Builder clearValueA() {  copyOnWrite();
      instance.clearValueA();
      return this;
    }

    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    @java.lang.Override
    public boolean hasValueB() {
      return instance.hasValueB();
    }
    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto getValueB() {
      return instance.getValueB();
    }
    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    public Builder setValueB(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
      copyOnWrite();
      instance.setValueB(value);
      return this;
      }
    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    public Builder setValueB(
        org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.setValueB(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    public Builder mergeValueB(org.chromium.chrome.browser.autofill_assistant.proto.ValueReferenceProto value) {
      copyOnWrite();
      instance.mergeValueB(value);
      return this;
    }
    /**
     * <pre>
     * The second value to compare.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueReferenceProto value_b = 5;</code>
     */
    public Builder clearValueB() {  copyOnWrite();
      instance.clearValueB();
      return this;
    }

    /**
     * <pre>
     * The comparison mode.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
     * @return Whether the mode field is set.
     */
    @java.lang.Override
    public boolean hasMode() {
      return instance.hasMode();
    }
    /**
     * <pre>
     * The comparison mode.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
     * @return The mode.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode getMode() {
      return instance.getMode();
    }
    /**
     * <pre>
     * The comparison mode.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode value) {
      copyOnWrite();
      instance.setMode(value);
      return this;
    }
    /**
     * <pre>
     * The comparison mode.
     * </pre>
     *
     * <code>optional .autofill_assistant.ValueComparisonProto.Mode mode = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      copyOnWrite();
      instance.clearMode();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ValueComparisonProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "mode_",
            org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.Mode.internalGetVerifier(),
            "valueA_",
            "valueB_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0003\u0005\u0003\u0000\u0000\u0000\u0003\u100c\u0002\u0004" +
              "\u1009\u0000\u0005\u1009\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ValueComparisonProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto DEFAULT_INSTANCE;
  static {
    ValueComparisonProto defaultInstance = new ValueComparisonProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ValueComparisonProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ValueComparisonProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ValueComparisonProto> PARSER;

  public static com.google.protobuf.Parser<ValueComparisonProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

