// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A trigger script contains the full specification for a trigger script that is
 * run when a specific condition is true, prior to the full run.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.TriggerScriptProto}
 */
public  final class TriggerScriptProto extends
    com.google.protobuf.GeneratedMessageLite<
        TriggerScriptProto, TriggerScriptProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.TriggerScriptProto)
    TriggerScriptProtoOrBuilder {
  private TriggerScriptProto() {
    onSwipeToDismiss_ = 2;
  }
  /**
   * Protobuf enum {@code autofill_assistant.TriggerScriptProto.TriggerScriptAction}
   */
  public enum TriggerScriptAction
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNDEFINED = 0;</code>
     */
    UNDEFINED(0),
    /**
     * <pre>
     * The current trigger script is cancelled. If the prompt is not currently
     * being shown, this has no effect. If the prompt is currently being shown,
     * the prompt is hidden and the trigger script is restarted once the trigger
     * condition has become false again.
     * </pre>
     *
     * <code>NOT_NOW = 1;</code>
     */
    NOT_NOW(1),
    /**
     * <pre>
     * Cancels the current trigger script and does not restart it for this
     * session.
     * </pre>
     *
     * <code>CANCEL_SESSION = 2;</code>
     */
    CANCEL_SESSION(2),
    /**
     * <pre>
     * Cancels the current trigger script and prevents trigger scripts from ever
     * running again. TODO(b/172039582): allow a per-domain opt-out.
     * </pre>
     *
     * <code>CANCEL_FOREVER = 3;</code>
     */
    CANCEL_FOREVER(3),
    /**
     * <pre>
     * Displays a popup to give users additional cancel options.
     * </pre>
     *
     * <code>SHOW_CANCEL_POPUP = 4;</code>
     */
    SHOW_CANCEL_POPUP(4),
    /**
     * <pre>
     * Stop the trigger script and start the regular script.
     * </pre>
     *
     * <code>ACCEPT = 5;</code>
     */
    ACCEPT(5),
    ;

    /**
     * <code>UNDEFINED = 0;</code>
     */
    public static final int UNDEFINED_VALUE = 0;
    /**
     * <pre>
     * The current trigger script is cancelled. If the prompt is not currently
     * being shown, this has no effect. If the prompt is currently being shown,
     * the prompt is hidden and the trigger script is restarted once the trigger
     * condition has become false again.
     * </pre>
     *
     * <code>NOT_NOW = 1;</code>
     */
    public static final int NOT_NOW_VALUE = 1;
    /**
     * <pre>
     * Cancels the current trigger script and does not restart it for this
     * session.
     * </pre>
     *
     * <code>CANCEL_SESSION = 2;</code>
     */
    public static final int CANCEL_SESSION_VALUE = 2;
    /**
     * <pre>
     * Cancels the current trigger script and prevents trigger scripts from ever
     * running again. TODO(b/172039582): allow a per-domain opt-out.
     * </pre>
     *
     * <code>CANCEL_FOREVER = 3;</code>
     */
    public static final int CANCEL_FOREVER_VALUE = 3;
    /**
     * <pre>
     * Displays a popup to give users additional cancel options.
     * </pre>
     *
     * <code>SHOW_CANCEL_POPUP = 4;</code>
     */
    public static final int SHOW_CANCEL_POPUP_VALUE = 4;
    /**
     * <pre>
     * Stop the trigger script and start the regular script.
     * </pre>
     *
     * <code>ACCEPT = 5;</code>
     */
    public static final int ACCEPT_VALUE = 5;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TriggerScriptAction valueOf(int value) {
      return forNumber(value);
    }

    public static TriggerScriptAction forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED;
        case 1: return NOT_NOW;
        case 2: return CANCEL_SESSION;
        case 3: return CANCEL_FOREVER;
        case 4: return SHOW_CANCEL_POPUP;
        case 5: return ACCEPT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TriggerScriptAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TriggerScriptAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TriggerScriptAction>() {
            @java.lang.Override
            public TriggerScriptAction findValueByNumber(int number) {
              return TriggerScriptAction.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TriggerScriptActionVerifier.INSTANCE;
    }

    private static final class TriggerScriptActionVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TriggerScriptActionVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return TriggerScriptAction.forNumber(number) != null;
            }
          };

    private final int value;

    private TriggerScriptAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.TriggerScriptProto.TriggerScriptAction)
  }

  private int bitField0_;
  public static final int TRIGGER_CONDITION_FIELD_NUMBER = 1;
  private org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto triggerCondition_;
  /**
   * <pre>
   * The |trigger_condition| must be true for the script to trigger.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
   */
  @java.lang.Override
  public boolean hasTriggerCondition() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The |trigger_condition| must be true for the script to trigger.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto getTriggerCondition() {
    return triggerCondition_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.getDefaultInstance() : triggerCondition_;
  }
  /**
   * <pre>
   * The |trigger_condition| must be true for the script to trigger.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
   */
  private void setTriggerCondition(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto value) {
    value.getClass();
  triggerCondition_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * The |trigger_condition| must be true for the script to trigger.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTriggerCondition(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto value) {
    value.getClass();
  if (triggerCondition_ != null &&
        triggerCondition_ != org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.getDefaultInstance()) {
      triggerCondition_ =
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.newBuilder(triggerCondition_).mergeFrom(value).buildPartial();
    } else {
      triggerCondition_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * The |trigger_condition| must be true for the script to trigger.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
   */
  private void clearTriggerCondition() {  triggerCondition_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int USER_INTERFACE_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto userInterface_;
  /**
   * <pre>
   * The user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
   */
  @java.lang.Override
  public boolean hasUserInterface() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto getUserInterface() {
    return userInterface_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto.getDefaultInstance() : userInterface_;
  }
  /**
   * <pre>
   * The user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
   */
  private void setUserInterface(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto value) {
    value.getClass();
  userInterface_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * The user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeUserInterface(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto value) {
    value.getClass();
  if (userInterface_ != null &&
        userInterface_ != org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto.getDefaultInstance()) {
      userInterface_ =
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto.newBuilder(userInterface_).mergeFrom(value).buildPartial();
    } else {
      userInterface_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * The user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
   */
  private void clearUserInterface() {  userInterface_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int ON_SWIPE_TO_DISMISS_FIELD_NUMBER = 4;
  private int onSwipeToDismiss_;
  /**
   * <pre>
   * What should happen if the user swipe-dismisses the bottom sheet.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
   * @return Whether the onSwipeToDismiss field is set.
   */
  @java.lang.Override
  public boolean hasOnSwipeToDismiss() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * What should happen if the user swipe-dismisses the bottom sheet.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
   * @return The onSwipeToDismiss.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction getOnSwipeToDismiss() {
    org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction result = org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction.forNumber(onSwipeToDismiss_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction.CANCEL_SESSION : result;
  }
  /**
   * <pre>
   * What should happen if the user swipe-dismisses the bottom sheet.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
   * @param value The onSwipeToDismiss to set.
   */
  private void setOnSwipeToDismiss(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction value) {
    onSwipeToDismiss_ = value.getNumber();
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * What should happen if the user swipe-dismisses the bottom sheet.
   * </pre>
   *
   * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
   */
  private void clearOnSwipeToDismiss() {
    bitField0_ = (bitField0_ & ~0x00000004);
    onSwipeToDismiss_ = 2;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A trigger script contains the full specification for a trigger script that is
   * run when a specific condition is true, prior to the full run.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.TriggerScriptProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.TriggerScriptProto)
      org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    @java.lang.Override
    public boolean hasTriggerCondition() {
      return instance.hasTriggerCondition();
    }
    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto getTriggerCondition() {
      return instance.getTriggerCondition();
    }
    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    public Builder setTriggerCondition(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto value) {
      copyOnWrite();
      instance.setTriggerCondition(value);
      return this;
      }
    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    public Builder setTriggerCondition(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto.Builder builderForValue) {
      copyOnWrite();
      instance.setTriggerCondition(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    public Builder mergeTriggerCondition(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptConditionProto value) {
      copyOnWrite();
      instance.mergeTriggerCondition(value);
      return this;
    }
    /**
     * <pre>
     * The |trigger_condition| must be true for the script to trigger.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptConditionProto trigger_condition = 1;</code>
     */
    public Builder clearTriggerCondition() {  copyOnWrite();
      instance.clearTriggerCondition();
      return this;
    }

    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    @java.lang.Override
    public boolean hasUserInterface() {
      return instance.hasUserInterface();
    }
    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto getUserInterface() {
      return instance.getUserInterface();
    }
    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    public Builder setUserInterface(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto value) {
      copyOnWrite();
      instance.setUserInterface(value);
      return this;
      }
    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    public Builder setUserInterface(
        org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto.Builder builderForValue) {
      copyOnWrite();
      instance.setUserInterface(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    public Builder mergeUserInterface(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptUIProto value) {
      copyOnWrite();
      instance.mergeUserInterface(value);
      return this;
    }
    /**
     * <pre>
     * The user interface to show.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptUIProto user_interface = 3;</code>
     */
    public Builder clearUserInterface() {  copyOnWrite();
      instance.clearUserInterface();
      return this;
    }

    /**
     * <pre>
     * What should happen if the user swipe-dismisses the bottom sheet.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
     * @return Whether the onSwipeToDismiss field is set.
     */
    @java.lang.Override
    public boolean hasOnSwipeToDismiss() {
      return instance.hasOnSwipeToDismiss();
    }
    /**
     * <pre>
     * What should happen if the user swipe-dismisses the bottom sheet.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
     * @return The onSwipeToDismiss.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction getOnSwipeToDismiss() {
      return instance.getOnSwipeToDismiss();
    }
    /**
     * <pre>
     * What should happen if the user swipe-dismisses the bottom sheet.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
     * @param value The enum numeric value on the wire for onSwipeToDismiss to set.
     * @return This builder for chaining.
     */
    public Builder setOnSwipeToDismiss(org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction value) {
      copyOnWrite();
      instance.setOnSwipeToDismiss(value);
      return this;
    }
    /**
     * <pre>
     * What should happen if the user swipe-dismisses the bottom sheet.
     * </pre>
     *
     * <code>optional .autofill_assistant.TriggerScriptProto.TriggerScriptAction on_swipe_to_dismiss = 4 [default = CANCEL_SESSION];</code>
     * @return This builder for chaining.
     */
    public Builder clearOnSwipeToDismiss() {
      copyOnWrite();
      instance.clearOnSwipeToDismiss();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.TriggerScriptProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "triggerCondition_",
            "userInterface_",
            "onSwipeToDismiss_",
            org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.TriggerScriptAction.internalGetVerifier(),
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0004\u0003\u0000\u0000\u0000\u0001\u1009\u0000\u0003" +
              "\u1009\u0001\u0004\u100c\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.TriggerScriptProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto DEFAULT_INSTANCE;
  static {
    TriggerScriptProto defaultInstance = new TriggerScriptProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TriggerScriptProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TriggerScriptProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TriggerScriptProto> PARSER;

  public static com.google.protobuf.Parser<TriggerScriptProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

