// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A condition that expects a specific combination of elements. An empty
 * condition is true.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ElementConditionProto}
 */
public  final class ElementConditionProto extends
    com.google.protobuf.GeneratedMessageLite<
        ElementConditionProto, ElementConditionProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ElementConditionProto)
    ElementConditionProtoOrBuilder {
  private ElementConditionProto() {
    payload_ = com.google.protobuf.ByteString.EMPTY;
  }
  private int bitField0_;
  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase {
    ALL_OF(1),
    ANY_OF(2),
    NONE_OF(3),
    MATCH(4),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return ALL_OF;
        case 2: return ANY_OF;
        case 3: return NONE_OF;
        case 4: return MATCH;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  private void clearType() {
    typeCase_ = 0;
    type_ = null;
  }

  public static final int ALL_OF_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
   */
  @java.lang.Override
  public boolean hasAllOf() {
    return typeCase_ == 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getAllOf() {
    if (typeCase_ == 1) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
   */
  private void setAllOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
   */
  private void mergeAllOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  if (typeCase_ == 1 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 1;
  }
  /**
   * <pre>
   * The condition matches if all of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
   */
  private void clearAllOf() {
    if (typeCase_ == 1) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int ANY_OF_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
   */
  @java.lang.Override
  public boolean hasAnyOf() {
    return typeCase_ == 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getAnyOf() {
    if (typeCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
   */
  private void setAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
   */
  private void mergeAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  if (typeCase_ == 2 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 2;
  }
  /**
   * <pre>
   * The condition matches if at least one of these conditions matches.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
   */
  private void clearAnyOf() {
    if (typeCase_ == 2) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int NONE_OF_FIELD_NUMBER = 3;
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
   */
  @java.lang.Override
  public boolean hasNoneOf() {
    return typeCase_ == 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getNoneOf() {
    if (typeCase_ == 3) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
   */
  private void setNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
   */
  private void mergeNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
    value.getClass();
  if (typeCase_ == 3 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 3;
  }
  /**
   * <pre>
   * The condition matches if none of these conditions match.
   * </pre>
   *
   * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
   */
  private void clearNoneOf() {
    if (typeCase_ == 3) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int MATCH_FIELD_NUMBER = 4;
  /**
   * <pre>
   * The condition matches if the given element exists. An empty
   * ElementReference never match.
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto match = 4;</code>
   */
  @java.lang.Override
  public boolean hasMatch() {
    return typeCase_ == 4;
  }
  /**
   * <pre>
   * The condition matches if the given element exists. An empty
   * ElementReference never match.
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto match = 4;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getMatch() {
    if (typeCase_ == 4) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto) type_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance();
  }
  /**
   * <pre>
   * The condition matches if the given element exists. An empty
   * ElementReference never match.
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto match = 4;</code>
   */
  private void setMatch(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  type_ = value;
    typeCase_ = 4;
  }
  /**
   * <pre>
   * The condition matches if the given element exists. An empty
   * ElementReference never match.
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto match = 4;</code>
   */
  private void mergeMatch(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  if (typeCase_ == 4 &&
        type_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance()) {
      type_ = org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 4;
  }
  /**
   * <pre>
   * The condition matches if the given element exists. An empty
   * ElementReference never match.
   * </pre>
   *
   * <code>.autofill_assistant.SelectorProto match = 4;</code>
   */
  private void clearMatch() {
    if (typeCase_ == 4) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int PAYLOAD_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString payload_;
  /**
   * <pre>
   * A payload that identifies this condition. WaitForDom puts this payload
   * into the result. This is ignored outside of WaitForDom.
   * </pre>
   *
   * <code>optional bytes payload = 5;</code>
   * @return Whether the payload field is set.
   */
  @java.lang.Override
  public boolean hasPayload() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * A payload that identifies this condition. WaitForDom puts this payload
   * into the result. This is ignored outside of WaitForDom.
   * </pre>
   *
   * <code>optional bytes payload = 5;</code>
   * @return The payload.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPayload() {
    return payload_;
  }
  /**
   * <pre>
   * A payload that identifies this condition. WaitForDom puts this payload
   * into the result. This is ignored outside of WaitForDom.
   * </pre>
   *
   * <code>optional bytes payload = 5;</code>
   * @param value The payload to set.
   */
  private void setPayload(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    payload_ = value;
  }
  /**
   * <pre>
   * A payload that identifies this condition. WaitForDom puts this payload
   * into the result. This is ignored outside of WaitForDom.
   * </pre>
   *
   * <code>optional bytes payload = 5;</code>
   */
  private void clearPayload() {
    bitField0_ = (bitField0_ & ~0x00000010);
    payload_ = getDefaultInstance().getPayload();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A condition that expects a specific combination of elements. An empty
   * condition is true.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ElementConditionProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementConditionProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public TypeCase
        getTypeCase() {
      return instance.getTypeCase();
    }

    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }


    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    @java.lang.Override
    public boolean hasAllOf() {
      return instance.hasAllOf();
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getAllOf() {
      return instance.getAllOf();
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    public Builder setAllOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.setAllOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    public Builder setAllOf(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setAllOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    public Builder mergeAllOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.mergeAllOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if all of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto all_of = 1;</code>
     */
    public Builder clearAllOf() {
      copyOnWrite();
      instance.clearAllOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    @java.lang.Override
    public boolean hasAnyOf() {
      return instance.hasAnyOf();
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getAnyOf() {
      return instance.getAnyOf();
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    public Builder setAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.setAnyOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    public Builder setAnyOf(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setAnyOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    public Builder mergeAnyOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.mergeAnyOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if at least one of these conditions matches.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto any_of = 2;</code>
     */
    public Builder clearAnyOf() {
      copyOnWrite();
      instance.clearAnyOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    @java.lang.Override
    public boolean hasNoneOf() {
      return instance.hasNoneOf();
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto getNoneOf() {
      return instance.getNoneOf();
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    public Builder setNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.setNoneOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    public Builder setNoneOf(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setNoneOf(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    public Builder mergeNoneOf(org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto value) {
      copyOnWrite();
      instance.mergeNoneOf(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if none of these conditions match.
     * </pre>
     *
     * <code>.autofill_assistant.ElementConditionsProto none_of = 3;</code>
     */
    public Builder clearNoneOf() {
      copyOnWrite();
      instance.clearNoneOf();
      return this;
    }

    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    @java.lang.Override
    public boolean hasMatch() {
      return instance.hasMatch();
    }
    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getMatch() {
      return instance.getMatch();
    }
    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    public Builder setMatch(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.setMatch(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    public Builder setMatch(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.Builder builderForValue) {
      copyOnWrite();
      instance.setMatch(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    public Builder mergeMatch(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.mergeMatch(value);
      return this;
    }
    /**
     * <pre>
     * The condition matches if the given element exists. An empty
     * ElementReference never match.
     * </pre>
     *
     * <code>.autofill_assistant.SelectorProto match = 4;</code>
     */
    public Builder clearMatch() {
      copyOnWrite();
      instance.clearMatch();
      return this;
    }

    /**
     * <pre>
     * A payload that identifies this condition. WaitForDom puts this payload
     * into the result. This is ignored outside of WaitForDom.
     * </pre>
     *
     * <code>optional bytes payload = 5;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return instance.hasPayload();
    }
    /**
     * <pre>
     * A payload that identifies this condition. WaitForDom puts this payload
     * into the result. This is ignored outside of WaitForDom.
     * </pre>
     *
     * <code>optional bytes payload = 5;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return instance.getPayload();
    }
    /**
     * <pre>
     * A payload that identifies this condition. WaitForDom puts this payload
     * into the result. This is ignored outside of WaitForDom.
     * </pre>
     *
     * <code>optional bytes payload = 5;</code>
     * @param value The payload to set.
     * @return This builder for chaining.
     */
    public Builder setPayload(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPayload(value);
      return this;
    }
    /**
     * <pre>
     * A payload that identifies this condition. WaitForDom puts this payload
     * into the result. This is ignored outside of WaitForDom.
     * </pre>
     *
     * <code>optional bytes payload = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPayload() {
      copyOnWrite();
      instance.clearPayload();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementConditionProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "type_",
            "typeCase_",
            "bitField0_",
            org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionsProto.class,
            org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.class,
            "payload_",
          };
          java.lang.String info =
              "\u0001\u0005\u0001\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u103c\u0000\u0002" +
              "\u103c\u0000\u0003\u103c\u0000\u0004\u103c\u0000\u0005\u100a\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ElementConditionProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto DEFAULT_INSTANCE;
  static {
    ElementConditionProto defaultInstance = new ElementConditionProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ElementConditionProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementConditionProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ElementConditionProto> PARSER;

  public static com.google.protobuf.Parser<ElementConditionProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

