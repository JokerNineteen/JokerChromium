// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/piet/actions.proto

package org.chromium.components.feed.core.proto.ui.piet;

public final class ActionsProto {
  private ActionsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ActionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Actions)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     * @return Whether the onClickAction field is set.
     */
    boolean hasOnClickAction();
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     * @return The onClickAction.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnClickAction();

    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     * @return Whether the onLongClickAction field is set.
     */
    boolean hasOnLongClickAction();
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     * @return The onLongClickAction.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnLongClickAction();

    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> 
        getOnViewActionsList();
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnViewActions(int index);
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    int getOnViewActionsCount();

    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> 
        getOnHideActionsList();
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnHideActions(int index);
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    int getOnHideActionsCount();

    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     * @return Whether the onForceTouchAction field is set.
     */
    boolean hasOnForceTouchAction();
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     * @return The onForceTouchAction.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnForceTouchAction();
  }
  /**
   * <pre>
   * Multiple actions can be associated with every UI element. To keep the set of
   * Actions consistent among multiple UI elements, theyâ€™re all defined in a
   * dedicated message.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Actions}
   */
  public  static final class Actions extends
      com.google.protobuf.GeneratedMessageLite<
          Actions, Actions.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Actions)
      ActionsOrBuilder {
    private Actions() {
      onViewActions_ = emptyProtobufList();
      onHideActions_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ON_CLICK_ACTION_FIELD_NUMBER = 1;
    private org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action onClickAction_;
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     */
    @java.lang.Override
    public boolean hasOnClickAction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnClickAction() {
      return onClickAction_ == null ? org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance() : onClickAction_;
    }
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     */
    private void setOnClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  onClickAction_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOnClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  if (onClickAction_ != null &&
          onClickAction_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance()) {
        onClickAction_ =
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.newBuilder(onClickAction_).mergeFrom(value).buildPartial();
      } else {
        onClickAction_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Action to be executed when the user taps (clicks) on a UI element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
     */
    private void clearOnClickAction() {  onClickAction_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int ON_LONG_CLICK_ACTION_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action onLongClickAction_;
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     */
    @java.lang.Override
    public boolean hasOnLongClickAction() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnLongClickAction() {
      return onLongClickAction_ == null ? org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance() : onLongClickAction_;
    }
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     */
    private void setOnLongClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  onLongClickAction_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOnLongClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  if (onLongClickAction_ != null &&
          onLongClickAction_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance()) {
        onLongClickAction_ =
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.newBuilder(onLongClickAction_).mergeFrom(value).buildPartial();
      } else {
        onLongClickAction_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Action to be executed when the user long-clicks (taps &amp; holds) a UI
     * element.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
     */
    private void clearOnLongClickAction() {  onLongClickAction_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int ON_VIEW_ACTIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> onViewActions_;
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> getOnViewActionsList() {
      return onViewActions_;
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityActionOrBuilder> 
        getOnViewActionsOrBuilderList() {
      return onViewActions_;
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    @java.lang.Override
    public int getOnViewActionsCount() {
      return onViewActions_.size();
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnViewActions(int index) {
      return onViewActions_.get(index);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityActionOrBuilder getOnViewActionsOrBuilder(
        int index) {
      return onViewActions_.get(index);
    }
    private void ensureOnViewActionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> tmp = onViewActions_;
      if (!tmp.isModifiable()) {
        onViewActions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void setOnViewActions(
        int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnViewActionsIsMutable();
      onViewActions_.set(index, value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void addOnViewActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnViewActionsIsMutable();
      onViewActions_.add(value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void addOnViewActions(
        int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnViewActionsIsMutable();
      onViewActions_.add(index, value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void addAllOnViewActions(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> values) {
      ensureOnViewActionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, onViewActions_);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void clearOnViewActions() {
      onViewActions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility below the threshold
     * goes above the threshold
     * Ex. A view action at 0.5 will trigger when a view that was less than half
     * visible becomes half visible, and not trigger again until the view has
     * become less than half visible (reset) and then becomes more than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
     */
    private void removeOnViewActions(int index) {
      ensureOnViewActionsIsMutable();
      onViewActions_.remove(index);
    }

    public static final int ON_HIDE_ACTIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> onHideActions_;
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> getOnHideActionsList() {
      return onHideActions_;
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityActionOrBuilder> 
        getOnHideActionsOrBuilderList() {
      return onHideActions_;
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    @java.lang.Override
    public int getOnHideActionsCount() {
      return onHideActions_.size();
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnHideActions(int index) {
      return onHideActions_.get(index);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityActionOrBuilder getOnHideActionsOrBuilder(
        int index) {
      return onHideActions_.get(index);
    }
    private void ensureOnHideActionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> tmp = onHideActions_;
      if (!tmp.isModifiable()) {
        onHideActions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void setOnHideActions(
        int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnHideActionsIsMutable();
      onHideActions_.set(index, value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void addOnHideActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnHideActionsIsMutable();
      onHideActions_.add(value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void addOnHideActions(
        int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
      value.getClass();
  ensureOnHideActionsIsMutable();
      onHideActions_.add(index, value);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void addAllOnHideActions(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> values) {
      ensureOnHideActionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, onHideActions_);
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void clearOnHideActions() {
      onHideActions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * These actions will fire once a view with visibility above the threshold
     * goes below the threshold.
     * Ex. A hide action at 0.5 will trigger when a view that was half visible
     * becomes less than half visible, and not trigger again until the view has
     * become more than half visible (reset) and then becomes less than half
     * visible.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
     */
    private void removeOnHideActions(int index) {
      ensureOnHideActionsIsMutable();
      onHideActions_.remove(index);
    }

    public static final int ON_FORCE_TOUCH_ACTION_FIELD_NUMBER = 5;
    private org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action onForceTouchAction_;
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     */
    @java.lang.Override
    public boolean hasOnForceTouchAction() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnForceTouchAction() {
      return onForceTouchAction_ == null ? org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance() : onForceTouchAction_;
    }
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     */
    private void setOnForceTouchAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  onForceTouchAction_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOnForceTouchAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  if (onForceTouchAction_ != null &&
          onForceTouchAction_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance()) {
        onForceTouchAction_ =
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.newBuilder(onForceTouchAction_).mergeFrom(value).buildPartial();
      } else {
        onForceTouchAction_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Action to be executed when the user force touches on a UI element. May not
     * be supported on all platforms.
     * Ex. Preview the matching detail UI for a UI element with this action.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
     */
    private void clearOnForceTouchAction() {  onForceTouchAction_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Multiple actions can be associated with every UI element. To keep the set of
     * Actions consistent among multiple UI elements, theyâ€™re all defined in a
     * dedicated message.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Actions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Actions)
        org.chromium.components.feed.core.proto.ui.piet.ActionsProto.ActionsOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      @java.lang.Override
      public boolean hasOnClickAction() {
        return instance.hasOnClickAction();
      }
      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnClickAction() {
        return instance.getOnClickAction();
      }
      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      public Builder setOnClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.setOnClickAction(value);
        return this;
        }
      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      public Builder setOnClickAction(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.Builder builderForValue) {
        copyOnWrite();
        instance.setOnClickAction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      public Builder mergeOnClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.mergeOnClickAction(value);
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user taps (clicks) on a UI element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_click_action = 1;</code>
       */
      public Builder clearOnClickAction() {  copyOnWrite();
        instance.clearOnClickAction();
        return this;
      }

      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      @java.lang.Override
      public boolean hasOnLongClickAction() {
        return instance.hasOnLongClickAction();
      }
      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnLongClickAction() {
        return instance.getOnLongClickAction();
      }
      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      public Builder setOnLongClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.setOnLongClickAction(value);
        return this;
        }
      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      public Builder setOnLongClickAction(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.Builder builderForValue) {
        copyOnWrite();
        instance.setOnLongClickAction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      public Builder mergeOnLongClickAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.mergeOnLongClickAction(value);
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user long-clicks (taps &amp; holds) a UI
       * element.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_long_click_action = 2;</code>
       */
      public Builder clearOnLongClickAction() {  copyOnWrite();
        instance.clearOnLongClickAction();
        return this;
      }

      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> getOnViewActionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOnViewActionsList());
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      @java.lang.Override
      public int getOnViewActionsCount() {
        return instance.getOnViewActionsCount();
      }/**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnViewActions(int index) {
        return instance.getOnViewActions(index);
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder setOnViewActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.setOnViewActions(index, value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder setOnViewActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.setOnViewActions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder addOnViewActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.addOnViewActions(value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder addOnViewActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.addOnViewActions(index, value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder addOnViewActions(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.addOnViewActions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder addOnViewActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.addOnViewActions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder addAllOnViewActions(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> values) {
        copyOnWrite();
        instance.addAllOnViewActions(values);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder clearOnViewActions() {
        copyOnWrite();
        instance.clearOnViewActions();
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility below the threshold
       * goes above the threshold
       * Ex. A view action at 0.5 will trigger when a view that was less than half
       * visible becomes half visible, and not trigger again until the view has
       * become less than half visible (reset) and then becomes more than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_view_actions = 3;</code>
       */
      public Builder removeOnViewActions(int index) {
        copyOnWrite();
        instance.removeOnViewActions(index);
        return this;
      }

      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> getOnHideActionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOnHideActionsList());
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      @java.lang.Override
      public int getOnHideActionsCount() {
        return instance.getOnHideActionsCount();
      }/**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getOnHideActions(int index) {
        return instance.getOnHideActions(index);
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder setOnHideActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.setOnHideActions(index, value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder setOnHideActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.setOnHideActions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder addOnHideActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.addOnHideActions(value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder addOnHideActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction value) {
        copyOnWrite();
        instance.addOnHideActions(index, value);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder addOnHideActions(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.addOnHideActions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder addOnHideActions(
          int index, org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.Builder builderForValue) {
        copyOnWrite();
        instance.addOnHideActions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder addAllOnHideActions(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> values) {
        copyOnWrite();
        instance.addAllOnHideActions(values);
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder clearOnHideActions() {
        copyOnWrite();
        instance.clearOnHideActions();
        return this;
      }
      /**
       * <pre>
       * These actions will fire once a view with visibility above the threshold
       * goes below the threshold.
       * Ex. A hide action at 0.5 will trigger when a view that was half visible
       * becomes less than half visible, and not trigger again until the view has
       * become more than half visible (reset) and then becomes less than half
       * visible.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.VisibilityAction on_hide_actions = 4;</code>
       */
      public Builder removeOnHideActions(int index) {
        copyOnWrite();
        instance.removeOnHideActions(index);
        return this;
      }

      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      @java.lang.Override
      public boolean hasOnForceTouchAction() {
        return instance.hasOnForceTouchAction();
      }
      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getOnForceTouchAction() {
        return instance.getOnForceTouchAction();
      }
      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      public Builder setOnForceTouchAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.setOnForceTouchAction(value);
        return this;
        }
      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      public Builder setOnForceTouchAction(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.Builder builderForValue) {
        copyOnWrite();
        instance.setOnForceTouchAction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      public Builder mergeOnForceTouchAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.mergeOnForceTouchAction(value);
        return this;
      }
      /**
       * <pre>
       * Action to be executed when the user force touches on a UI element. May not
       * be supported on all platforms.
       * Ex. Preview the matching detail UI for a UI element with this action.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action on_force_touch_action = 5;</code>
       */
      public Builder clearOnForceTouchAction() {  copyOnWrite();
        instance.clearOnForceTouchAction();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Actions)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "onClickAction_",
              "onLongClickAction_",
              "onViewActions_",
              org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.class,
              "onHideActions_",
              org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.class,
              "onForceTouchAction_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0002\u0005\u0001\u1409\u0000\u0002" +
                "\u1409\u0001\u0003\u041b\u0004\u041b\u0005\u1409\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Actions)
    private static final org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions DEFAULT_INSTANCE;
    static {
      Actions defaultInstance = new Actions();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Actions.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Actions> PARSER;

    public static com.google.protobuf.Parser<Actions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ActionOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Action)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                Action, Action.Builder> {
  }
  /**
   * <pre>
   * Defines an Action which can be raised when the user clicks a UI element. The
   * action can be defined for the full slice or something inside a slice such as
   * a suggestion chip. All Actions should be defined as extensions, donâ€™t define
   * fields in this proto directly.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Action}
   */
  public  static final class Action extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Action, Action.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Action)
      ActionOrBuilder {
    private Action() {
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Defines an Action which can be raised when the user clicks a UI element. The
     * action can be defined for the full slice or something inside a slice such as
     * a suggestion chip. All Actions should be defined as extensions, donâ€™t define
     * fields in this proto directly.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Action}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Action)
        org.chromium.components.feed.core.proto.ui.piet.ActionsProto.ActionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Action)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0001\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Action)
    private static final org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action DEFAULT_INSTANCE;
    static {
      Action defaultInstance = new Action();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Action.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Action> PARSER;

    public static com.google.protobuf.Parser<Action> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VisibilityActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.VisibilityAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     * @return Whether the proportionVisible field is set.
     */
    boolean hasProportionVisible();
    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     * @return The proportionVisible.
     */
    float getProportionVisible();

    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     * @return Whether the action field is set.
     */
    boolean hasAction();
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     * @return The action.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getAction();
  }
  /**
   * <pre>
   * Actions that trigger based on the proportion of the parent Element that is
   * visible.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.VisibilityAction}
   */
  public  static final class VisibilityAction extends
      com.google.protobuf.GeneratedMessageLite<
          VisibilityAction, VisibilityAction.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.VisibilityAction)
      VisibilityActionOrBuilder {
    private VisibilityAction() {
      proportionVisible_ = 1F;
    }
    private int bitField0_;
    public static final int PROPORTION_VISIBLE_FIELD_NUMBER = 1;
    private float proportionVisible_;
    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     * @return Whether the proportionVisible field is set.
     */
    @java.lang.Override
    public boolean hasProportionVisible() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     * @return The proportionVisible.
     */
    @java.lang.Override
    public float getProportionVisible() {
      return proportionVisible_;
    }
    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     * @param value The proportionVisible to set.
     */
    private void setProportionVisible(float value) {
      bitField0_ |= 0x00000001;
      proportionVisible_ = value;
    }
    /**
     * <pre>
     * Proportion of the view that should be visible for this action to trigger
     * [0.0 to 1.0]
     * Defaults to 1.0 to make this an "on full view" action.
     * </pre>
     *
     * <code>optional float proportion_visible = 1 [default = 1];</code>
     */
    private void clearProportionVisible() {
      bitField0_ = (bitField0_ & ~0x00000001);
      proportionVisible_ = 1F;
    }

    public static final int ACTION_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action action_;
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     */
    @java.lang.Override
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getAction() {
      return action_ == null ? org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance() : action_;
    }
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     */
    private void setAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  action_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
      value.getClass();
  if (action_ != null &&
          action_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.getDefaultInstance()) {
        action_ =
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.newBuilder(action_).mergeFrom(value).buildPartial();
      } else {
        action_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Action to trigger at the given visibility threshold
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
     */
    private void clearAction() {  action_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Actions that trigger based on the proportion of the parent Element that is
     * visible.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.VisibilityAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.VisibilityAction)
        org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityActionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Proportion of the view that should be visible for this action to trigger
       * [0.0 to 1.0]
       * Defaults to 1.0 to make this an "on full view" action.
       * </pre>
       *
       * <code>optional float proportion_visible = 1 [default = 1];</code>
       * @return Whether the proportionVisible field is set.
       */
      @java.lang.Override
      public boolean hasProportionVisible() {
        return instance.hasProportionVisible();
      }
      /**
       * <pre>
       * Proportion of the view that should be visible for this action to trigger
       * [0.0 to 1.0]
       * Defaults to 1.0 to make this an "on full view" action.
       * </pre>
       *
       * <code>optional float proportion_visible = 1 [default = 1];</code>
       * @return The proportionVisible.
       */
      @java.lang.Override
      public float getProportionVisible() {
        return instance.getProportionVisible();
      }
      /**
       * <pre>
       * Proportion of the view that should be visible for this action to trigger
       * [0.0 to 1.0]
       * Defaults to 1.0 to make this an "on full view" action.
       * </pre>
       *
       * <code>optional float proportion_visible = 1 [default = 1];</code>
       * @param value The proportionVisible to set.
       * @return This builder for chaining.
       */
      public Builder setProportionVisible(float value) {
        copyOnWrite();
        instance.setProportionVisible(value);
        return this;
      }
      /**
       * <pre>
       * Proportion of the view that should be visible for this action to trigger
       * [0.0 to 1.0]
       * Defaults to 1.0 to make this an "on full view" action.
       * </pre>
       *
       * <code>optional float proportion_visible = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearProportionVisible() {
        copyOnWrite();
        instance.clearProportionVisible();
        return this;
      }

      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      @java.lang.Override
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action getAction() {
        return instance.getAction();
      }
      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      public Builder setAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
        }
      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      public Builder setAction(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action.Builder builderForValue) {
        copyOnWrite();
        instance.setAction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      public Builder mergeAction(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Action value) {
        copyOnWrite();
        instance.mergeAction(value);
        return this;
      }
      /**
       * <pre>
       * Action to trigger at the given visibility threshold
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Action action = 2;</code>
       */
      public Builder clearAction() {  copyOnWrite();
        instance.clearAction();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.VisibilityAction)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "proportionVisible_",
              "action_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0001\u0001\u1001\u0000\u0002" +
                "\u1409\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.VisibilityAction)
    private static final org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction DEFAULT_INSTANCE;
    static {
      VisibilityAction defaultInstance = new VisibilityAction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        VisibilityAction.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.ActionsProto.VisibilityAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VisibilityAction> PARSER;

    public static com.google.protobuf.Parser<VisibilityAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
