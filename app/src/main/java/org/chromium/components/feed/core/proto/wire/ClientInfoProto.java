// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/wire/client_info.proto

package org.chromium.components.feed.core.proto.wire;

public final class ClientInfoProto {
  private ClientInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ClientInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedwire1.ClientInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     * @return Whether the platformType field is set.
     */
    boolean hasPlatformType();
    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     * @return The platformType.
     */
    org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType getPlatformType();

    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     * @return Whether the platformVersion field is set.
     */
    boolean hasPlatformVersion();
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     * @return The platformVersion.
     */
    org.chromium.components.feed.core.proto.wire.VersionProto.Version getPlatformVersion();

    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     * @return Whether the appType field is set.
     */
    boolean hasAppType();
    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     * @return The appType.
     */
    org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType getAppType();

    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     * @return Whether the appVersion field is set.
     */
    boolean hasAppVersion();
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     * @return The appVersion.
     */
    org.chromium.components.feed.core.proto.wire.VersionProto.Version getAppVersion();

    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return Whether the locale field is set.
     */
    boolean hasLocale();
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return The locale.
     */
    java.lang.String getLocale();
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return The bytes for locale.
     */
    com.google.protobuf.ByteString
        getLocaleBytes();

    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> 
        getDisplayInfoList();
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo getDisplayInfo(int index);
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    int getDisplayInfoCount();
  }
  /**
   * <pre>
   * Information about the client performing the request similar to a user-agent
   * string in HTTP.
   * Next ID: 7.
   * </pre>
   *
   * Protobuf type {@code feedwire1.ClientInfo}
   */
  public  static final class ClientInfo extends
      com.google.protobuf.GeneratedMessageLite<
          ClientInfo, ClientInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:feedwire1.ClientInfo)
      ClientInfoOrBuilder {
    private ClientInfo() {
      locale_ = "";
      displayInfo_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code feedwire1.ClientInfo.PlatformType}
     */
    public enum PlatformType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKNOWN_PLATFORM = 0;</code>
       */
      UNKNOWN_PLATFORM(0),
      /**
       * <pre>
       * ANDROID collides with a C++ preprocessor macro.
       * </pre>
       *
       * <code>ANDROID_ID = 1;</code>
       */
      ANDROID_ID(1),
      /**
       * <code>IOS = 2;</code>
       */
      IOS(2),
      ;

      /**
       * <code>UNKNOWN_PLATFORM = 0;</code>
       */
      public static final int UNKNOWN_PLATFORM_VALUE = 0;
      /**
       * <pre>
       * ANDROID collides with a C++ preprocessor macro.
       * </pre>
       *
       * <code>ANDROID_ID = 1;</code>
       */
      public static final int ANDROID_ID_VALUE = 1;
      /**
       * <code>IOS = 2;</code>
       */
      public static final int IOS_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PlatformType valueOf(int value) {
        return forNumber(value);
      }

      public static PlatformType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_PLATFORM;
          case 1: return ANDROID_ID;
          case 2: return IOS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PlatformType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PlatformType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PlatformType>() {
              @java.lang.Override
              public PlatformType findValueByNumber(int number) {
                return PlatformType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return PlatformTypeVerifier.INSTANCE;
      }

      private static final class PlatformTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new PlatformTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return PlatformType.forNumber(number) != null;
              }
            };

      private final int value;

      private PlatformType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:feedwire1.ClientInfo.PlatformType)
    }

    /**
     * Protobuf enum {@code feedwire1.ClientInfo.AppType}
     */
    public enum AppType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKNOWN_APP = 0;</code>
       */
      UNKNOWN_APP(0),
      /**
       * <code>GSA = 1;</code>
       */
      GSA(1),
      /**
       * <code>CHROME = 2;</code>
       */
      CHROME(2),
      /**
       * <code>TEST_APP = 3;</code>
       */
      TEST_APP(3),
      ;

      /**
       * <code>UNKNOWN_APP = 0;</code>
       */
      public static final int UNKNOWN_APP_VALUE = 0;
      /**
       * <code>GSA = 1;</code>
       */
      public static final int GSA_VALUE = 1;
      /**
       * <code>CHROME = 2;</code>
       */
      public static final int CHROME_VALUE = 2;
      /**
       * <code>TEST_APP = 3;</code>
       */
      public static final int TEST_APP_VALUE = 3;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AppType valueOf(int value) {
        return forNumber(value);
      }

      public static AppType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_APP;
          case 1: return GSA;
          case 2: return CHROME;
          case 3: return TEST_APP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AppType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AppType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppType>() {
              @java.lang.Override
              public AppType findValueByNumber(int number) {
                return AppType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return AppTypeVerifier.INSTANCE;
      }

      private static final class AppTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new AppTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return AppType.forNumber(number) != null;
              }
            };

      private final int value;

      private AppType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:feedwire1.ClientInfo.AppType)
    }

    private int bitField0_;
    public static final int PLATFORM_TYPE_FIELD_NUMBER = 1;
    private int platformType_;
    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     * @return Whether the platformType field is set.
     */
    @java.lang.Override
    public boolean hasPlatformType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     * @return The platformType.
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType getPlatformType() {
      org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType result = org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType.forNumber(platformType_);
      return result == null ? org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType.UNKNOWN_PLATFORM : result;
    }
    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     * @param value The platformType to set.
     */
    private void setPlatformType(org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType value) {
      platformType_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The type of OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
     */
    private void clearPlatformType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      platformType_ = 0;
    }

    public static final int PLATFORM_VERSION_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.wire.VersionProto.Version platformVersion_;
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     */
    @java.lang.Override
    public boolean hasPlatformVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.wire.VersionProto.Version getPlatformVersion() {
      return platformVersion_ == null ? org.chromium.components.feed.core.proto.wire.VersionProto.Version.getDefaultInstance() : platformVersion_;
    }
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     */
    private void setPlatformVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
      value.getClass();
  platformVersion_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePlatformVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
      value.getClass();
  if (platformVersion_ != null &&
          platformVersion_ != org.chromium.components.feed.core.proto.wire.VersionProto.Version.getDefaultInstance()) {
        platformVersion_ =
          org.chromium.components.feed.core.proto.wire.VersionProto.Version.newBuilder(platformVersion_).mergeFrom(value).buildPartial();
      } else {
        platformVersion_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The version of the OS that the client is running.
     * </pre>
     *
     * <code>optional .feedwire1.Version platform_version = 2;</code>
     */
    private void clearPlatformVersion() {  platformVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int APP_TYPE_FIELD_NUMBER = 3;
    private int appType_;
    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     * @return Whether the appType field is set.
     */
    @java.lang.Override
    public boolean hasAppType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     * @return The appType.
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType getAppType() {
      org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType result = org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType.forNumber(appType_);
      return result == null ? org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType.UNKNOWN_APP : result;
    }
    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     * @param value The appType to set.
     */
    private void setAppType(org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType value) {
      appType_ = value.getNumber();
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * The type of client app.
     * </pre>
     *
     * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
     */
    private void clearAppType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      appType_ = 0;
    }

    public static final int APP_VERSION_FIELD_NUMBER = 4;
    private org.chromium.components.feed.core.proto.wire.VersionProto.Version appVersion_;
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     */
    @java.lang.Override
    public boolean hasAppVersion() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.wire.VersionProto.Version getAppVersion() {
      return appVersion_ == null ? org.chromium.components.feed.core.proto.wire.VersionProto.Version.getDefaultInstance() : appVersion_;
    }
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     */
    private void setAppVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
      value.getClass();
  appVersion_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAppVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
      value.getClass();
  if (appVersion_ != null &&
          appVersion_ != org.chromium.components.feed.core.proto.wire.VersionProto.Version.getDefaultInstance()) {
        appVersion_ =
          org.chromium.components.feed.core.proto.wire.VersionProto.Version.newBuilder(appVersion_).mergeFrom(value).buildPartial();
      } else {
        appVersion_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * The version of the client app.
     * </pre>
     *
     * <code>optional .feedwire1.Version app_version = 4;</code>
     */
    private void clearAppVersion() {  appVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int LOCALE_FIELD_NUMBER = 5;
    private java.lang.String locale_;
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return Whether the locale field is set.
     */
    @java.lang.Override
    public boolean hasLocale() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return The locale.
     */
    @java.lang.Override
    public java.lang.String getLocale() {
      return locale_;
    }
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @return The bytes for locale.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLocaleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(locale_);
    }
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @param value The locale to set.
     */
    private void setLocale(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000010;
      locale_ = value;
    }
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    private void clearLocale() {
      bitField0_ = (bitField0_ & ~0x00000010);
      locale_ = getDefaultInstance().getLocale();
    }
    /**
     * <pre>
     * A string identifying the language and region preferences of the client.
     * Follows the BCP 47 format such as "en-US" or "fr-CA"
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     * @param value The bytes for locale to set.
     */
    private void setLocaleBytes(
        com.google.protobuf.ByteString value) {
      locale_ = value.toStringUtf8();
      bitField0_ |= 0x00000010;
    }

    public static final int DISPLAY_INFO_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> displayInfo_;
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> getDisplayInfoList() {
      return displayInfo_;
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfoOrBuilder> 
        getDisplayInfoOrBuilderList() {
      return displayInfo_;
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    @java.lang.Override
    public int getDisplayInfoCount() {
      return displayInfo_.size();
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo getDisplayInfo(int index) {
      return displayInfo_.get(index);
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    public org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfoOrBuilder getDisplayInfoOrBuilder(
        int index) {
      return displayInfo_.get(index);
    }
    private void ensureDisplayInfoIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> tmp = displayInfo_;
      if (!tmp.isModifiable()) {
        displayInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void setDisplayInfo(
        int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
      value.getClass();
  ensureDisplayInfoIsMutable();
      displayInfo_.set(index, value);
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void addDisplayInfo(org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
      value.getClass();
  ensureDisplayInfoIsMutable();
      displayInfo_.add(value);
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void addDisplayInfo(
        int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
      value.getClass();
  ensureDisplayInfoIsMutable();
      displayInfo_.add(index, value);
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void addAllDisplayInfo(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> values) {
      ensureDisplayInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, displayInfo_);
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void clearDisplayInfo() {
      displayInfo_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The information about the screen of the client. This is repeated because
     * there are some devices that might have multiple display screens.
     * (Ex foldable phones)
     * </pre>
     *
     * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
     */
    private void removeDisplayInfo(int index) {
      ensureDisplayInfoIsMutable();
      displayInfo_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Information about the client performing the request similar to a user-agent
     * string in HTTP.
     * Next ID: 7.
     * </pre>
     *
     * Protobuf type {@code feedwire1.ClientInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedwire1.ClientInfo)
        org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfoOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The type of OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
       * @return Whether the platformType field is set.
       */
      @java.lang.Override
      public boolean hasPlatformType() {
        return instance.hasPlatformType();
      }
      /**
       * <pre>
       * The type of OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
       * @return The platformType.
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType getPlatformType() {
        return instance.getPlatformType();
      }
      /**
       * <pre>
       * The type of OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
       * @param value The enum numeric value on the wire for platformType to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformType(org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType value) {
        copyOnWrite();
        instance.setPlatformType(value);
        return this;
      }
      /**
       * <pre>
       * The type of OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.PlatformType platform_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatformType() {
        copyOnWrite();
        instance.clearPlatformType();
        return this;
      }

      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      @java.lang.Override
      public boolean hasPlatformVersion() {
        return instance.hasPlatformVersion();
      }
      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.wire.VersionProto.Version getPlatformVersion() {
        return instance.getPlatformVersion();
      }
      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      public Builder setPlatformVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
        copyOnWrite();
        instance.setPlatformVersion(value);
        return this;
        }
      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      public Builder setPlatformVersion(
          org.chromium.components.feed.core.proto.wire.VersionProto.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setPlatformVersion(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      public Builder mergePlatformVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
        copyOnWrite();
        instance.mergePlatformVersion(value);
        return this;
      }
      /**
       * <pre>
       * The version of the OS that the client is running.
       * </pre>
       *
       * <code>optional .feedwire1.Version platform_version = 2;</code>
       */
      public Builder clearPlatformVersion() {  copyOnWrite();
        instance.clearPlatformVersion();
        return this;
      }

      /**
       * <pre>
       * The type of client app.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
       * @return Whether the appType field is set.
       */
      @java.lang.Override
      public boolean hasAppType() {
        return instance.hasAppType();
      }
      /**
       * <pre>
       * The type of client app.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
       * @return The appType.
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType getAppType() {
        return instance.getAppType();
      }
      /**
       * <pre>
       * The type of client app.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
       * @param value The enum numeric value on the wire for appType to set.
       * @return This builder for chaining.
       */
      public Builder setAppType(org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType value) {
        copyOnWrite();
        instance.setAppType(value);
        return this;
      }
      /**
       * <pre>
       * The type of client app.
       * </pre>
       *
       * <code>optional .feedwire1.ClientInfo.AppType app_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppType() {
        copyOnWrite();
        instance.clearAppType();
        return this;
      }

      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      @java.lang.Override
      public boolean hasAppVersion() {
        return instance.hasAppVersion();
      }
      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.wire.VersionProto.Version getAppVersion() {
        return instance.getAppVersion();
      }
      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      public Builder setAppVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
        copyOnWrite();
        instance.setAppVersion(value);
        return this;
        }
      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      public Builder setAppVersion(
          org.chromium.components.feed.core.proto.wire.VersionProto.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setAppVersion(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      public Builder mergeAppVersion(org.chromium.components.feed.core.proto.wire.VersionProto.Version value) {
        copyOnWrite();
        instance.mergeAppVersion(value);
        return this;
      }
      /**
       * <pre>
       * The version of the client app.
       * </pre>
       *
       * <code>optional .feedwire1.Version app_version = 4;</code>
       */
      public Builder clearAppVersion() {  copyOnWrite();
        instance.clearAppVersion();
        return this;
      }

      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @return Whether the locale field is set.
       */
      @java.lang.Override
      public boolean hasLocale() {
        return instance.hasLocale();
      }
      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @return The locale.
       */
      @java.lang.Override
      public java.lang.String getLocale() {
        return instance.getLocale();
      }
      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @return The bytes for locale.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLocaleBytes() {
        return instance.getLocaleBytes();
      }
      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @param value The locale to set.
       * @return This builder for chaining.
       */
      public Builder setLocale(
          java.lang.String value) {
        copyOnWrite();
        instance.setLocale(value);
        return this;
      }
      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocale() {
        copyOnWrite();
        instance.clearLocale();
        return this;
      }
      /**
       * <pre>
       * A string identifying the language and region preferences of the client.
       * Follows the BCP 47 format such as "en-US" or "fr-CA"
       * </pre>
       *
       * <code>optional string locale = 5;</code>
       * @param value The bytes for locale to set.
       * @return This builder for chaining.
       */
      public Builder setLocaleBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLocaleBytes(value);
        return this;
      }

      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> getDisplayInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getDisplayInfoList());
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      @java.lang.Override
      public int getDisplayInfoCount() {
        return instance.getDisplayInfoCount();
      }/**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo getDisplayInfo(int index) {
        return instance.getDisplayInfo(index);
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder setDisplayInfo(
          int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
        copyOnWrite();
        instance.setDisplayInfo(index, value);
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder setDisplayInfo(
          int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setDisplayInfo(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder addDisplayInfo(org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
        copyOnWrite();
        instance.addDisplayInfo(value);
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder addDisplayInfo(
          int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo value) {
        copyOnWrite();
        instance.addDisplayInfo(index, value);
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder addDisplayInfo(
          org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addDisplayInfo(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder addDisplayInfo(
          int index, org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addDisplayInfo(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder addAllDisplayInfo(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo> values) {
        copyOnWrite();
        instance.addAllDisplayInfo(values);
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder clearDisplayInfo() {
        copyOnWrite();
        instance.clearDisplayInfo();
        return this;
      }
      /**
       * <pre>
       * The information about the screen of the client. This is repeated because
       * there are some devices that might have multiple display screens.
       * (Ex foldable phones)
       * </pre>
       *
       * <code>repeated .feedwire1.DisplayInfo display_info = 6;</code>
       */
      public Builder removeDisplayInfo(int index) {
        copyOnWrite();
        instance.removeDisplayInfo(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedwire1.ClientInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "platformType_",
              org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.PlatformType.internalGetVerifier(),
              "platformVersion_",
              "appType_",
              org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.AppType.internalGetVerifier(),
              "appVersion_",
              "locale_",
              "displayInfo_",
              org.chromium.components.feed.core.proto.wire.DisplayInfoProto.DisplayInfo.class,
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0001\u0000\u0001\u100c\u0000\u0002" +
                "\u1009\u0001\u0003\u100c\u0002\u0004\u1009\u0003\u0005\u1008\u0004\u0006\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedwire1.ClientInfo)
    private static final org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo DEFAULT_INSTANCE;
    static {
      ClientInfo defaultInstance = new ClientInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ClientInfo.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.wire.ClientInfoProto.ClientInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClientInfo> PARSER;

    public static com.google.protobuf.Parser<ClientInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
