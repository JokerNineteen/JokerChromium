// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/v2/ui.proto

package org.chromium.components.feed.proto;

public final class FeedUiProto {
  private FeedUiProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface StreamUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.StreamUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    java.util.List<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> 
        getUpdatedSlicesList();
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate getUpdatedSlices(int index);
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    int getUpdatedSlicesCount();

    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    java.util.List<org.chromium.components.feed.proto.FeedUiProto.SharedState> 
        getNewSharedStatesList();
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    org.chromium.components.feed.proto.FeedUiProto.SharedState getNewSharedStates(int index);
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    int getNewSharedStatesCount();
  }
  /**
   * <pre>
   * A stream is a list of chunks in order.
   * Each StreamUpdate contains the full list of chunks,
   * but subsequent StreamUpdates after the first may refer to
   * chunks previously received by chunk_id.
   * </pre>
   *
   * Protobuf type {@code feedui.StreamUpdate}
   */
  public  static final class StreamUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          StreamUpdate, StreamUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.StreamUpdate)
      StreamUpdateOrBuilder {
    private StreamUpdate() {
      updatedSlices_ = emptyProtobufList();
      newSharedStates_ = emptyProtobufList();
    }
    public interface SliceUpdateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:feedui.StreamUpdate.SliceUpdate)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>.feedui.Slice slice = 1;</code>
       * @return Whether the slice field is set.
       */
      boolean hasSlice();
      /**
       * <code>.feedui.Slice slice = 1;</code>
       * @return The slice.
       */
      org.chromium.components.feed.proto.FeedUiProto.Slice getSlice();

      /**
       * <code>string slice_id = 2;</code>
       * @return The sliceId.
       */
      java.lang.String getSliceId();
      /**
       * <code>string slice_id = 2;</code>
       * @return The bytes for sliceId.
       */
      com.google.protobuf.ByteString
          getSliceIdBytes();

      public org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.UpdateCase getUpdateCase();
    }
    /**
     * <pre>
     * Either a reference to an existing slice, or a new slice.
     * </pre>
     *
     * Protobuf type {@code feedui.StreamUpdate.SliceUpdate}
     */
    public  static final class SliceUpdate extends
        com.google.protobuf.GeneratedMessageLite<
            SliceUpdate, SliceUpdate.Builder> implements
        // @@protoc_insertion_point(message_implements:feedui.StreamUpdate.SliceUpdate)
        SliceUpdateOrBuilder {
      private SliceUpdate() {
      }
      private int updateCase_ = 0;
      private java.lang.Object update_;
      public enum UpdateCase {
        SLICE(1),
        SLICE_ID(2),
        UPDATE_NOT_SET(0);
        private final int value;
        private UpdateCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static UpdateCase valueOf(int value) {
          return forNumber(value);
        }

        public static UpdateCase forNumber(int value) {
          switch (value) {
            case 1: return SLICE;
            case 2: return SLICE_ID;
            case 0: return UPDATE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      @java.lang.Override
      public UpdateCase
      getUpdateCase() {
        return UpdateCase.forNumber(
            updateCase_);
      }

      private void clearUpdate() {
        updateCase_ = 0;
        update_ = null;
      }

      public static final int SLICE_FIELD_NUMBER = 1;
      /**
       * <code>.feedui.Slice slice = 1;</code>
       */
      @java.lang.Override
      public boolean hasSlice() {
        return updateCase_ == 1;
      }
      /**
       * <code>.feedui.Slice slice = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.Slice getSlice() {
        if (updateCase_ == 1) {
           return (org.chromium.components.feed.proto.FeedUiProto.Slice) update_;
        }
        return org.chromium.components.feed.proto.FeedUiProto.Slice.getDefaultInstance();
      }
      /**
       * <code>.feedui.Slice slice = 1;</code>
       */
      private void setSlice(org.chromium.components.feed.proto.FeedUiProto.Slice value) {
        value.getClass();
  update_ = value;
        updateCase_ = 1;
      }
      /**
       * <code>.feedui.Slice slice = 1;</code>
       */
      private void mergeSlice(org.chromium.components.feed.proto.FeedUiProto.Slice value) {
        value.getClass();
  if (updateCase_ == 1 &&
            update_ != org.chromium.components.feed.proto.FeedUiProto.Slice.getDefaultInstance()) {
          update_ = org.chromium.components.feed.proto.FeedUiProto.Slice.newBuilder((org.chromium.components.feed.proto.FeedUiProto.Slice) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        updateCase_ = 1;
      }
      /**
       * <code>.feedui.Slice slice = 1;</code>
       */
      private void clearSlice() {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
        }
      }

      public static final int SLICE_ID_FIELD_NUMBER = 2;
      /**
       * <code>string slice_id = 2;</code>
       * @return The sliceId.
       */
      @java.lang.Override
      public java.lang.String getSliceId() {
        java.lang.String ref = "";
        if (updateCase_ == 2) {
          ref = (java.lang.String) update_;
        }
        return ref;
      }
      /**
       * <code>string slice_id = 2;</code>
       * @return The bytes for sliceId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSliceIdBytes() {
        java.lang.String ref = "";
        if (updateCase_ == 2) {
          ref = (java.lang.String) update_;
        }
        return com.google.protobuf.ByteString.copyFromUtf8(ref);
      }
      /**
       * <code>string slice_id = 2;</code>
       * @param value The sliceId to set.
       */
      private void setSliceId(
          java.lang.String value) {
        value.getClass();
  updateCase_ = 2;
        update_ = value;
      }
      /**
       * <code>string slice_id = 2;</code>
       */
      private void clearSliceId() {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
        }
      }
      /**
       * <code>string slice_id = 2;</code>
       * @param value The bytes for sliceId to set.
       */
      private void setSliceIdBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        update_ = value.toStringUtf8();
        updateCase_ = 2;
      }

      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Either a reference to an existing slice, or a new slice.
       * </pre>
       *
       * Protobuf type {@code feedui.StreamUpdate.SliceUpdate}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate, Builder> implements
          // @@protoc_insertion_point(builder_implements:feedui.StreamUpdate.SliceUpdate)
          org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdateOrBuilder {
        // Construct using org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        @java.lang.Override
        public UpdateCase
            getUpdateCase() {
          return instance.getUpdateCase();
        }

        public Builder clearUpdate() {
          copyOnWrite();
          instance.clearUpdate();
          return this;
        }


        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        @java.lang.Override
        public boolean hasSlice() {
          return instance.hasSlice();
        }
        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        @java.lang.Override
        public org.chromium.components.feed.proto.FeedUiProto.Slice getSlice() {
          return instance.getSlice();
        }
        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        public Builder setSlice(org.chromium.components.feed.proto.FeedUiProto.Slice value) {
          copyOnWrite();
          instance.setSlice(value);
          return this;
        }
        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        public Builder setSlice(
            org.chromium.components.feed.proto.FeedUiProto.Slice.Builder builderForValue) {
          copyOnWrite();
          instance.setSlice(builderForValue.build());
          return this;
        }
        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        public Builder mergeSlice(org.chromium.components.feed.proto.FeedUiProto.Slice value) {
          copyOnWrite();
          instance.mergeSlice(value);
          return this;
        }
        /**
         * <code>.feedui.Slice slice = 1;</code>
         */
        public Builder clearSlice() {
          copyOnWrite();
          instance.clearSlice();
          return this;
        }

        /**
         * <code>string slice_id = 2;</code>
         * @return The sliceId.
         */
        @java.lang.Override
        public java.lang.String getSliceId() {
          return instance.getSliceId();
        }
        /**
         * <code>string slice_id = 2;</code>
         * @return The bytes for sliceId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getSliceIdBytes() {
          return instance.getSliceIdBytes();
        }
        /**
         * <code>string slice_id = 2;</code>
         * @param value The sliceId to set.
         * @return This builder for chaining.
         */
        public Builder setSliceId(
            java.lang.String value) {
          copyOnWrite();
          instance.setSliceId(value);
          return this;
        }
        /**
         * <code>string slice_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSliceId() {
          copyOnWrite();
          instance.clearSliceId();
          return this;
        }
        /**
         * <code>string slice_id = 2;</code>
         * @param value The bytes for sliceId to set.
         * @return This builder for chaining.
         */
        public Builder setSliceIdBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setSliceIdBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:feedui.StreamUpdate.SliceUpdate)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "update_",
                "updateCase_",
                org.chromium.components.feed.proto.FeedUiProto.Slice.class,
              };
              java.lang.String info =
                  "\u0000\u0002\u0001\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001<\u0000\u0002\u023b" +
                  "\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:feedui.StreamUpdate.SliceUpdate)
      private static final org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate DEFAULT_INSTANCE;
      static {
        SliceUpdate defaultInstance = new SliceUpdate();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          SliceUpdate.class, defaultInstance);
      }

      public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<SliceUpdate> PARSER;

      public static com.google.protobuf.Parser<SliceUpdate> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int UPDATED_SLICES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> updatedSlices_;
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> getUpdatedSlicesList() {
      return updatedSlices_;
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdateOrBuilder> 
        getUpdatedSlicesOrBuilderList() {
      return updatedSlices_;
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    @java.lang.Override
    public int getUpdatedSlicesCount() {
      return updatedSlices_.size();
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate getUpdatedSlices(int index) {
      return updatedSlices_.get(index);
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    public org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdateOrBuilder getUpdatedSlicesOrBuilder(
        int index) {
      return updatedSlices_.get(index);
    }
    private void ensureUpdatedSlicesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> tmp = updatedSlices_;
      if (!tmp.isModifiable()) {
        updatedSlices_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void setUpdatedSlices(
        int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
      value.getClass();
  ensureUpdatedSlicesIsMutable();
      updatedSlices_.set(index, value);
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void addUpdatedSlices(org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
      value.getClass();
  ensureUpdatedSlicesIsMutable();
      updatedSlices_.add(value);
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void addUpdatedSlices(
        int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
      value.getClass();
  ensureUpdatedSlicesIsMutable();
      updatedSlices_.add(index, value);
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void addAllUpdatedSlices(
        java.lang.Iterable<? extends org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> values) {
      ensureUpdatedSlicesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, updatedSlices_);
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void clearUpdatedSlices() {
      updatedSlices_ = emptyProtobufList();
    }
    /**
     * <pre>
     * One entry for each slice in the stream, in the order they should be
     * presented. Existing slices not present in updated_slices should be dropped.
     * </pre>
     *
     * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
     */
    private void removeUpdatedSlices(int index) {
      ensureUpdatedSlicesIsMutable();
      updatedSlices_.remove(index);
    }

    public static final int NEW_SHARED_STATES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.proto.FeedUiProto.SharedState> newSharedStates_;
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.proto.FeedUiProto.SharedState> getNewSharedStatesList() {
      return newSharedStates_;
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.proto.FeedUiProto.SharedStateOrBuilder> 
        getNewSharedStatesOrBuilderList() {
      return newSharedStates_;
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    @java.lang.Override
    public int getNewSharedStatesCount() {
      return newSharedStates_.size();
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.SharedState getNewSharedStates(int index) {
      return newSharedStates_.get(index);
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    public org.chromium.components.feed.proto.FeedUiProto.SharedStateOrBuilder getNewSharedStatesOrBuilder(
        int index) {
      return newSharedStates_.get(index);
    }
    private void ensureNewSharedStatesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.proto.FeedUiProto.SharedState> tmp = newSharedStates_;
      if (!tmp.isModifiable()) {
        newSharedStates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void setNewSharedStates(
        int index, org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
      value.getClass();
  ensureNewSharedStatesIsMutable();
      newSharedStates_.set(index, value);
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void addNewSharedStates(org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
      value.getClass();
  ensureNewSharedStatesIsMutable();
      newSharedStates_.add(value);
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void addNewSharedStates(
        int index, org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
      value.getClass();
  ensureNewSharedStatesIsMutable();
      newSharedStates_.add(index, value);
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void addAllNewSharedStates(
        java.lang.Iterable<? extends org.chromium.components.feed.proto.FeedUiProto.SharedState> values) {
      ensureNewSharedStatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, newSharedStates_);
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void clearNewSharedStates() {
      newSharedStates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Additional shared states to be used. Usually just one, and sent only on the
     * first update.
     * </pre>
     *
     * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
     */
    private void removeNewSharedStates(int index) {
      ensureNewSharedStatesIsMutable();
      newSharedStates_.remove(index);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.StreamUpdate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A stream is a list of chunks in order.
     * Each StreamUpdate contains the full list of chunks,
     * but subsequent StreamUpdates after the first may refer to
     * chunks previously received by chunk_id.
     * </pre>
     *
     * Protobuf type {@code feedui.StreamUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.StreamUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.StreamUpdate)
        org.chromium.components.feed.proto.FeedUiProto.StreamUpdateOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> getUpdatedSlicesList() {
        return java.util.Collections.unmodifiableList(
            instance.getUpdatedSlicesList());
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      @java.lang.Override
      public int getUpdatedSlicesCount() {
        return instance.getUpdatedSlicesCount();
      }/**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate getUpdatedSlices(int index) {
        return instance.getUpdatedSlices(index);
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder setUpdatedSlices(
          int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
        copyOnWrite();
        instance.setUpdatedSlices(index, value);
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder setUpdatedSlices(
          int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.setUpdatedSlices(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder addUpdatedSlices(org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
        copyOnWrite();
        instance.addUpdatedSlices(value);
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder addUpdatedSlices(
          int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate value) {
        copyOnWrite();
        instance.addUpdatedSlices(index, value);
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder addUpdatedSlices(
          org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdatedSlices(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder addUpdatedSlices(
          int index, org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdatedSlices(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder addAllUpdatedSlices(
          java.lang.Iterable<? extends org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate> values) {
        copyOnWrite();
        instance.addAllUpdatedSlices(values);
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder clearUpdatedSlices() {
        copyOnWrite();
        instance.clearUpdatedSlices();
        return this;
      }
      /**
       * <pre>
       * One entry for each slice in the stream, in the order they should be
       * presented. Existing slices not present in updated_slices should be dropped.
       * </pre>
       *
       * <code>repeated .feedui.StreamUpdate.SliceUpdate updated_slices = 1;</code>
       */
      public Builder removeUpdatedSlices(int index) {
        copyOnWrite();
        instance.removeUpdatedSlices(index);
        return this;
      }

      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.proto.FeedUiProto.SharedState> getNewSharedStatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNewSharedStatesList());
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      @java.lang.Override
      public int getNewSharedStatesCount() {
        return instance.getNewSharedStatesCount();
      }/**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.SharedState getNewSharedStates(int index) {
        return instance.getNewSharedStates(index);
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder setNewSharedStates(
          int index, org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
        copyOnWrite();
        instance.setNewSharedStates(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder setNewSharedStates(
          int index, org.chromium.components.feed.proto.FeedUiProto.SharedState.Builder builderForValue) {
        copyOnWrite();
        instance.setNewSharedStates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder addNewSharedStates(org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
        copyOnWrite();
        instance.addNewSharedStates(value);
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder addNewSharedStates(
          int index, org.chromium.components.feed.proto.FeedUiProto.SharedState value) {
        copyOnWrite();
        instance.addNewSharedStates(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder addNewSharedStates(
          org.chromium.components.feed.proto.FeedUiProto.SharedState.Builder builderForValue) {
        copyOnWrite();
        instance.addNewSharedStates(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder addNewSharedStates(
          int index, org.chromium.components.feed.proto.FeedUiProto.SharedState.Builder builderForValue) {
        copyOnWrite();
        instance.addNewSharedStates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder addAllNewSharedStates(
          java.lang.Iterable<? extends org.chromium.components.feed.proto.FeedUiProto.SharedState> values) {
        copyOnWrite();
        instance.addAllNewSharedStates(values);
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder clearNewSharedStates() {
        copyOnWrite();
        instance.clearNewSharedStates();
        return this;
      }
      /**
       * <pre>
       * Additional shared states to be used. Usually just one, and sent only on the
       * first update.
       * </pre>
       *
       * <code>repeated .feedui.SharedState new_shared_states = 2;</code>
       */
      public Builder removeNewSharedStates(int index) {
        copyOnWrite();
        instance.removeNewSharedStates(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.StreamUpdate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.StreamUpdate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "updatedSlices_",
              org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.SliceUpdate.class,
              "newSharedStates_",
              org.chromium.components.feed.proto.FeedUiProto.SharedState.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001\u001b\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.StreamUpdate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.StreamUpdate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.StreamUpdate)
    private static final org.chromium.components.feed.proto.FeedUiProto.StreamUpdate DEFAULT_INSTANCE;
    static {
      StreamUpdate defaultInstance = new StreamUpdate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StreamUpdate.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.StreamUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamUpdate> PARSER;

    public static com.google.protobuf.Parser<StreamUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SliceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.Slice)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     * @return Whether the xsurfaceSlice field is set.
     */
    boolean hasXsurfaceSlice();
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     * @return The xsurfaceSlice.
     */
    org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice getXsurfaceSlice();

    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     * @return Whether the zeroStateSlice field is set.
     */
    boolean hasZeroStateSlice();
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     * @return The zeroStateSlice.
     */
    org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice getZeroStateSlice();

    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     * @return Whether the loadingSpinnerSlice field is set.
     */
    boolean hasLoadingSpinnerSlice();
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     * @return The loadingSpinnerSlice.
     */
    org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice getLoadingSpinnerSlice();

    /**
     * <code>string slice_id = 2;</code>
     * @return The sliceId.
     */
    java.lang.String getSliceId();
    /**
     * <code>string slice_id = 2;</code>
     * @return The bytes for sliceId.
     */
    com.google.protobuf.ByteString
        getSliceIdBytes();

    public org.chromium.components.feed.proto.FeedUiProto.Slice.SliceDataCase getSliceDataCase();
  }
  /**
   * <pre>
   * A horizontal slice of UI to be presented in the vertical-scrolling feed.
   * </pre>
   *
   * Protobuf type {@code feedui.Slice}
   */
  public  static final class Slice extends
      com.google.protobuf.GeneratedMessageLite<
          Slice, Slice.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.Slice)
      SliceOrBuilder {
    private Slice() {
      sliceId_ = "";
    }
    private int sliceDataCase_ = 0;
    private java.lang.Object sliceData_;
    public enum SliceDataCase {
      XSURFACE_SLICE(1),
      ZERO_STATE_SLICE(3),
      LOADING_SPINNER_SLICE(4),
      SLICEDATA_NOT_SET(0);
      private final int value;
      private SliceDataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SliceDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static SliceDataCase forNumber(int value) {
        switch (value) {
          case 1: return XSURFACE_SLICE;
          case 3: return ZERO_STATE_SLICE;
          case 4: return LOADING_SPINNER_SLICE;
          case 0: return SLICEDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public SliceDataCase
    getSliceDataCase() {
      return SliceDataCase.forNumber(
          sliceDataCase_);
    }

    private void clearSliceData() {
      sliceDataCase_ = 0;
      sliceData_ = null;
    }

    public static final int XSURFACE_SLICE_FIELD_NUMBER = 1;
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     */
    @java.lang.Override
    public boolean hasXsurfaceSlice() {
      return sliceDataCase_ == 1;
    }
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice getXsurfaceSlice() {
      if (sliceDataCase_ == 1) {
         return (org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice) sliceData_;
      }
      return org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.getDefaultInstance();
    }
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     */
    private void setXsurfaceSlice(org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice value) {
      value.getClass();
  sliceData_ = value;
      sliceDataCase_ = 1;
    }
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     */
    private void mergeXsurfaceSlice(org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice value) {
      value.getClass();
  if (sliceDataCase_ == 1 &&
          sliceData_ != org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.getDefaultInstance()) {
        sliceData_ = org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.newBuilder((org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice) sliceData_)
            .mergeFrom(value).buildPartial();
      } else {
        sliceData_ = value;
      }
      sliceDataCase_ = 1;
    }
    /**
     * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
     */
    private void clearXsurfaceSlice() {
      if (sliceDataCase_ == 1) {
        sliceDataCase_ = 0;
        sliceData_ = null;
      }
    }

    public static final int ZERO_STATE_SLICE_FIELD_NUMBER = 3;
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     */
    @java.lang.Override
    public boolean hasZeroStateSlice() {
      return sliceDataCase_ == 3;
    }
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice getZeroStateSlice() {
      if (sliceDataCase_ == 3) {
         return (org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice) sliceData_;
      }
      return org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.getDefaultInstance();
    }
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     */
    private void setZeroStateSlice(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice value) {
      value.getClass();
  sliceData_ = value;
      sliceDataCase_ = 3;
    }
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     */
    private void mergeZeroStateSlice(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice value) {
      value.getClass();
  if (sliceDataCase_ == 3 &&
          sliceData_ != org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.getDefaultInstance()) {
        sliceData_ = org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.newBuilder((org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice) sliceData_)
            .mergeFrom(value).buildPartial();
      } else {
        sliceData_ = value;
      }
      sliceDataCase_ = 3;
    }
    /**
     * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
     */
    private void clearZeroStateSlice() {
      if (sliceDataCase_ == 3) {
        sliceDataCase_ = 0;
        sliceData_ = null;
      }
    }

    public static final int LOADING_SPINNER_SLICE_FIELD_NUMBER = 4;
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     */
    @java.lang.Override
    public boolean hasLoadingSpinnerSlice() {
      return sliceDataCase_ == 4;
    }
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice getLoadingSpinnerSlice() {
      if (sliceDataCase_ == 4) {
         return (org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice) sliceData_;
      }
      return org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.getDefaultInstance();
    }
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     */
    private void setLoadingSpinnerSlice(org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice value) {
      value.getClass();
  sliceData_ = value;
      sliceDataCase_ = 4;
    }
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     */
    private void mergeLoadingSpinnerSlice(org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice value) {
      value.getClass();
  if (sliceDataCase_ == 4 &&
          sliceData_ != org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.getDefaultInstance()) {
        sliceData_ = org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.newBuilder((org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice) sliceData_)
            .mergeFrom(value).buildPartial();
      } else {
        sliceData_ = value;
      }
      sliceDataCase_ = 4;
    }
    /**
     * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
     */
    private void clearLoadingSpinnerSlice() {
      if (sliceDataCase_ == 4) {
        sliceDataCase_ = 0;
        sliceData_ = null;
      }
    }

    public static final int SLICE_ID_FIELD_NUMBER = 2;
    private java.lang.String sliceId_;
    /**
     * <code>string slice_id = 2;</code>
     * @return The sliceId.
     */
    @java.lang.Override
    public java.lang.String getSliceId() {
      return sliceId_;
    }
    /**
     * <code>string slice_id = 2;</code>
     * @return The bytes for sliceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSliceIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(sliceId_);
    }
    /**
     * <code>string slice_id = 2;</code>
     * @param value The sliceId to set.
     */
    private void setSliceId(
        java.lang.String value) {
      value.getClass();
  
      sliceId_ = value;
    }
    /**
     * <code>string slice_id = 2;</code>
     */
    private void clearSliceId() {
      
      sliceId_ = getDefaultInstance().getSliceId();
    }
    /**
     * <code>string slice_id = 2;</code>
     * @param value The bytes for sliceId to set.
     */
    private void setSliceIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      sliceId_ = value.toStringUtf8();
      
    }

    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.Slice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.Slice prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A horizontal slice of UI to be presented in the vertical-scrolling feed.
     * </pre>
     *
     * Protobuf type {@code feedui.Slice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.Slice, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.Slice)
        org.chromium.components.feed.proto.FeedUiProto.SliceOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.Slice.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public SliceDataCase
          getSliceDataCase() {
        return instance.getSliceDataCase();
      }

      public Builder clearSliceData() {
        copyOnWrite();
        instance.clearSliceData();
        return this;
      }


      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      @java.lang.Override
      public boolean hasXsurfaceSlice() {
        return instance.hasXsurfaceSlice();
      }
      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice getXsurfaceSlice() {
        return instance.getXsurfaceSlice();
      }
      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      public Builder setXsurfaceSlice(org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice value) {
        copyOnWrite();
        instance.setXsurfaceSlice(value);
        return this;
      }
      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      public Builder setXsurfaceSlice(
          org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.Builder builderForValue) {
        copyOnWrite();
        instance.setXsurfaceSlice(builderForValue.build());
        return this;
      }
      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      public Builder mergeXsurfaceSlice(org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice value) {
        copyOnWrite();
        instance.mergeXsurfaceSlice(value);
        return this;
      }
      /**
       * <code>.feedui.XSurfaceSlice xsurface_slice = 1;</code>
       */
      public Builder clearXsurfaceSlice() {
        copyOnWrite();
        instance.clearXsurfaceSlice();
        return this;
      }

      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      @java.lang.Override
      public boolean hasZeroStateSlice() {
        return instance.hasZeroStateSlice();
      }
      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice getZeroStateSlice() {
        return instance.getZeroStateSlice();
      }
      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      public Builder setZeroStateSlice(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice value) {
        copyOnWrite();
        instance.setZeroStateSlice(value);
        return this;
      }
      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      public Builder setZeroStateSlice(
          org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Builder builderForValue) {
        copyOnWrite();
        instance.setZeroStateSlice(builderForValue.build());
        return this;
      }
      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      public Builder mergeZeroStateSlice(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice value) {
        copyOnWrite();
        instance.mergeZeroStateSlice(value);
        return this;
      }
      /**
       * <code>.feedui.ZeroStateSlice zero_state_slice = 3;</code>
       */
      public Builder clearZeroStateSlice() {
        copyOnWrite();
        instance.clearZeroStateSlice();
        return this;
      }

      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      @java.lang.Override
      public boolean hasLoadingSpinnerSlice() {
        return instance.hasLoadingSpinnerSlice();
      }
      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice getLoadingSpinnerSlice() {
        return instance.getLoadingSpinnerSlice();
      }
      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      public Builder setLoadingSpinnerSlice(org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice value) {
        copyOnWrite();
        instance.setLoadingSpinnerSlice(value);
        return this;
      }
      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      public Builder setLoadingSpinnerSlice(
          org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.Builder builderForValue) {
        copyOnWrite();
        instance.setLoadingSpinnerSlice(builderForValue.build());
        return this;
      }
      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      public Builder mergeLoadingSpinnerSlice(org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice value) {
        copyOnWrite();
        instance.mergeLoadingSpinnerSlice(value);
        return this;
      }
      /**
       * <code>.feedui.LoadingSpinnerSlice loading_spinner_slice = 4;</code>
       */
      public Builder clearLoadingSpinnerSlice() {
        copyOnWrite();
        instance.clearLoadingSpinnerSlice();
        return this;
      }

      /**
       * <code>string slice_id = 2;</code>
       * @return The sliceId.
       */
      @java.lang.Override
      public java.lang.String getSliceId() {
        return instance.getSliceId();
      }
      /**
       * <code>string slice_id = 2;</code>
       * @return The bytes for sliceId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSliceIdBytes() {
        return instance.getSliceIdBytes();
      }
      /**
       * <code>string slice_id = 2;</code>
       * @param value The sliceId to set.
       * @return This builder for chaining.
       */
      public Builder setSliceId(
          java.lang.String value) {
        copyOnWrite();
        instance.setSliceId(value);
        return this;
      }
      /**
       * <code>string slice_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSliceId() {
        copyOnWrite();
        instance.clearSliceId();
        return this;
      }
      /**
       * <code>string slice_id = 2;</code>
       * @param value The bytes for sliceId to set.
       * @return This builder for chaining.
       */
      public Builder setSliceIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSliceIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.Slice)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.Slice();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sliceData_",
              "sliceDataCase_",
              org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.class,
              "sliceId_",
              org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.class,
              org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.class,
            };
            java.lang.String info =
                "\u0000\u0004\u0001\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001<\u0000\u0002\u0208" +
                "\u0003<\u0000\u0004<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.Slice> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.Slice.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.Slice>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.Slice)
    private static final org.chromium.components.feed.proto.FeedUiProto.Slice DEFAULT_INSTANCE;
    static {
      Slice defaultInstance = new Slice();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Slice.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.Slice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Slice> PARSER;

    public static com.google.protobuf.Parser<Slice> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ZeroStateSliceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.ZeroStateSlice)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @return The type.
     */
    org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type getType();
  }
  /**
   * <pre>
   * This slice is sent when no feed data can be loaded.
   * </pre>
   *
   * Protobuf type {@code feedui.ZeroStateSlice}
   */
  public  static final class ZeroStateSlice extends
      com.google.protobuf.GeneratedMessageLite<
          ZeroStateSlice, ZeroStateSlice.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.ZeroStateSlice)
      ZeroStateSliceOrBuilder {
    private ZeroStateSlice() {
    }
    /**
     * Protobuf enum {@code feedui.ZeroStateSlice.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <pre>
       * A generic error that explains there are no cards available.
       * </pre>
       *
       * <code>NO_CARDS_AVAILABLE = 1;</code>
       */
      NO_CARDS_AVAILABLE(1),
      /**
       * <pre>
       * An error indicating there were problems refreshing the feed.
       * </pre>
       *
       * <code>CANT_REFRESH = 2;</code>
       */
      CANT_REFRESH(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * A generic error that explains there are no cards available.
       * </pre>
       *
       * <code>NO_CARDS_AVAILABLE = 1;</code>
       */
      public static final int NO_CARDS_AVAILABLE_VALUE = 1;
      /**
       * <pre>
       * An error indicating there were problems refreshing the feed.
       * </pre>
       *
       * <code>CANT_REFRESH = 2;</code>
       */
      public static final int CANT_REFRESH_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return NO_CARDS_AVAILABLE;
          case 2: return CANT_REFRESH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              @java.lang.Override
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return TypeVerifier.INSTANCE;
      }

      private static final class TypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Type.forNumber(number) != null;
              }
            };

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:feedui.ZeroStateSlice.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type getType() {
      org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type result = org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type.forNumber(type_);
      return result == null ? org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type.UNRECOGNIZED : result;
    }
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * This slice is sent when no feed data can be loaded.
     * </pre>
     *
     * Protobuf type {@code feedui.ZeroStateSlice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.ZeroStateSlice)
        org.chromium.components.feed.proto.FeedUiProto.ZeroStateSliceOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type getType() {
        return instance.getType();
      }
      /**
       * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.Type value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.feedui.ZeroStateSlice.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.ZeroStateSlice)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.ZeroStateSlice)
    private static final org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice DEFAULT_INSTANCE;
    static {
      ZeroStateSlice defaultInstance = new ZeroStateSlice();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ZeroStateSlice.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.ZeroStateSlice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ZeroStateSlice> PARSER;

    public static com.google.protobuf.Parser<ZeroStateSlice> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LoadingSpinnerSliceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.LoadingSpinnerSlice)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * True if the spinner is at the top of the feed. Otherwise, it is at the
     * bottom.
     * </pre>
     *
     * <code>bool is_at_top = 1;</code>
     * @return The isAtTop.
     */
    boolean getIsAtTop();
  }
  /**
   * <pre>
   * An indicator that the feed is loading.
   * </pre>
   *
   * Protobuf type {@code feedui.LoadingSpinnerSlice}
   */
  public  static final class LoadingSpinnerSlice extends
      com.google.protobuf.GeneratedMessageLite<
          LoadingSpinnerSlice, LoadingSpinnerSlice.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.LoadingSpinnerSlice)
      LoadingSpinnerSliceOrBuilder {
    private LoadingSpinnerSlice() {
    }
    public static final int IS_AT_TOP_FIELD_NUMBER = 1;
    private boolean isAtTop_;
    /**
     * <pre>
     * True if the spinner is at the top of the feed. Otherwise, it is at the
     * bottom.
     * </pre>
     *
     * <code>bool is_at_top = 1;</code>
     * @return The isAtTop.
     */
    @java.lang.Override
    public boolean getIsAtTop() {
      return isAtTop_;
    }
    /**
     * <pre>
     * True if the spinner is at the top of the feed. Otherwise, it is at the
     * bottom.
     * </pre>
     *
     * <code>bool is_at_top = 1;</code>
     * @param value The isAtTop to set.
     */
    private void setIsAtTop(boolean value) {
      
      isAtTop_ = value;
    }
    /**
     * <pre>
     * True if the spinner is at the top of the feed. Otherwise, it is at the
     * bottom.
     * </pre>
     *
     * <code>bool is_at_top = 1;</code>
     */
    private void clearIsAtTop() {
      
      isAtTop_ = false;
    }

    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * An indicator that the feed is loading.
     * </pre>
     *
     * Protobuf type {@code feedui.LoadingSpinnerSlice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.LoadingSpinnerSlice)
        org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSliceOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * True if the spinner is at the top of the feed. Otherwise, it is at the
       * bottom.
       * </pre>
       *
       * <code>bool is_at_top = 1;</code>
       * @return The isAtTop.
       */
      @java.lang.Override
      public boolean getIsAtTop() {
        return instance.getIsAtTop();
      }
      /**
       * <pre>
       * True if the spinner is at the top of the feed. Otherwise, it is at the
       * bottom.
       * </pre>
       *
       * <code>bool is_at_top = 1;</code>
       * @param value The isAtTop to set.
       * @return This builder for chaining.
       */
      public Builder setIsAtTop(boolean value) {
        copyOnWrite();
        instance.setIsAtTop(value);
        return this;
      }
      /**
       * <pre>
       * True if the spinner is at the top of the feed. Otherwise, it is at the
       * bottom.
       * </pre>
       *
       * <code>bool is_at_top = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAtTop() {
        copyOnWrite();
        instance.clearIsAtTop();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.LoadingSpinnerSlice)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "isAtTop_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.LoadingSpinnerSlice)
    private static final org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice DEFAULT_INSTANCE;
    static {
      LoadingSpinnerSlice defaultInstance = new LoadingSpinnerSlice();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LoadingSpinnerSlice.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.LoadingSpinnerSlice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LoadingSpinnerSlice> PARSER;

    public static com.google.protobuf.Parser<LoadingSpinnerSlice> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface XSurfaceSliceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.XSurfaceSlice)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes xsurface_frame = 1;</code>
     * @return The xsurfaceFrame.
     */
    com.google.protobuf.ByteString getXsurfaceFrame();
  }
  /**
   * Protobuf type {@code feedui.XSurfaceSlice}
   */
  public  static final class XSurfaceSlice extends
      com.google.protobuf.GeneratedMessageLite<
          XSurfaceSlice, XSurfaceSlice.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.XSurfaceSlice)
      XSurfaceSliceOrBuilder {
    private XSurfaceSlice() {
      xsurfaceFrame_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int XSURFACE_FRAME_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString xsurfaceFrame_;
    /**
     * <code>bytes xsurface_frame = 1;</code>
     * @return The xsurfaceFrame.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getXsurfaceFrame() {
      return xsurfaceFrame_;
    }
    /**
     * <code>bytes xsurface_frame = 1;</code>
     * @param value The xsurfaceFrame to set.
     */
    private void setXsurfaceFrame(com.google.protobuf.ByteString value) {
      value.getClass();
  
      xsurfaceFrame_ = value;
    }
    /**
     * <code>bytes xsurface_frame = 1;</code>
     */
    private void clearXsurfaceFrame() {
      
      xsurfaceFrame_ = getDefaultInstance().getXsurfaceFrame();
    }

    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code feedui.XSurfaceSlice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.XSurfaceSlice)
        org.chromium.components.feed.proto.FeedUiProto.XSurfaceSliceOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes xsurface_frame = 1;</code>
       * @return The xsurfaceFrame.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getXsurfaceFrame() {
        return instance.getXsurfaceFrame();
      }
      /**
       * <code>bytes xsurface_frame = 1;</code>
       * @param value The xsurfaceFrame to set.
       * @return This builder for chaining.
       */
      public Builder setXsurfaceFrame(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setXsurfaceFrame(value);
        return this;
      }
      /**
       * <code>bytes xsurface_frame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearXsurfaceFrame() {
        copyOnWrite();
        instance.clearXsurfaceFrame();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.XSurfaceSlice)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "xsurfaceFrame_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.XSurfaceSlice)
    private static final org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice DEFAULT_INSTANCE;
    static {
      XSurfaceSlice defaultInstance = new XSurfaceSlice();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        XSurfaceSlice.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.XSurfaceSlice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<XSurfaceSlice> PARSER;

    public static com.google.protobuf.Parser<XSurfaceSlice> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SharedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feedui.SharedState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>bytes xsurface_shared_state = 2;</code>
     * @return The xsurfaceSharedState.
     */
    com.google.protobuf.ByteString getXsurfaceSharedState();
  }
  /**
   * <pre>
   * Wraps an XSurface shared state with a unique ID.
   * </pre>
   *
   * Protobuf type {@code feedui.SharedState}
   */
  public  static final class SharedState extends
      com.google.protobuf.GeneratedMessageLite<
          SharedState, SharedState.Builder> implements
      // @@protoc_insertion_point(message_implements:feedui.SharedState)
      SharedStateOrBuilder {
    private SharedState() {
      id_ = "";
      xsurfaceSharedState_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.String id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <code>string id = 1;</code>
     * @param value The id to set.
     */
    private void setId(
        java.lang.String value) {
      value.getClass();
  
      id_ = value;
    }
    /**
     * <code>string id = 1;</code>
     */
    private void clearId() {
      
      id_ = getDefaultInstance().getId();
    }
    /**
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      id_ = value.toStringUtf8();
      
    }

    public static final int XSURFACE_SHARED_STATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString xsurfaceSharedState_;
    /**
     * <code>bytes xsurface_shared_state = 2;</code>
     * @return The xsurfaceSharedState.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getXsurfaceSharedState() {
      return xsurfaceSharedState_;
    }
    /**
     * <code>bytes xsurface_shared_state = 2;</code>
     * @param value The xsurfaceSharedState to set.
     */
    private void setXsurfaceSharedState(com.google.protobuf.ByteString value) {
      value.getClass();
  
      xsurfaceSharedState_ = value;
    }
    /**
     * <code>bytes xsurface_shared_state = 2;</code>
     */
    private void clearXsurfaceSharedState() {
      
      xsurfaceSharedState_ = getDefaultInstance().getXsurfaceSharedState();
    }

    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.proto.FeedUiProto.SharedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.proto.FeedUiProto.SharedState prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Wraps an XSurface shared state with a unique ID.
     * </pre>
     *
     * Protobuf type {@code feedui.SharedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.proto.FeedUiProto.SharedState, Builder> implements
        // @@protoc_insertion_point(builder_implements:feedui.SharedState)
        org.chromium.components.feed.proto.FeedUiProto.SharedStateOrBuilder {
      // Construct using org.chromium.components.feed.proto.FeedUiProto.SharedState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       * <code>bytes xsurface_shared_state = 2;</code>
       * @return The xsurfaceSharedState.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getXsurfaceSharedState() {
        return instance.getXsurfaceSharedState();
      }
      /**
       * <code>bytes xsurface_shared_state = 2;</code>
       * @param value The xsurfaceSharedState to set.
       * @return This builder for chaining.
       */
      public Builder setXsurfaceSharedState(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setXsurfaceSharedState(value);
        return this;
      }
      /**
       * <code>bytes xsurface_shared_state = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearXsurfaceSharedState() {
        copyOnWrite();
        instance.clearXsurfaceSharedState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:feedui.SharedState)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.proto.FeedUiProto.SharedState();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "id_",
              "xsurfaceSharedState_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.proto.FeedUiProto.SharedState> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.proto.FeedUiProto.SharedState.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.proto.FeedUiProto.SharedState>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:feedui.SharedState)
    private static final org.chromium.components.feed.proto.FeedUiProto.SharedState DEFAULT_INSTANCE;
    static {
      SharedState defaultInstance = new SharedState();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SharedState.class, defaultInstance);
    }

    public static org.chromium.components.feed.proto.FeedUiProto.SharedState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SharedState> PARSER;

    public static com.google.protobuf.Parser<SharedState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
