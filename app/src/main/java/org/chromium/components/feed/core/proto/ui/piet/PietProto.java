// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/piet/piet.proto

package org.chromium.components.feed.core.proto.ui.piet;

public final class PietProto {
  private PietProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FrameOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Frame)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                Frame, Frame.Builder> {

    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return Whether the tag field is set.
     */
    boolean hasTag();
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return The tag.
     */
    java.lang.String getTag();
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return The bytes for tag.
     */
    com.google.protobuf.ByteString
        getTagBytes();

    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return Whether the stylesheetId field is set.
     */
    @java.lang.Deprecated boolean hasStylesheetId();
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The stylesheetId.
     */
    @java.lang.Deprecated java.lang.String getStylesheetId();
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The bytes for stylesheetId.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     * @return Whether the stylesheet field is set.
     */
    @java.lang.Deprecated boolean hasStylesheet();
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     * @return The stylesheet.
     */
    @java.lang.Deprecated org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet();

    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     * @return Whether the stylesheets field is set.
     */
    boolean hasStylesheets();
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     * @return The stylesheets.
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets();

    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     * @return Whether the styleReferences field is set.
     */
    boolean hasStyleReferences();
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     * @return The styleReferences.
     */
    org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences();

    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> 
        getTemplatesList();
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index);
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    int getTemplatesCount();

    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> 
        getContentsList();
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content getContents(int index);
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    int getContentsCount();

    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     * @return Whether the actions field is set.
     */
    boolean hasActions();
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     * @return The actions.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions();

    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     * @return Whether the logData field is set.
     */
    boolean hasLogData();
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     * @return The logData.
     */
    org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData getLogData();

    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame.FrameStyleScopeCase getFrameStyleScopeCase();
  }
  /**
   * <pre>
   * A Frame is the top-level UI construct in Piet. Every layout is contained
   * within a Frame. Each frame defines the contents displayed to the user as a
   * single view, which may contain a complex set of child views.
   * NextId: 13
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Frame}
   */
  public  static final class Frame extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Frame, Frame.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Frame)
      FrameOrBuilder {
    private Frame() {
      tag_ = "";
      templates_ = emptyProtobufList();
      contents_ = emptyProtobufList();
    }
    private int bitField0_;
    private int frameStyleScopeCase_ = 0;
    private java.lang.Object frameStyleScope_;
    public enum FrameStyleScopeCase {
      STYLESHEET_ID(2),
      STYLESHEET(3),
      FRAMESTYLESCOPE_NOT_SET(0);
      private final int value;
      private FrameStyleScopeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FrameStyleScopeCase valueOf(int value) {
        return forNumber(value);
      }

      public static FrameStyleScopeCase forNumber(int value) {
        switch (value) {
          case 2: return STYLESHEET_ID;
          case 3: return STYLESHEET;
          case 0: return FRAMESTYLESCOPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public FrameStyleScopeCase
    getFrameStyleScopeCase() {
      return FrameStyleScopeCase.forNumber(
          frameStyleScopeCase_);
    }

    private void clearFrameStyleScope() {
      frameStyleScopeCase_ = 0;
      frameStyleScope_ = null;
    }

    public static final int TAG_FIELD_NUMBER = 1;
    private java.lang.String tag_;
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return The tag.
     */
    @java.lang.Override
    public java.lang.String getTag() {
      return tag_;
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @return The bytes for tag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTagBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(tag_);
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @param value The tag to set.
     */
    private void setTag(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      tag_ = value;
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    private void clearTag() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tag_ = getDefaultInstance().getTag();
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     * @param value The bytes for tag to set.
     */
    private void setTagBytes(
        com.google.protobuf.ByteString value) {
      tag_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int STYLESHEET_ID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return Whether the stylesheetId field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasStylesheetId() {
      return frameStyleScopeCase_ == 2;
    }
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The stylesheetId.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getStylesheetId() {
      java.lang.String ref = "";
      if (frameStyleScopeCase_ == 2) {
        ref = (java.lang.String) frameStyleScope_;
      }
      return ref;
    }
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The bytes for stylesheetId.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      java.lang.String ref = "";
      if (frameStyleScopeCase_ == 2) {
        ref = (java.lang.String) frameStyleScope_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @param value The stylesheetId to set.
     */
    private void setStylesheetId(
        java.lang.String value) {
      value.getClass();
  frameStyleScopeCase_ = 2;
      frameStyleScope_ = value;
    }
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     */
    private void clearStylesheetId() {
      if (frameStyleScopeCase_ == 2) {
        frameStyleScopeCase_ = 0;
        frameStyleScope_ = null;
      }
    }
    /**
     * <pre>
     * If this is defined, the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @param value The bytes for stylesheetId to set.
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      frameStyleScope_ = value.toStringUtf8();
      frameStyleScopeCase_ = 2;
    }

    public static final int STYLESHEET_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasStylesheet() {
      return frameStyleScopeCase_ == 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet() {
      if (frameStyleScopeCase_ == 3) {
         return (org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet) frameStyleScope_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.getDefaultInstance();
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void setStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  frameStyleScope_ = value;
      frameStyleScopeCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void mergeStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  if (frameStyleScopeCase_ == 3 &&
          frameStyleScope_ != org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.getDefaultInstance()) {
        frameStyleScope_ = org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.newBuilder((org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet) frameStyleScope_)
            .mergeFrom(value).buildPartial();
      } else {
        frameStyleScope_ = value;
      }
      frameStyleScopeCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void clearStylesheet() {
      if (frameStyleScopeCase_ == 3) {
        frameStyleScopeCase_ = 0;
        frameStyleScope_ = null;
      }
    }

    public static final int STYLESHEETS_FIELD_NUMBER = 11;
    private org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets stylesheets_;
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.Override
    public boolean hasStylesheets() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets() {
      return stylesheets_ == null ? org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.getDefaultInstance() : stylesheets_;
    }
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    private void setStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
      value.getClass();
  stylesheets_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
      value.getClass();
  if (stylesheets_ != null &&
          stylesheets_ != org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.getDefaultInstance()) {
        stylesheets_ =
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.newBuilder(stylesheets_).mergeFrom(value).buildPartial();
      } else {
        stylesheets_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Defines the Stylesheets used by this Frame.
     * NOTE: Styles from this Stylesheet are not available to Templates; they can
     * only be used by Elements defined directly in this Frame itself, such as
     * non-template Content. This limitation is a performance optimization that
     * makes view recycling efficient. This applies to both the inlined
     * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    private void clearStylesheets() {  stylesheets_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int STYLE_REFERENCES_FIELD_NUMBER = 4;
    private org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack styleReferences_;
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    @java.lang.Override
    public boolean hasStyleReferences() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
      return styleReferences_ == null ? org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : styleReferences_;
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  styleReferences_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  if (styleReferences_ != null &&
          styleReferences_ != org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        styleReferences_ =
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.newBuilder(styleReferences_).mergeFrom(value).buildPartial();
      } else {
        styleReferences_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void clearStyleReferences() {  styleReferences_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int TEMPLATES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> templates_;
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> getTemplatesList() {
      return templates_;
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.TemplateOrBuilder> 
        getTemplatesOrBuilderList() {
      return templates_;
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    @java.lang.Override
    public int getTemplatesCount() {
      return templates_.size();
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index) {
      return templates_.get(index);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.TemplateOrBuilder getTemplatesOrBuilder(
        int index) {
      return templates_.get(index);
    }
    private void ensureTemplatesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> tmp = templates_;
      if (!tmp.isModifiable()) {
        templates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void setTemplates(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.set(index, value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.add(value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.add(index, value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void addAllTemplates(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> values) {
      ensureTemplatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, templates_);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void clearTemplates() {
      templates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
     */
    private void removeTemplates(int index) {
      ensureTemplatesIsMutable();
      templates_.remove(index);
    }

    public static final int CONTENTS_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> contents_;
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> getContentsList() {
      return contents_;
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.ElementsProto.ContentOrBuilder> 
        getContentsOrBuilderList() {
      return contents_;
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    @java.lang.Override
    public int getContentsCount() {
      return contents_.size();
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content getContents(int index) {
      return contents_.get(index);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.ContentOrBuilder getContentsOrBuilder(
        int index) {
      return contents_.get(index);
    }
    private void ensureContentsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> tmp = contents_;
      if (!tmp.isModifiable()) {
        contents_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void setContents(
        int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
      value.getClass();
  ensureContentsIsMutable();
      contents_.set(index, value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void addContents(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
      value.getClass();
  ensureContentsIsMutable();
      contents_.add(value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void addContents(
        int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
      value.getClass();
  ensureContentsIsMutable();
      contents_.add(index, value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void addAllContents(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> values) {
      ensureContentsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, contents_);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void clearContents() {
      contents_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
     */
    private void removeContents(int index) {
      ensureContentsIsMutable();
      contents_.remove(index);
    }

    public static final int ACTIONS_FIELD_NUMBER = 7;
    private org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions actions_;
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     */
    @java.lang.Override
    public boolean hasActions() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions() {
      return actions_ == null ? org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.getDefaultInstance() : actions_;
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     */
    private void setActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
      value.getClass();
  actions_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
      value.getClass();
  if (actions_ != null &&
          actions_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.getDefaultInstance()) {
        actions_ =
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.newBuilder(actions_).mergeFrom(value).buildPartial();
      } else {
        actions_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
     */
    private void clearActions() {  actions_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int LOG_DATA_FIELD_NUMBER = 12;
    private org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData logData_;
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     */
    @java.lang.Override
    public boolean hasLogData() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData getLogData() {
      return logData_ == null ? org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData.getDefaultInstance() : logData_;
    }
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     */
    private void setLogData(org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData value) {
      value.getClass();
  logData_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLogData(org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData value) {
      value.getClass();
  if (logData_ != null &&
          logData_ != org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData.getDefaultInstance()) {
        logData_ =
          org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData.newBuilder(logData_).mergeFrom(value).buildPartial();
      } else {
        logData_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <pre>
     * Data used for logging info sent to the host.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
     */
    private void clearLogData() {  logData_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A Frame is the top-level UI construct in Piet. Every layout is contained
     * within a Frame. Each frame defines the contents displayed to the user as a
     * single view, which may contain a complex set of child views.
     * NextId: 13
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Frame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Frame)
        org.chromium.components.feed.core.proto.ui.piet.PietProto.FrameOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public FrameStyleScopeCase
          getFrameStyleScopeCase() {
        return instance.getFrameStyleScopeCase();
      }

      public Builder clearFrameStyleScope() {
        copyOnWrite();
        instance.clearFrameStyleScope();
        return this;
      }


      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @return Whether the tag field is set.
       */
      @java.lang.Override
      public boolean hasTag() {
        return instance.hasTag();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @return The tag.
       */
      @java.lang.Override
      public java.lang.String getTag() {
        return instance.getTag();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @return The bytes for tag.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTagBytes() {
        return instance.getTagBytes();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @param value The tag to set.
       * @return This builder for chaining.
       */
      public Builder setTag(
          java.lang.String value) {
        copyOnWrite();
        instance.setTag(value);
        return this;
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTag() {
        copyOnWrite();
        instance.clearTag();
        return this;
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       * @param value The bytes for tag to set.
       * @return This builder for chaining.
       */
      public Builder setTagBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTagBytes(value);
        return this;
      }

      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return Whether the stylesheetId field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return The stylesheetId.
       */
      @java.lang.Override
      @java.lang.Deprecated public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return The bytes for stylesheetId.
       */
      @java.lang.Override
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @param value The stylesheetId to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * If this is defined, the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @param value The bytes for stylesheetId to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasStylesheet() {
        return instance.hasStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet() {
        return instance.getStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setStylesheet(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheet(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder mergeStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.mergeStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearStylesheet() {
        copyOnWrite();
        instance.clearStylesheet();
        return this;
      }

      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      @java.lang.Override
      public boolean hasStylesheets() {
        return instance.hasStylesheets();
      }
      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets() {
        return instance.getStylesheets();
      }
      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder setStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
        copyOnWrite();
        instance.setStylesheets(value);
        return this;
        }
      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder setStylesheets(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheets(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder mergeStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
        copyOnWrite();
        instance.mergeStylesheets(value);
        return this;
      }
      /**
       * <pre>
       * Defines the Stylesheets used by this Frame.
       * NOTE: Styles from this Stylesheet are not available to Templates; they can
       * only be used by Elements defined directly in this Frame itself, such as
       * non-template Content. This limitation is a performance optimization that
       * makes view recycling efficient. This applies to both the inlined
       * Stylesheets and stylesheet_id's referencing a PietSharedState Stylesheet.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder clearStylesheets() {  copyOnWrite();
        instance.clearStylesheets();
        return this;
      }

      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      @java.lang.Override
      public boolean hasStyleReferences() {
        return instance.hasStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
        return instance.getStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setStyleReferences(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder setStyleReferences(
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setStyleReferences(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeStyleReferences(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder clearStyleReferences() {  copyOnWrite();
        instance.clearStyleReferences();
        return this;
      }

      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> getTemplatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getTemplatesList());
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      @java.lang.Override
      public int getTemplatesCount() {
        return instance.getTemplatesCount();
      }/**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index) {
        return instance.getTemplates(index);
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder setTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.setTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder setTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.setTemplates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder addAllTemplates(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> values) {
        copyOnWrite();
        instance.addAllTemplates(values);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder clearTemplates() {
        copyOnWrite();
        instance.clearTemplates();
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 5;</code>
       */
      public Builder removeTemplates(int index) {
        copyOnWrite();
        instance.removeTemplates(index);
        return this;
      }

      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> getContentsList() {
        return java.util.Collections.unmodifiableList(
            instance.getContentsList());
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      @java.lang.Override
      public int getContentsCount() {
        return instance.getContentsCount();
      }/**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content getContents(int index) {
        return instance.getContents(index);
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder setContents(
          int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.setContents(index, value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder setContents(
          int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.setContents(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.addContents(value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.addContents(index, value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.addContents(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          int index, org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.addContents(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder addAllContents(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content> values) {
        copyOnWrite();
        instance.addAllContents(values);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder clearContents() {
        copyOnWrite();
        instance.clearContents();
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Content contents = 10;</code>
       */
      public Builder removeContents(int index) {
        copyOnWrite();
        instance.removeContents(index);
        return this;
      }

      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      @java.lang.Override
      public boolean hasActions() {
        return instance.hasActions();
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions() {
        return instance.getActions();
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      public Builder setActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.setActions(value);
        return this;
        }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      public Builder setActions(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.Builder builderForValue) {
        copyOnWrite();
        instance.setActions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      public Builder mergeActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.mergeActions(value);
        return this;
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Actions actions = 7;</code>
       */
      public Builder clearActions() {  copyOnWrite();
        instance.clearActions();
        return this;
      }

      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      @java.lang.Override
      public boolean hasLogData() {
        return instance.hasLogData();
      }
      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData getLogData() {
        return instance.getLogData();
      }
      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      public Builder setLogData(org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData value) {
        copyOnWrite();
        instance.setLogData(value);
        return this;
        }
      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      public Builder setLogData(
          org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData.Builder builderForValue) {
        copyOnWrite();
        instance.setLogData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      public Builder mergeLogData(org.chromium.components.feed.core.proto.ui.piet.LogDataProto.LogData value) {
        copyOnWrite();
        instance.mergeLogData(value);
        return this;
      }
      /**
       * <pre>
       * Data used for logging info sent to the host.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.LogData log_data = 12;</code>
       */
      public Builder clearLogData() {  copyOnWrite();
        instance.clearLogData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Frame)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "frameStyleScope_",
              "frameStyleScopeCase_",
              "bitField0_",
              "tag_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.class,
              "styleReferences_",
              "templates_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.class,
              "actions_",
              "contents_",
              org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Content.class,
              "stylesheets_",
              "logData_",
            };
            java.lang.String info =
                "\u0001\t\u0001\u0001\u0001\f\t\u0000\u0002\u0007\u0001\u1008\u0000\u0002\u103b\u0000" +
                "\u0003\u143c\u0000\u0004\u1409\u0004\u0005\u041b\u0007\u1409\u0005\n\u041b\u000b" +
                "\u1409\u0003\f\u1409\u0006";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Frame)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame DEFAULT_INSTANCE;
    static {
      Frame defaultInstance = new Frame();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Frame.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Frame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Frame> PARSER;

    public static com.google.protobuf.Parser<Frame> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StylesheetsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Stylesheets)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @return A list containing the stylesheetIds.
     */
    java.util.List<java.lang.String>
        getStylesheetIdsList();
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @return The count of stylesheetIds.
     */
    int getStylesheetIdsCount();
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The stylesheetIds at the given index.
     */
    java.lang.String getStylesheetIds(int index);
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The stylesheetIds at the given index.
     */
    com.google.protobuf.ByteString
        getStylesheetIdsBytes(int index);

    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> 
        getStylesheetsList();
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index);
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    int getStylesheetsCount();
  }
  /**
   * <pre>
   * UI Elements in a Frame or Template use a Stylesheet to resolve the Styles
   * that define their appearance. The Stylesheet is constructed by combining
   * Styles from any Stylesheets referenced here; Stylesheets can by directly
   * inlined, or referenced from the global shared state in PietSharedState.
   * Piet will report ERR_DUPLICATE_STYLE if multiple Styles across any of the
   * Stylesheets have the same style id (after MediaQueryCondition filtering).
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Stylesheets}
   */
  public  static final class Stylesheets extends
      com.google.protobuf.GeneratedMessageLite<
          Stylesheets, Stylesheets.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Stylesheets)
      StylesheetsOrBuilder {
    private Stylesheets() {
      stylesheetIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      stylesheets_ = emptyProtobufList();
    }
    public static final int STYLESHEET_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> stylesheetIds_;
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @return A list containing the stylesheetIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getStylesheetIdsList() {
      return stylesheetIds_;
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @return The count of stylesheetIds.
     */
    @java.lang.Override
    public int getStylesheetIdsCount() {
      return stylesheetIds_.size();
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The stylesheetIds at the given index.
     */
    @java.lang.Override
    public java.lang.String getStylesheetIds(int index) {
      return stylesheetIds_.get(index);
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the stylesheetIds at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStylesheetIdsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          stylesheetIds_.get(index));
    }
    private void ensureStylesheetIdsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          stylesheetIds_;  if (!tmp.isModifiable()) {
        stylesheetIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The stylesheetIds to set.
     */
    private void setStylesheetIds(
        int index, java.lang.String value) {
      value.getClass();
  ensureStylesheetIdsIsMutable();
      stylesheetIds_.set(index, value);
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param value The stylesheetIds to add.
     */
    private void addStylesheetIds(
        java.lang.String value) {
      value.getClass();
  ensureStylesheetIdsIsMutable();
      stylesheetIds_.add(value);
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param values The stylesheetIds to add.
     */
    private void addAllStylesheetIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureStylesheetIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stylesheetIds_);
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     */
    private void clearStylesheetIds() {
      stylesheetIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Stylesheets to be fetched from the global PietSharedState.
     * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated string stylesheet_ids = 1;</code>
     * @param value The bytes of the stylesheetIds to add.
     */
    private void addStylesheetIdsBytes(
        com.google.protobuf.ByteString value) {
      ensureStylesheetIdsIsMutable();
      stylesheetIds_.add(value.toStringUtf8());
    }

    public static final int STYLESHEETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> stylesheets_;
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetOrBuilder> 
        getStylesheetsOrBuilderList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    @java.lang.Override
    public int getStylesheetsCount() {
      return stylesheets_.size();
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
      return stylesheets_.get(index);
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetOrBuilder getStylesheetsOrBuilder(
        int index) {
      return stylesheets_.get(index);
    }
    private void ensureStylesheetsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> tmp = stylesheets_;
      if (!tmp.isModifiable()) {
        stylesheets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void setStylesheets(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.set(index, value);
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void addStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.add(value);
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void addStylesheets(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.add(index, value);
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void addAllStylesheets(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> values) {
      ensureStylesheetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stylesheets_);
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void clearStylesheets() {
      stylesheets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Inline Stylesheets. These can be filtered by MediaQueryCondition.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
     */
    private void removeStylesheets(int index) {
      ensureStylesheetsIsMutable();
      stylesheets_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * UI Elements in a Frame or Template use a Stylesheet to resolve the Styles
     * that define their appearance. The Stylesheet is constructed by combining
     * Styles from any Stylesheets referenced here; Stylesheets can by directly
     * inlined, or referenced from the global shared state in PietSharedState.
     * Piet will report ERR_DUPLICATE_STYLE if multiple Styles across any of the
     * Stylesheets have the same style id (after MediaQueryCondition filtering).
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Stylesheets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Stylesheets)
        org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetsOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @return A list containing the stylesheetIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getStylesheetIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesheetIdsList());
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @return The count of stylesheetIds.
       */
      @java.lang.Override
      public int getStylesheetIdsCount() {
        return instance.getStylesheetIdsCount();
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The stylesheetIds at the given index.
       */
      @java.lang.Override
      public java.lang.String getStylesheetIds(int index) {
        return instance.getStylesheetIds(index);
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the stylesheetIds at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStylesheetIdsBytes(int index) {
        return instance.getStylesheetIdsBytes(index);
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param index The index to set the value at.
       * @param value The stylesheetIds to set.
       * @return This builder for chaining.
       */
      public Builder setStylesheetIds(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param value The stylesheetIds to add.
       * @return This builder for chaining.
       */
      public Builder addStylesheetIds(
          java.lang.String value) {
        copyOnWrite();
        instance.addStylesheetIds(value);
        return this;
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param values The stylesheetIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllStylesheetIds(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllStylesheetIds(values);
        return this;
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStylesheetIds() {
        copyOnWrite();
        instance.clearStylesheetIds();
        return this;
      }
      /**
       * <pre>
       * Stylesheets to be fetched from the global PietSharedState.
       * If a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated string stylesheet_ids = 1;</code>
       * @param value The bytes of the stylesheetIds to add.
       * @return This builder for chaining.
       */
      public Builder addStylesheetIdsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addStylesheetIdsBytes(value);
        return this;
      }

      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesheetsList());
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      @java.lang.Override
      public int getStylesheetsCount() {
        return instance.getStylesheetsCount();
      }/**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
        return instance.getStylesheets(index);
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder setStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder setStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder addStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(value);
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder addStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder addStylesheets(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder addStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder addAllStylesheets(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> values) {
        copyOnWrite();
        instance.addAllStylesheets(values);
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder clearStylesheets() {
        copyOnWrite();
        instance.clearStylesheets();
        return this;
      }
      /**
       * <pre>
       * Inline Stylesheets. These can be filtered by MediaQueryCondition.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 2;</code>
       */
      public Builder removeStylesheets(int index) {
        copyOnWrite();
        instance.removeStylesheets(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Stylesheets)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stylesheetIds_",
              "stylesheets_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0001\u0001\u001a\u0002\u041b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Stylesheets)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets DEFAULT_INSTANCE;
    static {
      Stylesheets defaultInstance = new Stylesheets();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Stylesheets.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Stylesheets> PARSER;

    public static com.google.protobuf.Parser<Stylesheets> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StylesheetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Stylesheet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return Whether the stylesheetId field is set.
     */
    boolean hasStylesheetId();
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return The stylesheetId.
     */
    java.lang.String getStylesheetId();
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return The bytes for stylesheetId.
     */
    com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> 
        getStylesList();
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style getStyles(int index);
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    int getStylesCount();

    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> 
        getConditionsList();
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index);
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    int getConditionsCount();
  }
  /**
   * <pre>
   * A set of Styles; each Style must have a style_id that is unique within this
   * Stylesheet. If the same style_id is found twice, ERR_DUPLICATE_STYLES is
   * raised. Stylesheet is scoped to Frames or Templates. When a UI element uses a
   * Style, it is looked up in the Stylesheet within scope. If the style cannot be
   * found, ERR_MISSING_STYLES is raised.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Stylesheet}
   */
  public  static final class Stylesheet extends
      com.google.protobuf.GeneratedMessageLite<
          Stylesheet, Stylesheet.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Stylesheet)
      StylesheetOrBuilder {
    private Stylesheet() {
      stylesheetId_ = "";
      styles_ = emptyProtobufList();
      conditions_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STYLESHEET_ID_FIELD_NUMBER = 1;
    private java.lang.String stylesheetId_;
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return Whether the stylesheetId field is set.
     */
    @java.lang.Override
    public boolean hasStylesheetId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return The stylesheetId.
     */
    @java.lang.Override
    public java.lang.String getStylesheetId() {
      return stylesheetId_;
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @return The bytes for stylesheetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stylesheetId_);
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @param value The stylesheetId to set.
     */
    private void setStylesheetId(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      stylesheetId_ = value;
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    private void clearStylesheetId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      stylesheetId_ = getDefaultInstance().getStylesheetId();
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     * @param value The bytes for stylesheetId to set.
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      stylesheetId_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int STYLES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> styles_;
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> getStylesList() {
      return styles_;
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleOrBuilder> 
        getStylesOrBuilderList() {
      return styles_;
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    @java.lang.Override
    public int getStylesCount() {
      return styles_.size();
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style getStyles(int index) {
      return styles_.get(index);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleOrBuilder getStylesOrBuilder(
        int index) {
      return styles_.get(index);
    }
    private void ensureStylesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> tmp = styles_;
      if (!tmp.isModifiable()) {
        styles_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void setStyles(
        int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
      value.getClass();
  ensureStylesIsMutable();
      styles_.set(index, value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
      value.getClass();
  ensureStylesIsMutable();
      styles_.add(value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(
        int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
      value.getClass();
  ensureStylesIsMutable();
      styles_.add(index, value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void addAllStyles(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> values) {
      ensureStylesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, styles_);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void clearStyles() {
      styles_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
     */
    private void removeStyles(int index) {
      ensureStylesIsMutable();
      styles_.remove(index);
    }

    public static final int CONDITIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> conditions_;
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    @java.lang.Override
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }
    private void ensureConditionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> tmp = conditions_;
      if (!tmp.isModifiable()) {
        conditions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void setConditions(
        int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.set(index, value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.add(value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(
        int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.add(index, value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addAllConditions(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
      ensureConditionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, conditions_);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void clearConditions() {
      conditions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void removeConditions(int index) {
      ensureConditionsIsMutable();
      conditions_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A set of Styles; each Style must have a style_id that is unique within this
     * Stylesheet. If the same style_id is found twice, ERR_DUPLICATE_STYLES is
     * raised. Stylesheet is scoped to Frames or Templates. When a UI element uses a
     * Style, it is looked up in the Stylesheet within scope. If the style cannot be
     * found, ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Stylesheet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Stylesheet)
        org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @return Whether the stylesheetId field is set.
       */
      @java.lang.Override
      public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @return The stylesheetId.
       */
      @java.lang.Override
      public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @return The bytes for stylesheetId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @param value The stylesheetId to set.
       * @return This builder for chaining.
       */
      public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       * @param value The bytes for stylesheetId to set.
       * @return This builder for chaining.
       */
      public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> getStylesList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesList());
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      @java.lang.Override
      public int getStylesCount() {
        return instance.getStylesCount();
      }/**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style getStyles(int index) {
        return instance.getStyles(index);
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder setStyles(
          int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.setStyles(index, value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder setStyles(
          int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.setStyles(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.addStyles(value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.addStyles(index, value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.addStyles(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          int index, org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.addStyles(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder addAllStyles(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style> values) {
        copyOnWrite();
        instance.addAllStyles(values);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder clearStyles() {
        copyOnWrite();
        instance.clearStyles();
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Style styles = 2;</code>
       */
      public Builder removeStyles(int index) {
        copyOnWrite();
        instance.removeStyles(index);
        return this;
      }

      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getConditionsList());
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      @java.lang.Override
      public int getConditionsCount() {
        return instance.getConditionsCount();
      }/**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
        return instance.getConditions(index);
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder setConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.setConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder setConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setConditions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
        copyOnWrite();
        instance.addAllConditions(values);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder clearConditions() {
        copyOnWrite();
        instance.clearConditions();
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder removeConditions(int index) {
        copyOnWrite();
        instance.removeConditions(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Stylesheet)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "stylesheetId_",
              "styles_",
              org.chromium.components.feed.core.proto.ui.piet.StylesProto.Style.class,
              "conditions_",
              org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0002\u0001\u0001\u1008\u0000\u0002" +
                "\u041b\u0003\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Stylesheet)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet DEFAULT_INSTANCE;
    static {
      Stylesheet defaultInstance = new Stylesheet();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Stylesheet.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Stylesheet> PARSER;

    public static com.google.protobuf.Parser<Stylesheet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TemplateOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Template)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                Template, Template.Builder> {

    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return Whether the templateId field is set.
     */
    boolean hasTemplateId();
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return The templateId.
     */
    java.lang.String getTemplateId();
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return The bytes for templateId.
     */
    com.google.protobuf.ByteString
        getTemplateIdBytes();

    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return Whether the stylesheetId field is set.
     */
    @java.lang.Deprecated boolean hasStylesheetId();
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The stylesheetId.
     */
    @java.lang.Deprecated java.lang.String getStylesheetId();
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The bytes for stylesheetId.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     * @return Whether the stylesheet field is set.
     */
    @java.lang.Deprecated boolean hasStylesheet();
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     * @return The stylesheet.
     */
    @java.lang.Deprecated org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet();

    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     * @return Whether the stylesheets field is set.
     */
    boolean hasStylesheets();
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     * @return The stylesheets.
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets();

    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     * @return Whether the childDefaultStyleIds field is set.
     */
    @java.lang.Deprecated boolean hasChildDefaultStyleIds();
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     * @return The childDefaultStyleIds.
     */
    @java.lang.Deprecated org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds();

    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     * @return Whether the element field is set.
     */
    boolean hasElement();
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     * @return The element.
     */
    org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element getElement();

    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> 
        getConditionsList();
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index);
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    int getConditionsCount();

    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.TemplateStylesheetCase getTemplateStylesheetCase();
  }
  /**
   * <pre>
   * A Template defines a reusable ElementList. The content is data-bound from
   * Bindings in the TemplateInvocation. Templates allow consistent creation of
   * elements using bound data. For example, table rows with different values, or
   * GridCells with different data values.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Template}
   */
  public  static final class Template extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Template, Template.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Template)
      TemplateOrBuilder {
    private Template() {
      templateId_ = "";
      conditions_ = emptyProtobufList();
    }
    private int bitField0_;
    private int templateStylesheetCase_ = 0;
    private java.lang.Object templateStylesheet_;
    public enum TemplateStylesheetCase {
      STYLESHEET_ID(2),
      STYLESHEET(3),
      TEMPLATESTYLESHEET_NOT_SET(0);
      private final int value;
      private TemplateStylesheetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TemplateStylesheetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TemplateStylesheetCase forNumber(int value) {
        switch (value) {
          case 2: return STYLESHEET_ID;
          case 3: return STYLESHEET;
          case 0: return TEMPLATESTYLESHEET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public TemplateStylesheetCase
    getTemplateStylesheetCase() {
      return TemplateStylesheetCase.forNumber(
          templateStylesheetCase_);
    }

    private void clearTemplateStylesheet() {
      templateStylesheetCase_ = 0;
      templateStylesheet_ = null;
    }

    public static final int TEMPLATE_ID_FIELD_NUMBER = 1;
    private java.lang.String templateId_;
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return Whether the templateId field is set.
     */
    @java.lang.Override
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return The templateId.
     */
    @java.lang.Override
    public java.lang.String getTemplateId() {
      return templateId_;
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @return The bytes for templateId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTemplateIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(templateId_);
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @param value The templateId to set.
     */
    private void setTemplateId(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      templateId_ = value;
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    private void clearTemplateId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      templateId_ = getDefaultInstance().getTemplateId();
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     * @param value The bytes for templateId to set.
     */
    private void setTemplateIdBytes(
        com.google.protobuf.ByteString value) {
      templateId_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int STYLESHEET_ID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return Whether the stylesheetId field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasStylesheetId() {
      return templateStylesheetCase_ == 2;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The stylesheetId.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getStylesheetId() {
      java.lang.String ref = "";
      if (templateStylesheetCase_ == 2) {
        ref = (java.lang.String) templateStylesheet_;
      }
      return ref;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @return The bytes for stylesheetId.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      java.lang.String ref = "";
      if (templateStylesheetCase_ == 2) {
        ref = (java.lang.String) templateStylesheet_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @param value The stylesheetId to set.
     */
    private void setStylesheetId(
        java.lang.String value) {
      value.getClass();
  templateStylesheetCase_ = 2;
      templateStylesheet_ = value;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     */
    private void clearStylesheetId() {
      if (templateStylesheetCase_ == 2) {
        templateStylesheetCase_ = 0;
        templateStylesheet_ = null;
      }
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>string stylesheet_id = 2 [deprecated = true];</code>
     * @param value The bytes for stylesheetId to set.
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      templateStylesheet_ = value.toStringUtf8();
      templateStylesheetCase_ = 2;
    }

    public static final int STYLESHEET_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasStylesheet() {
      return templateStylesheetCase_ == 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet() {
      if (templateStylesheetCase_ == 3) {
         return (org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet) templateStylesheet_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.getDefaultInstance();
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void setStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  templateStylesheet_ = value;
      templateStylesheetCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void mergeStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  if (templateStylesheetCase_ == 3 &&
          templateStylesheet_ != org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.getDefaultInstance()) {
        templateStylesheet_ = org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.newBuilder((org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet) templateStylesheet_)
            .mergeFrom(value).buildPartial();
      } else {
        templateStylesheet_ = value;
      }
      templateStylesheetCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * DEPRECATED: use stylesheets field instead.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
     */
    private void clearStylesheet() {
      if (templateStylesheetCase_ == 3) {
        templateStylesheetCase_ = 0;
        templateStylesheet_ = null;
      }
    }

    public static final int STYLESHEETS_FIELD_NUMBER = 11;
    private org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets stylesheets_;
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.Override
    public boolean hasStylesheets() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets() {
      return stylesheets_ == null ? org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.getDefaultInstance() : stylesheets_;
    }
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    private void setStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
      value.getClass();
  stylesheets_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
      value.getClass();
  if (stylesheets_ != null &&
          stylesheets_ != org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.getDefaultInstance()) {
        stylesheets_ =
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.newBuilder(stylesheets_).mergeFrom(value).buildPartial();
      } else {
        stylesheets_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * The Stylesheets used within this Template's scope.
     * - Styles from the Frame CANNOT be referenced from within a Template.
     * - Styles from the PietSharedState CAN be referenced, only if the
     *   stylesheet_id is defined by the Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
     */
    private void clearStylesheets() {  stylesheets_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int CHILD_DEFAULT_STYLE_IDS_FIELD_NUMBER = 4;
    private org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack childDefaultStyleIds_;
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasChildDefaultStyleIds() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds() {
      return childDefaultStyleIds_ == null ? org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : childDefaultStyleIds_;
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     */
    private void setChildDefaultStyleIds(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  childDefaultStyleIds_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeChildDefaultStyleIds(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  if (childDefaultStyleIds_ != null &&
          childDefaultStyleIds_ != org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        childDefaultStyleIds_ =
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.newBuilder(childDefaultStyleIds_).mergeFrom(value).buildPartial();
      } else {
        childDefaultStyleIds_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
     */
    private void clearChildDefaultStyleIds() {  childDefaultStyleIds_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int ELEMENT_FIELD_NUMBER = 6;
    private org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element element_;
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     */
    @java.lang.Override
    public boolean hasElement() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element getElement() {
      return element_ == null ? org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element.getDefaultInstance() : element_;
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     */
    private void setElement(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element value) {
      value.getClass();
  element_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeElement(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element value) {
      value.getClass();
  if (element_ != null &&
          element_ != org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element.getDefaultInstance()) {
        element_ =
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element.newBuilder(element_).mergeFrom(value).buildPartial();
      } else {
        element_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
     */
    private void clearElement() {  element_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int CONDITIONS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> conditions_;
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    @java.lang.Override
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }
    private void ensureConditionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> tmp = conditions_;
      if (!tmp.isModifiable()) {
        conditions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void setConditions(
        int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.set(index, value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.add(value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(
        int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      value.getClass();
  ensureConditionsIsMutable();
      conditions_.add(index, value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addAllConditions(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
      ensureConditionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, conditions_);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void clearConditions() {
      conditions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void removeConditions(int index) {
      ensureConditionsIsMutable();
      conditions_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietProto.Template prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A Template defines a reusable ElementList. The content is data-bound from
     * Bindings in the TemplateInvocation. Templates allow consistent creation of
     * elements using bound data. For example, table rows with different values, or
     * GridCells with different data values.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Template}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Template, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Template)
        org.chromium.components.feed.core.proto.ui.piet.PietProto.TemplateOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public TemplateStylesheetCase
          getTemplateStylesheetCase() {
        return instance.getTemplateStylesheetCase();
      }

      public Builder clearTemplateStylesheet() {
        copyOnWrite();
        instance.clearTemplateStylesheet();
        return this;
      }


      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @return Whether the templateId field is set.
       */
      @java.lang.Override
      public boolean hasTemplateId() {
        return instance.hasTemplateId();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @return The templateId.
       */
      @java.lang.Override
      public java.lang.String getTemplateId() {
        return instance.getTemplateId();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @return The bytes for templateId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTemplateIdBytes() {
        return instance.getTemplateIdBytes();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @param value The templateId to set.
       * @return This builder for chaining.
       */
      public Builder setTemplateId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTemplateId(value);
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemplateId() {
        copyOnWrite();
        instance.clearTemplateId();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       * @param value The bytes for templateId to set.
       * @return This builder for chaining.
       */
      public Builder setTemplateIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTemplateIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return Whether the stylesheetId field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return The stylesheetId.
       */
      @java.lang.Override
      @java.lang.Deprecated public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return The bytes for stylesheetId.
       */
      @java.lang.Override
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @param value The stylesheetId to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>string stylesheet_id = 2 [deprecated = true];</code>
       * @param value The bytes for stylesheetId to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasStylesheet() {
        return instance.hasStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheet() {
        return instance.getStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setStylesheet(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheet(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder mergeStylesheet(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.mergeStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * DEPRECATED: use stylesheets field instead.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Stylesheet stylesheet = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearStylesheet() {
        copyOnWrite();
        instance.clearStylesheet();
        return this;
      }

      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      @java.lang.Override
      public boolean hasStylesheets() {
        return instance.hasStylesheets();
      }
      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets getStylesheets() {
        return instance.getStylesheets();
      }
      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder setStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
        copyOnWrite();
        instance.setStylesheets(value);
        return this;
        }
      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder setStylesheets(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheets(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder mergeStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheets value) {
        copyOnWrite();
        instance.mergeStylesheets(value);
        return this;
      }
      /**
       * <pre>
       * The Stylesheets used within this Template's scope.
       * - Styles from the Frame CANNOT be referenced from within a Template.
       * - Styles from the PietSharedState CAN be referenced, only if the
       *   stylesheet_id is defined by the Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Stylesheets stylesheets = 11;</code>
       */
      public Builder clearStylesheets() {  copyOnWrite();
        instance.clearStylesheets();
        return this;
      }

      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasChildDefaultStyleIds() {
        return instance.hasChildDefaultStyleIds();
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds() {
        return instance.getChildDefaultStyleIds();
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setChildDefaultStyleIds(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setChildDefaultStyleIds(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setChildDefaultStyleIds(
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setChildDefaultStyleIds(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder mergeChildDefaultStyleIds(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeChildDefaultStyleIds(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack child_default_style_ids = 4 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearChildDefaultStyleIds() {  copyOnWrite();
        instance.clearChildDefaultStyleIds();
        return this;
      }

      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      @java.lang.Override
      public boolean hasElement() {
        return instance.hasElement();
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element getElement() {
        return instance.getElement();
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      public Builder setElement(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element value) {
        copyOnWrite();
        instance.setElement(value);
        return this;
        }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      public Builder setElement(
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element.Builder builderForValue) {
        copyOnWrite();
        instance.setElement(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      public Builder mergeElement(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.Element value) {
        copyOnWrite();
        instance.mergeElement(value);
        return this;
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.Element element = 6;</code>
       */
      public Builder clearElement() {  copyOnWrite();
        instance.clearElement();
        return this;
      }

      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getConditionsList());
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      @java.lang.Override
      public int getConditionsCount() {
        return instance.getConditionsCount();
      }/**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
        return instance.getConditions(index);
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder setConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.setConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder setConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setConditions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          int index, org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
        copyOnWrite();
        instance.addAllConditions(values);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder clearConditions() {
        copyOnWrite();
        instance.clearConditions();
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder removeConditions(int index) {
        copyOnWrite();
        instance.removeConditions(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Template)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietProto.Template();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "templateStylesheet_",
              "templateStylesheetCase_",
              "bitField0_",
              "templateId_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.class,
              "childDefaultStyleIds_",
              "element_",
              "conditions_",
              org.chromium.components.feed.core.proto.ui.piet.MediaQueriesProto.MediaQueryCondition.class,
              "stylesheets_",
            };
            java.lang.String info =
                "\u0001\u0007\u0001\u0001\u0001\u000b\u0007\u0000\u0001\u0004\u0001\u1008\u0000\u0002" +
                "\u103b\u0000\u0003\u143c\u0000\u0004\u1409\u0004\u0006\u1409\u0005\b\u001b\u000b" +
                "\u1409\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Template)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietProto.Template DEFAULT_INSTANCE;
    static {
      Template defaultInstance = new Template();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Template.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Template> PARSER;

    public static com.google.protobuf.Parser<Template> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PietSharedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.PietSharedState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> 
        getStylesheetsList();
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index);
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    int getStylesheetsCount();

    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> 
        getTemplatesList();
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index);
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    int getTemplatesCount();
  }
  /**
   * <pre>
   * State shared among multiple Frame instances. This is a top-level object,
   * defined outside individual Frame instances.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.PietSharedState}
   */
  public  static final class PietSharedState extends
      com.google.protobuf.GeneratedMessageLite<
          PietSharedState, PietSharedState.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.PietSharedState)
      PietSharedStateOrBuilder {
    private PietSharedState() {
      stylesheets_ = emptyProtobufList();
      templates_ = emptyProtobufList();
    }
    public static final int STYLESHEETS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> stylesheets_;
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetOrBuilder> 
        getStylesheetsOrBuilderList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    @java.lang.Override
    public int getStylesheetsCount() {
      return stylesheets_.size();
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
      return stylesheets_.get(index);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.StylesheetOrBuilder getStylesheetsOrBuilder(
        int index) {
      return stylesheets_.get(index);
    }
    private void ensureStylesheetsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> tmp = stylesheets_;
      if (!tmp.isModifiable()) {
        stylesheets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void setStylesheets(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.set(index, value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.add(value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
      value.getClass();
  ensureStylesheetsIsMutable();
      stylesheets_.add(index, value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addAllStylesheets(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> values) {
      ensureStylesheetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stylesheets_);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void clearStylesheets() {
      stylesheets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void removeStylesheets(int index) {
      ensureStylesheetsIsMutable();
      stylesheets_.remove(index);
    }

    public static final int TEMPLATES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> templates_;
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> getTemplatesList() {
      return templates_;
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.TemplateOrBuilder> 
        getTemplatesOrBuilderList() {
      return templates_;
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    @java.lang.Override
    public int getTemplatesCount() {
      return templates_.size();
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index) {
      return templates_.get(index);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.PietProto.TemplateOrBuilder getTemplatesOrBuilder(
        int index) {
      return templates_.get(index);
    }
    private void ensureTemplatesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> tmp = templates_;
      if (!tmp.isModifiable()) {
        templates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void setTemplates(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.set(index, value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.add(value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(
        int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
      value.getClass();
  ensureTemplatesIsMutable();
      templates_.add(index, value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void addAllTemplates(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> values) {
      ensureTemplatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, templates_);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void clearTemplates() {
      templates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
     */
    private void removeTemplates(int index) {
      ensureTemplatesIsMutable();
      templates_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * State shared among multiple Frame instances. This is a top-level object,
     * defined outside individual Frame instances.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.PietSharedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.PietSharedState)
        org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedStateOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesheetsList());
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      @java.lang.Override
      public int getStylesheetsCount() {
        return instance.getStylesheetsCount();
      }/**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
        return instance.getStylesheets(index);
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder setStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder setStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addAllStylesheets(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet> values) {
        copyOnWrite();
        instance.addAllStylesheets(values);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder clearStylesheets() {
        copyOnWrite();
        instance.clearStylesheets();
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder removeStylesheets(int index) {
        copyOnWrite();
        instance.removeStylesheets(index);
        return this;
      }

      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> getTemplatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getTemplatesList());
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      @java.lang.Override
      public int getTemplatesCount() {
        return instance.getTemplatesCount();
      }/**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.PietProto.Template getTemplates(int index) {
        return instance.getTemplates(index);
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder setTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.setTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder setTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.setTemplates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          int index, org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder addAllTemplates(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.PietProto.Template> values) {
        copyOnWrite();
        instance.addAllTemplates(values);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder clearTemplates() {
        copyOnWrite();
        instance.clearTemplates();
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Template templates = 2;</code>
       */
      public Builder removeTemplates(int index) {
        copyOnWrite();
        instance.removeTemplates(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.PietSharedState)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stylesheets_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Stylesheet.class,
              "templates_",
              org.chromium.components.feed.core.proto.ui.piet.PietProto.Template.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0002\u0001\u041b\u0002\u041b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.PietSharedState)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState DEFAULT_INSTANCE;
    static {
      PietSharedState defaultInstance = new PietSharedState();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PietSharedState.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietProto.PietSharedState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PietSharedState> PARSER;

    public static com.google.protobuf.Parser<PietSharedState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
