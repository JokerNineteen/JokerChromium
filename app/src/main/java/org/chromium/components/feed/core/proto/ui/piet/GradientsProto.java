// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/piet/gradients.proto

package org.chromium.components.feed.core.proto.ui.piet;

public final class GradientsProto {
  private GradientsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FillOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Fill)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     * @return Whether the color field is set.
     */
    boolean hasColor();
    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     * @return The color.
     */
    int getColor();

    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     * @return Whether the linearGradient field is set.
     */
    boolean hasLinearGradient();
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     * @return The linearGradient.
     */
    org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient getLinearGradient();

    public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill.FillTypeCase getFillTypeCase();
  }
  /**
   * <pre>
   * Represents a Fill to be used for a Piet element.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Fill}
   */
  public  static final class Fill extends
      com.google.protobuf.GeneratedMessageLite<
          Fill, Fill.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Fill)
      FillOrBuilder {
    private Fill() {
    }
    private int bitField0_;
    private int fillTypeCase_ = 0;
    private java.lang.Object fillType_;
    public enum FillTypeCase {
      COLOR(1),
      LINEAR_GRADIENT(2),
      FILLTYPE_NOT_SET(0);
      private final int value;
      private FillTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FillTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static FillTypeCase forNumber(int value) {
        switch (value) {
          case 1: return COLOR;
          case 2: return LINEAR_GRADIENT;
          case 0: return FILLTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public FillTypeCase
    getFillTypeCase() {
      return FillTypeCase.forNumber(
          fillTypeCase_);
    }

    private void clearFillType() {
      fillTypeCase_ = 0;
      fillType_ = null;
    }

    public static final int COLOR_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     * @return Whether the color field is set.
     */
    @java.lang.Override
    public boolean hasColor() {
      return fillTypeCase_ == 1;
    }
    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     * @return The color.
     */
    @java.lang.Override
    public int getColor() {
      if (fillTypeCase_ == 1) {
        return (java.lang.Integer) fillType_;
      }
      return 0;
    }
    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     * @param value The color to set.
     */
    private void setColor(int value) {
      fillTypeCase_ = 1;
      fillType_ = value;
    }
    /**
     * <pre>
     * A solid color fill. Colors are ARGB.
     * </pre>
     *
     * <code>fixed32 color = 1;</code>
     */
    private void clearColor() {
      if (fillTypeCase_ == 1) {
        fillTypeCase_ = 0;
        fillType_ = null;
      }
    }

    public static final int LINEAR_GRADIENT_FIELD_NUMBER = 2;
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     */
    @java.lang.Override
    public boolean hasLinearGradient() {
      return fillTypeCase_ == 2;
    }
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient getLinearGradient() {
      if (fillTypeCase_ == 2) {
         return (org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient) fillType_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.getDefaultInstance();
    }
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     */
    private void setLinearGradient(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient value) {
      value.getClass();
  fillType_ = value;
      fillTypeCase_ = 2;
    }
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     */
    private void mergeLinearGradient(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient value) {
      value.getClass();
  if (fillTypeCase_ == 2 &&
          fillType_ != org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.getDefaultInstance()) {
        fillType_ = org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.newBuilder((org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient) fillType_)
            .mergeFrom(value).buildPartial();
      } else {
        fillType_ = value;
      }
      fillTypeCase_ = 2;
    }
    /**
     * <pre>
     * A linear gradient, expressed as multiple color stops.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
     */
    private void clearLinearGradient() {
      if (fillTypeCase_ == 2) {
        fillTypeCase_ = 0;
        fillType_ = null;
      }
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Represents a Fill to be used for a Piet element.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Fill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Fill)
        org.chromium.components.feed.core.proto.ui.piet.GradientsProto.FillOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public FillTypeCase
          getFillTypeCase() {
        return instance.getFillTypeCase();
      }

      public Builder clearFillType() {
        copyOnWrite();
        instance.clearFillType();
        return this;
      }


      /**
       * <pre>
       * A solid color fill. Colors are ARGB.
       * </pre>
       *
       * <code>fixed32 color = 1;</code>
       * @return Whether the color field is set.
       */
      @java.lang.Override
      public boolean hasColor() {
        return instance.hasColor();
      }
      /**
       * <pre>
       * A solid color fill. Colors are ARGB.
       * </pre>
       *
       * <code>fixed32 color = 1;</code>
       * @return The color.
       */
      @java.lang.Override
      public int getColor() {
        return instance.getColor();
      }
      /**
       * <pre>
       * A solid color fill. Colors are ARGB.
       * </pre>
       *
       * <code>fixed32 color = 1;</code>
       * @param value The color to set.
       * @return This builder for chaining.
       */
      public Builder setColor(int value) {
        copyOnWrite();
        instance.setColor(value);
        return this;
      }
      /**
       * <pre>
       * A solid color fill. Colors are ARGB.
       * </pre>
       *
       * <code>fixed32 color = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearColor() {
        copyOnWrite();
        instance.clearColor();
        return this;
      }

      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      @java.lang.Override
      public boolean hasLinearGradient() {
        return instance.hasLinearGradient();
      }
      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient getLinearGradient() {
        return instance.getLinearGradient();
      }
      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      public Builder setLinearGradient(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient value) {
        copyOnWrite();
        instance.setLinearGradient(value);
        return this;
      }
      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      public Builder setLinearGradient(
          org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.Builder builderForValue) {
        copyOnWrite();
        instance.setLinearGradient(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      public Builder mergeLinearGradient(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient value) {
        copyOnWrite();
        instance.mergeLinearGradient(value);
        return this;
      }
      /**
       * <pre>
       * A linear gradient, expressed as multiple color stops.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.LinearGradient linear_gradient = 2;</code>
       */
      public Builder clearLinearGradient() {
        copyOnWrite();
        instance.clearLinearGradient();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Fill)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "fillType_",
              "fillTypeCase_",
              "bitField0_",
              org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0001\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1039\u0000\u0002" +
                "\u103c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Fill)
    private static final org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill DEFAULT_INSTANCE;
    static {
      Fill defaultInstance = new Fill();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Fill.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.Fill getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Fill> PARSER;

    public static com.google.protobuf.Parser<Fill> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LinearGradientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.LinearGradient)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> 
        getStopsList();
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop getStops(int index);
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    int getStopsCount();

    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     * @return Whether the directionDeg field is set.
     */
    boolean hasDirectionDeg();
    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     * @return The directionDeg.
     */
    int getDirectionDeg();

    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     * @return Whether the reverseForRtl field is set.
     */
    boolean hasReverseForRtl();
    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     * @return The reverseForRtl.
     */
    boolean getReverseForRtl();
  }
  /**
   * <pre>
   * A linear gradient interpolates the given color stops linearly.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.LinearGradient}
   */
  public  static final class LinearGradient extends
      com.google.protobuf.GeneratedMessageLite<
          LinearGradient, LinearGradient.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.LinearGradient)
      LinearGradientOrBuilder {
    private LinearGradient() {
      stops_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STOPS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> stops_;
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> getStopsList() {
      return stops_;
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStopOrBuilder> 
        getStopsOrBuilderList() {
      return stops_;
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    @java.lang.Override
    public int getStopsCount() {
      return stops_.size();
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop getStops(int index) {
      return stops_.get(index);
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStopOrBuilder getStopsOrBuilder(
        int index) {
      return stops_.get(index);
    }
    private void ensureStopsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> tmp = stops_;
      if (!tmp.isModifiable()) {
        stops_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void setStops(
        int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
      value.getClass();
  ensureStopsIsMutable();
      stops_.set(index, value);
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void addStops(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
      value.getClass();
  ensureStopsIsMutable();
      stops_.add(value);
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void addStops(
        int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
      value.getClass();
  ensureStopsIsMutable();
      stops_.add(index, value);
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void addAllStops(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> values) {
      ensureStopsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stops_);
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void clearStops() {
      stops_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Multiple stops for this gradient. A valid gradient must have at least
     * two stops, one at position 0 and another at position 100.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
     */
    private void removeStops(int index) {
      ensureStopsIsMutable();
      stops_.remove(index);
    }

    public static final int DIRECTION_DEG_FIELD_NUMBER = 2;
    private int directionDeg_;
    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     * @return Whether the directionDeg field is set.
     */
    @java.lang.Override
    public boolean hasDirectionDeg() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     * @return The directionDeg.
     */
    @java.lang.Override
    public int getDirectionDeg() {
      return directionDeg_;
    }
    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     * @param value The directionDeg to set.
     */
    private void setDirectionDeg(int value) {
      bitField0_ |= 0x00000001;
      directionDeg_ = value;
    }
    /**
     * <pre>
     * Direction towards which this gradient should be rendered, in degrees from
     * the top.
     *   0: ↑ From Bottom to Top.
     *  90: → From Left to Right.
     * 180: ↓ From Top to Bottom.
     * 270: ← From Right to Left.
     * Values must be in the range [0..360). Negative values are not valid.
     * </pre>
     *
     * <code>optional uint32 direction_deg = 2;</code>
     */
    private void clearDirectionDeg() {
      bitField0_ = (bitField0_ & ~0x00000001);
      directionDeg_ = 0;
    }

    public static final int REVERSE_FOR_RTL_FIELD_NUMBER = 3;
    private boolean reverseForRtl_;
    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     * @return Whether the reverseForRtl field is set.
     */
    @java.lang.Override
    public boolean hasReverseForRtl() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     * @return The reverseForRtl.
     */
    @java.lang.Override
    public boolean getReverseForRtl() {
      return reverseForRtl_;
    }
    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     * @param value The reverseForRtl to set.
     */
    private void setReverseForRtl(boolean value) {
      bitField0_ |= 0x00000002;
      reverseForRtl_ = value;
    }
    /**
     * <pre>
     * If this boolean is true, the 'x' component of the gradient's angle will be
     * reversed when Piet is rendering a layout for a right-to-left language.
     * </pre>
     *
     * <code>optional bool reverse_for_rtl = 3;</code>
     */
    private void clearReverseForRtl() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reverseForRtl_ = false;
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A linear gradient interpolates the given color stops linearly.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.LinearGradient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.LinearGradient)
        org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradientOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> getStopsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStopsList());
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      @java.lang.Override
      public int getStopsCount() {
        return instance.getStopsCount();
      }/**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop getStops(int index) {
        return instance.getStops(index);
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder setStops(
          int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
        copyOnWrite();
        instance.setStops(index, value);
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder setStops(
          int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.Builder builderForValue) {
        copyOnWrite();
        instance.setStops(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder addStops(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
        copyOnWrite();
        instance.addStops(value);
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder addStops(
          int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop value) {
        copyOnWrite();
        instance.addStops(index, value);
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder addStops(
          org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.Builder builderForValue) {
        copyOnWrite();
        instance.addStops(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder addStops(
          int index, org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.Builder builderForValue) {
        copyOnWrite();
        instance.addStops(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder addAllStops(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> values) {
        copyOnWrite();
        instance.addAllStops(values);
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder clearStops() {
        copyOnWrite();
        instance.clearStops();
        return this;
      }
      /**
       * <pre>
       * Multiple stops for this gradient. A valid gradient must have at least
       * two stops, one at position 0 and another at position 100.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ColorStop stops = 1;</code>
       */
      public Builder removeStops(int index) {
        copyOnWrite();
        instance.removeStops(index);
        return this;
      }

      /**
       * <pre>
       * Direction towards which this gradient should be rendered, in degrees from
       * the top.
       *   0: ↑ From Bottom to Top.
       *  90: → From Left to Right.
       * 180: ↓ From Top to Bottom.
       * 270: ← From Right to Left.
       * Values must be in the range [0..360). Negative values are not valid.
       * </pre>
       *
       * <code>optional uint32 direction_deg = 2;</code>
       * @return Whether the directionDeg field is set.
       */
      @java.lang.Override
      public boolean hasDirectionDeg() {
        return instance.hasDirectionDeg();
      }
      /**
       * <pre>
       * Direction towards which this gradient should be rendered, in degrees from
       * the top.
       *   0: ↑ From Bottom to Top.
       *  90: → From Left to Right.
       * 180: ↓ From Top to Bottom.
       * 270: ← From Right to Left.
       * Values must be in the range [0..360). Negative values are not valid.
       * </pre>
       *
       * <code>optional uint32 direction_deg = 2;</code>
       * @return The directionDeg.
       */
      @java.lang.Override
      public int getDirectionDeg() {
        return instance.getDirectionDeg();
      }
      /**
       * <pre>
       * Direction towards which this gradient should be rendered, in degrees from
       * the top.
       *   0: ↑ From Bottom to Top.
       *  90: → From Left to Right.
       * 180: ↓ From Top to Bottom.
       * 270: ← From Right to Left.
       * Values must be in the range [0..360). Negative values are not valid.
       * </pre>
       *
       * <code>optional uint32 direction_deg = 2;</code>
       * @param value The directionDeg to set.
       * @return This builder for chaining.
       */
      public Builder setDirectionDeg(int value) {
        copyOnWrite();
        instance.setDirectionDeg(value);
        return this;
      }
      /**
       * <pre>
       * Direction towards which this gradient should be rendered, in degrees from
       * the top.
       *   0: ↑ From Bottom to Top.
       *  90: → From Left to Right.
       * 180: ↓ From Top to Bottom.
       * 270: ← From Right to Left.
       * Values must be in the range [0..360). Negative values are not valid.
       * </pre>
       *
       * <code>optional uint32 direction_deg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectionDeg() {
        copyOnWrite();
        instance.clearDirectionDeg();
        return this;
      }

      /**
       * <pre>
       * If this boolean is true, the 'x' component of the gradient's angle will be
       * reversed when Piet is rendering a layout for a right-to-left language.
       * </pre>
       *
       * <code>optional bool reverse_for_rtl = 3;</code>
       * @return Whether the reverseForRtl field is set.
       */
      @java.lang.Override
      public boolean hasReverseForRtl() {
        return instance.hasReverseForRtl();
      }
      /**
       * <pre>
       * If this boolean is true, the 'x' component of the gradient's angle will be
       * reversed when Piet is rendering a layout for a right-to-left language.
       * </pre>
       *
       * <code>optional bool reverse_for_rtl = 3;</code>
       * @return The reverseForRtl.
       */
      @java.lang.Override
      public boolean getReverseForRtl() {
        return instance.getReverseForRtl();
      }
      /**
       * <pre>
       * If this boolean is true, the 'x' component of the gradient's angle will be
       * reversed when Piet is rendering a layout for a right-to-left language.
       * </pre>
       *
       * <code>optional bool reverse_for_rtl = 3;</code>
       * @param value The reverseForRtl to set.
       * @return This builder for chaining.
       */
      public Builder setReverseForRtl(boolean value) {
        copyOnWrite();
        instance.setReverseForRtl(value);
        return this;
      }
      /**
       * <pre>
       * If this boolean is true, the 'x' component of the gradient's angle will be
       * reversed when Piet is rendering a layout for a right-to-left language.
       * </pre>
       *
       * <code>optional bool reverse_for_rtl = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearReverseForRtl() {
        copyOnWrite();
        instance.clearReverseForRtl();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.LinearGradient)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "stops_",
              org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.class,
              "directionDeg_",
              "reverseForRtl_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u001b\u0002\u100b" +
                "\u0000\u0003\u1007\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.LinearGradient)
    private static final org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient DEFAULT_INSTANCE;
    static {
      LinearGradient defaultInstance = new LinearGradient();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LinearGradient.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.LinearGradient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LinearGradient> PARSER;

    public static com.google.protobuf.Parser<LinearGradient> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ColorStopOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.ColorStop)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     * @return Whether the color field is set.
     */
    boolean hasColor();
    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     * @return The color.
     */
    int getColor();

    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     * @return Whether the positionPercent field is set.
     */
    boolean hasPositionPercent();
    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     * @return The positionPercent.
     */
    int getPositionPercent();
  }
  /**
   * <pre>
   * A GradientStop is one color in a gradient. A simple gradient is composed of
   * at least two stops: starting with `position_percent` 0 &amp; ending with
   * `position_percent` 100. The linear gradient is interpolated between these two
   * endpoints. More complex gradients can be achieved by inserting more color
   * stops into the list.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.ColorStop}
   */
  public  static final class ColorStop extends
      com.google.protobuf.GeneratedMessageLite<
          ColorStop, ColorStop.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.ColorStop)
      ColorStopOrBuilder {
    private ColorStop() {
    }
    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private int color_;
    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     * @return Whether the color field is set.
     */
    @java.lang.Override
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     * @return The color.
     */
    @java.lang.Override
    public int getColor() {
      return color_;
    }
    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     * @param value The color to set.
     */
    private void setColor(int value) {
      bitField0_ |= 0x00000001;
      color_ = value;
    }
    /**
     * <pre>
     * ARGB color of the color stop.
     * </pre>
     *
     * <code>optional fixed32 color = 1;</code>
     */
    private void clearColor() {
      bitField0_ = (bitField0_ & ~0x00000001);
      color_ = 0;
    }

    public static final int POSITION_PERCENT_FIELD_NUMBER = 2;
    private int positionPercent_;
    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     * @return Whether the positionPercent field is set.
     */
    @java.lang.Override
    public boolean hasPositionPercent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     * @return The positionPercent.
     */
    @java.lang.Override
    public int getPositionPercent() {
      return positionPercent_;
    }
    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     * @param value The positionPercent to set.
     */
    private void setPositionPercent(int value) {
      bitField0_ |= 0x00000002;
      positionPercent_ = value;
    }
    /**
     * <pre>
     * Position of this color stop, expressed as a percent. It is an error for
     * position_percent to be outside [0..100].
     * </pre>
     *
     * <code>optional fixed32 position_percent = 2;</code>
     */
    private void clearPositionPercent() {
      bitField0_ = (bitField0_ & ~0x00000002);
      positionPercent_ = 0;
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A GradientStop is one color in a gradient. A simple gradient is composed of
     * at least two stops: starting with `position_percent` 0 &amp; ending with
     * `position_percent` 100. The linear gradient is interpolated between these two
     * endpoints. More complex gradients can be achieved by inserting more color
     * stops into the list.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.ColorStop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.ColorStop)
        org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStopOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * ARGB color of the color stop.
       * </pre>
       *
       * <code>optional fixed32 color = 1;</code>
       * @return Whether the color field is set.
       */
      @java.lang.Override
      public boolean hasColor() {
        return instance.hasColor();
      }
      /**
       * <pre>
       * ARGB color of the color stop.
       * </pre>
       *
       * <code>optional fixed32 color = 1;</code>
       * @return The color.
       */
      @java.lang.Override
      public int getColor() {
        return instance.getColor();
      }
      /**
       * <pre>
       * ARGB color of the color stop.
       * </pre>
       *
       * <code>optional fixed32 color = 1;</code>
       * @param value The color to set.
       * @return This builder for chaining.
       */
      public Builder setColor(int value) {
        copyOnWrite();
        instance.setColor(value);
        return this;
      }
      /**
       * <pre>
       * ARGB color of the color stop.
       * </pre>
       *
       * <code>optional fixed32 color = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearColor() {
        copyOnWrite();
        instance.clearColor();
        return this;
      }

      /**
       * <pre>
       * Position of this color stop, expressed as a percent. It is an error for
       * position_percent to be outside [0..100].
       * </pre>
       *
       * <code>optional fixed32 position_percent = 2;</code>
       * @return Whether the positionPercent field is set.
       */
      @java.lang.Override
      public boolean hasPositionPercent() {
        return instance.hasPositionPercent();
      }
      /**
       * <pre>
       * Position of this color stop, expressed as a percent. It is an error for
       * position_percent to be outside [0..100].
       * </pre>
       *
       * <code>optional fixed32 position_percent = 2;</code>
       * @return The positionPercent.
       */
      @java.lang.Override
      public int getPositionPercent() {
        return instance.getPositionPercent();
      }
      /**
       * <pre>
       * Position of this color stop, expressed as a percent. It is an error for
       * position_percent to be outside [0..100].
       * </pre>
       *
       * <code>optional fixed32 position_percent = 2;</code>
       * @param value The positionPercent to set.
       * @return This builder for chaining.
       */
      public Builder setPositionPercent(int value) {
        copyOnWrite();
        instance.setPositionPercent(value);
        return this;
      }
      /**
       * <pre>
       * Position of this color stop, expressed as a percent. It is an error for
       * position_percent to be outside [0..100].
       * </pre>
       *
       * <code>optional fixed32 position_percent = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPositionPercent() {
        copyOnWrite();
        instance.clearPositionPercent();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.ColorStop)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "color_",
              "positionPercent_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1006\u0000\u0002" +
                "\u1006\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.ColorStop)
    private static final org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop DEFAULT_INSTANCE;
    static {
      ColorStop defaultInstance = new ColorStop();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ColorStop.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.GradientsProto.ColorStop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ColorStop> PARSER;

    public static com.google.protobuf.Parser<ColorStop> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
