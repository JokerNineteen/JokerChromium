// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/piet/piet_android_support.proto

package org.chromium.components.feed.core.proto.ui.piet;

public final class PietAndroidSupport {
  private PietAndroidSupport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ShardingControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.ShardingControl)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     * @return Whether the startSlice field is set.
     */
    boolean hasStartSlice();
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     * @return The startSlice.
     */
    int getStartSlice();

    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     * @return Whether the endSlice field is set.
     */
    boolean hasEndSlice();
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     * @return The endSlice.
     */
    int getEndSlice();

    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     * @return Whether the listStart field is set.
     */
    boolean hasListStart();
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     * @return The listStart.
     */
    int getListStart();

    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     * @return Whether the listEnd field is set.
     */
    boolean hasListEnd();
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     * @return The listEnd.
     */
    int getListEnd();
  }
  /**
   * <pre>
   * This allows the Host to control the granularity of slices by returning
   * only slices specified instead of generating all the slices within the
   * full Card message.
   * TODO: Is this still relevant?
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.ShardingControl}
   */
  public  static final class ShardingControl extends
      com.google.protobuf.GeneratedMessageLite<
          ShardingControl, ShardingControl.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.ShardingControl)
      ShardingControlOrBuilder {
    private ShardingControl() {
    }
    private int bitField0_;
    public static final int START_SLICE_FIELD_NUMBER = 1;
    private int startSlice_;
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     * @return Whether the startSlice field is set.
     */
    @java.lang.Override
    public boolean hasStartSlice() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     * @return The startSlice.
     */
    @java.lang.Override
    public int getStartSlice() {
      return startSlice_;
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     * @param value The startSlice to set.
     */
    private void setStartSlice(int value) {
      bitField0_ |= 0x00000001;
      startSlice_ = value;
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    private void clearStartSlice() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startSlice_ = 0;
    }

    public static final int END_SLICE_FIELD_NUMBER = 2;
    private int endSlice_;
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     * @return Whether the endSlice field is set.
     */
    @java.lang.Override
    public boolean hasEndSlice() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     * @return The endSlice.
     */
    @java.lang.Override
    public int getEndSlice() {
      return endSlice_;
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     * @param value The endSlice to set.
     */
    private void setEndSlice(int value) {
      bitField0_ |= 0x00000002;
      endSlice_ = value;
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    private void clearEndSlice() {
      bitField0_ = (bitField0_ & ~0x00000002);
      endSlice_ = 0;
    }

    public static final int LIST_START_FIELD_NUMBER = 3;
    private int listStart_;
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     * @return Whether the listStart field is set.
     */
    @java.lang.Override
    public boolean hasListStart() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     * @return The listStart.
     */
    @java.lang.Override
    public int getListStart() {
      return listStart_;
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     * @param value The listStart to set.
     */
    private void setListStart(int value) {
      bitField0_ |= 0x00000004;
      listStart_ = value;
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    private void clearListStart() {
      bitField0_ = (bitField0_ & ~0x00000004);
      listStart_ = 0;
    }

    public static final int LIST_END_FIELD_NUMBER = 4;
    private int listEnd_;
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     * @return Whether the listEnd field is set.
     */
    @java.lang.Override
    public boolean hasListEnd() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     * @return The listEnd.
     */
    @java.lang.Override
    public int getListEnd() {
      return listEnd_;
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     * @param value The listEnd to set.
     */
    private void setListEnd(int value) {
      bitField0_ |= 0x00000008;
      listEnd_ = value;
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    private void clearListEnd() {
      bitField0_ = (bitField0_ & ~0x00000008);
      listEnd_ = 0;
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * This allows the Host to control the granularity of slices by returning
     * only slices specified instead of generating all the slices within the
     * full Card message.
     * TODO: Is this still relevant?
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.ShardingControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.ShardingControl)
        org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControlOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       * @return Whether the startSlice field is set.
       */
      @java.lang.Override
      public boolean hasStartSlice() {
        return instance.hasStartSlice();
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       * @return The startSlice.
       */
      @java.lang.Override
      public int getStartSlice() {
        return instance.getStartSlice();
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       * @param value The startSlice to set.
       * @return This builder for chaining.
       */
      public Builder setStartSlice(int value) {
        copyOnWrite();
        instance.setStartSlice(value);
        return this;
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartSlice() {
        copyOnWrite();
        instance.clearStartSlice();
        return this;
      }

      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       * @return Whether the endSlice field is set.
       */
      @java.lang.Override
      public boolean hasEndSlice() {
        return instance.hasEndSlice();
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       * @return The endSlice.
       */
      @java.lang.Override
      public int getEndSlice() {
        return instance.getEndSlice();
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       * @param value The endSlice to set.
       * @return This builder for chaining.
       */
      public Builder setEndSlice(int value) {
        copyOnWrite();
        instance.setEndSlice(value);
        return this;
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndSlice() {
        copyOnWrite();
        instance.clearEndSlice();
        return this;
      }

      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       * @return Whether the listStart field is set.
       */
      @java.lang.Override
      public boolean hasListStart() {
        return instance.hasListStart();
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       * @return The listStart.
       */
      @java.lang.Override
      public int getListStart() {
        return instance.getListStart();
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       * @param value The listStart to set.
       * @return This builder for chaining.
       */
      public Builder setListStart(int value) {
        copyOnWrite();
        instance.setListStart(value);
        return this;
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearListStart() {
        copyOnWrite();
        instance.clearListStart();
        return this;
      }

      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       * @return Whether the listEnd field is set.
       */
      @java.lang.Override
      public boolean hasListEnd() {
        return instance.hasListEnd();
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       * @return The listEnd.
       */
      @java.lang.Override
      public int getListEnd() {
        return instance.getListEnd();
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       * @param value The listEnd to set.
       * @return This builder for chaining.
       */
      public Builder setListEnd(int value) {
        copyOnWrite();
        instance.setListEnd(value);
        return this;
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearListEnd() {
        copyOnWrite();
        instance.clearListEnd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.ShardingControl)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "startSlice_",
              "endSlice_",
              "listStart_",
              "listEnd_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
                "\u1004\u0001\u0003\u1004\u0002\u0004\u1004\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.ShardingControl)
    private static final org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl DEFAULT_INSTANCE;
    static {
      ShardingControl defaultInstance = new ShardingControl();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ShardingControl.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.PietAndroidSupport.ShardingControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ShardingControl> PARSER;

    public static com.google.protobuf.Parser<ShardingControl> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
