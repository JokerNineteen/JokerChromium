// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/stream/stream_offline_extension.proto

package org.chromium.components.feed.core.proto.ui.stream;

public final class StreamOfflineExtensionProto {
  private StreamOfflineExtensionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.offlineExtension);
  }
  public interface OfflineExtensionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.stream.OfflineExtension)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return Whether the url field is set.
     */
    boolean hasUrl();
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The url.
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The bytes for url.
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     * @return Whether the offlineBinding field is set.
     */
    boolean hasOfflineBinding();
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     * @return The offlineBinding.
     */
    org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getOfflineBinding();

    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     * @return Whether the notOfflineBinding field is set.
     */
    boolean hasNotOfflineBinding();
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     * @return The notOfflineBinding.
     */
    org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getNotOfflineBinding();
  }
  /**
   * <pre>
   * Extension for Piet bindings content based on offline availability status.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.stream.OfflineExtension}
   */
  public  static final class OfflineExtension extends
      com.google.protobuf.GeneratedMessageLite<
          OfflineExtension, OfflineExtension.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.stream.OfflineExtension)
      OfflineExtensionOrBuilder {
    private OfflineExtension() {
      url_ = "";
    }
    private int bitField0_;
    public static final int URL_FIELD_NUMBER = 1;
    private java.lang.String url_;
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return Whether the url field is set.
     */
    @java.lang.Override
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The url.
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The bytes for url.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @param value The url to set.
     */
    private void setUrl(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      url_ = value;
    }
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     */
    private void clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000001);
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <pre>
     * The URL that determines which binding to use. If the URL is available
     * offline, then offline_binding should be used, otherwise
     * not_offline_binding should be used.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @param value The bytes for url to set.
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      url_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int OFFLINE_BINDING_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue offlineBinding_;
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     */
    @java.lang.Override
    public boolean hasOfflineBinding() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getOfflineBinding() {
      return offlineBinding_ == null ? org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.getDefaultInstance() : offlineBinding_;
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     */
    private void setOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
      value.getClass();
  offlineBinding_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
      value.getClass();
  if (offlineBinding_ != null &&
          offlineBinding_ != org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.getDefaultInstance()) {
        offlineBinding_ =
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.newBuilder(offlineBinding_).mergeFrom(value).buildPartial();
      } else {
        offlineBinding_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
     */
    private void clearOfflineBinding() {  offlineBinding_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int NOT_OFFLINE_BINDING_FIELD_NUMBER = 3;
    private org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue notOfflineBinding_;
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     */
    @java.lang.Override
    public boolean hasNotOfflineBinding() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getNotOfflineBinding() {
      return notOfflineBinding_ == null ? org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.getDefaultInstance() : notOfflineBinding_;
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     */
    private void setNotOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
      value.getClass();
  notOfflineBinding_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeNotOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
      value.getClass();
  if (notOfflineBinding_ != null &&
          notOfflineBinding_ != org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.getDefaultInstance()) {
        notOfflineBinding_ =
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.newBuilder(notOfflineBinding_).mergeFrom(value).buildPartial();
      } else {
        notOfflineBinding_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
     */
    private void clearNotOfflineBinding() {  notOfflineBinding_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Extension for Piet bindings content based on offline availability status.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.stream.OfflineExtension}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.stream.OfflineExtension)
        org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtensionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return Whether the url field is set.
       */
      @java.lang.Override
      public boolean hasUrl() {
        return instance.hasUrl();
      }
      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return The url.
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return The bytes for url.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @param value The url to set.
       * @return This builder for chaining.
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <pre>
       * The URL that determines which binding to use. If the URL is available
       * offline, then offline_binding should be used, otherwise
       * not_offline_binding should be used.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @param value The bytes for url to set.
       * @return This builder for chaining.
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      @java.lang.Override
      public boolean hasOfflineBinding() {
        return instance.hasOfflineBinding();
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getOfflineBinding() {
        return instance.getOfflineBinding();
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      public Builder setOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
        copyOnWrite();
        instance.setOfflineBinding(value);
        return this;
        }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      public Builder setOfflineBinding(
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.Builder builderForValue) {
        copyOnWrite();
        instance.setOfflineBinding(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      public Builder mergeOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
        copyOnWrite();
        instance.mergeOfflineBinding(value);
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue offline_binding = 2;</code>
       */
      public Builder clearOfflineBinding() {  copyOnWrite();
        instance.clearOfflineBinding();
        return this;
      }

      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      @java.lang.Override
      public boolean hasNotOfflineBinding() {
        return instance.hasNotOfflineBinding();
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue getNotOfflineBinding() {
        return instance.getNotOfflineBinding();
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      public Builder setNotOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
        copyOnWrite();
        instance.setNotOfflineBinding(value);
        return this;
        }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      public Builder setNotOfflineBinding(
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue.Builder builderForValue) {
        copyOnWrite();
        instance.setNotOfflineBinding(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      public Builder mergeNotOfflineBinding(org.chromium.components.feed.core.proto.ui.piet.ElementsProto.BindingValue value) {
        copyOnWrite();
        instance.mergeNotOfflineBinding(value);
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.ui.piet.BindingValue not_offline_binding = 3;</code>
       */
      public Builder clearNotOfflineBinding() {  copyOnWrite();
        instance.clearNotOfflineBinding();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.stream.OfflineExtension)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "url_",
              "offlineBinding_",
              "notOfflineBinding_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0002\u0001\u1008\u0000\u0002" +
                "\u1409\u0001\u0003\u1409\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.stream.OfflineExtension)
    private static final org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension DEFAULT_INSTANCE;
    static {
      OfflineExtension defaultInstance = new OfflineExtension();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        OfflineExtension.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OfflineExtension> PARSER;

    public static com.google.protobuf.Parser<OfflineExtension> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
    public static final int OFFLINE_EXTENSION_FIELD_NUMBER = 208815589;
    /**
     * <code>extend .components.feed.core.proto.ui.piet.HostBindingData { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
        org.chromium.components.feed.core.proto.ui.piet.ElementsProto.HostBindingData,
        org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension> offlineExtension = com.google.protobuf.GeneratedMessageLite
            .newSingularGeneratedExtension(
          org.chromium.components.feed.core.proto.ui.piet.ElementsProto.HostBindingData.getDefaultInstance(),
          org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.getDefaultInstance(),
          org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.getDefaultInstance(),
          null,
          208815589,
          com.google.protobuf.WireFormat.FieldType.MESSAGE,
          org.chromium.components.feed.core.proto.ui.stream.StreamOfflineExtensionProto.OfflineExtension.class);
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
