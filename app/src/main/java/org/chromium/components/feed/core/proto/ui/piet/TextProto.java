// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/ui/piet/text.proto

package org.chromium.components.feed.core.proto.ui.piet;

public final class TextProto {
  private TextProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ParameterizedTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.ParameterizedText)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return Whether the text field is set.
     */
    boolean hasText();
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     * @return Whether the isHtml field is set.
     */
    boolean hasIsHtml();
    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     * @return The isHtml.
     */
    boolean getIsHtml();

    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> 
        getParametersList();
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter getParameters(int index);
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    int getParametersCount();
  }
  /**
   * <pre>
   * ParameterizedText allows strings to be constructed on the client based on
   * rapidly-changing information for which a server round-trip is not
   * appropriate. Clients will build a string at runtime by combining the
   * parameterized string with the values of the evaluated parameters.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.ParameterizedText}
   */
  public  static final class ParameterizedText extends
      com.google.protobuf.GeneratedMessageLite<
          ParameterizedText, ParameterizedText.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.ParameterizedText)
      ParameterizedTextOrBuilder {
    private ParameterizedText() {
      text_ = "";
      parameters_ = emptyProtobufList();
    }
    public interface ParameterOrBuilder extends
        // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.ParameterizedText.Parameter)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       * @return Whether the timestampSeconds field is set.
       */
      boolean hasTimestampSeconds();
      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       * @return The timestampSeconds.
       */
      long getTimestampSeconds();

      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       * @return Whether the location field is set.
       */
      boolean hasLocation();
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       * @return The location.
       */
      org.chromium.components.feed.core.proto.ui.piet.TextProto.Location getLocation();

      public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.ParameterTypesCase getParameterTypesCase();
    }
    /**
     * <pre>
     * A parameter to be substituted in the ParameterizedText. Every type of
     * parameter depends on some information only available on the client at
     * rendering time, and not on the server at card and string creation time. In
     * particular, if the value can be determined on the server, it should be
     * inlined in the string on the server.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.ParameterizedText.Parameter}
     */
    public  static final class Parameter extends
        com.google.protobuf.GeneratedMessageLite<
            Parameter, Parameter.Builder> implements
        // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.ParameterizedText.Parameter)
        ParameterOrBuilder {
      private Parameter() {
      }
      private int bitField0_;
      private int parameterTypesCase_ = 0;
      private java.lang.Object parameterTypes_;
      public enum ParameterTypesCase {
        TIMESTAMP_SECONDS(1),
        LOCATION(2),
        PARAMETERTYPES_NOT_SET(0);
        private final int value;
        private ParameterTypesCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ParameterTypesCase valueOf(int value) {
          return forNumber(value);
        }

        public static ParameterTypesCase forNumber(int value) {
          switch (value) {
            case 1: return TIMESTAMP_SECONDS;
            case 2: return LOCATION;
            case 0: return PARAMETERTYPES_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      @java.lang.Override
      public ParameterTypesCase
      getParameterTypesCase() {
        return ParameterTypesCase.forNumber(
            parameterTypesCase_);
      }

      private void clearParameterTypes() {
        parameterTypesCase_ = 0;
        parameterTypes_ = null;
      }

      public static final int TIMESTAMP_SECONDS_FIELD_NUMBER = 1;
      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       * @return Whether the timestampSeconds field is set.
       */
      @java.lang.Override
      public boolean hasTimestampSeconds() {
        return parameterTypesCase_ == 1;
      }
      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       * @return The timestampSeconds.
       */
      @java.lang.Override
      public long getTimestampSeconds() {
        if (parameterTypesCase_ == 1) {
          return (java.lang.Long) parameterTypes_;
        }
        return 0L;
      }
      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       * @param value The timestampSeconds to set.
       */
      private void setTimestampSeconds(long value) {
        parameterTypesCase_ = 1;
        parameterTypes_ = value;
      }
      /**
       * <pre>
       * An absolute timestamp in seconds since the Unix epoch.
       * </pre>
       *
       * <code>int64 timestamp_seconds = 1;</code>
       */
      private void clearTimestampSeconds() {
        if (parameterTypesCase_ == 1) {
          parameterTypesCase_ = 0;
          parameterTypes_ = null;
        }
      }

      public static final int LOCATION_FIELD_NUMBER = 2;
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       */
      @java.lang.Override
      public boolean hasLocation() {
        return parameterTypesCase_ == 2;
      }
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.Location getLocation() {
        if (parameterTypesCase_ == 2) {
           return (org.chromium.components.feed.core.proto.ui.piet.TextProto.Location) parameterTypes_;
        }
        return org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.getDefaultInstance();
      }
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       */
      private void setLocation(org.chromium.components.feed.core.proto.ui.piet.TextProto.Location value) {
        value.getClass();
  parameterTypes_ = value;
        parameterTypesCase_ = 2;
      }
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       */
      private void mergeLocation(org.chromium.components.feed.core.proto.ui.piet.TextProto.Location value) {
        value.getClass();
  if (parameterTypesCase_ == 2 &&
            parameterTypes_ != org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.getDefaultInstance()) {
          parameterTypes_ = org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.newBuilder((org.chromium.components.feed.core.proto.ui.piet.TextProto.Location) parameterTypes_)
              .mergeFrom(value).buildPartial();
        } else {
          parameterTypes_ = value;
        }
        parameterTypesCase_ = 2;
      }
      /**
       * <pre>
       * A location to be used for computing relative distances or travel times.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
       */
      private void clearLocation() {
        if (parameterTypesCase_ == 2) {
          parameterTypesCase_ = 0;
          parameterTypes_ = null;
        }
      }

      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * A parameter to be substituted in the ParameterizedText. Every type of
       * parameter depends on some information only available on the client at
       * rendering time, and not on the server at card and string creation time. In
       * particular, if the value can be determined on the server, it should be
       * inlined in the string on the server.
       * </pre>
       *
       * Protobuf type {@code components.feed.core.proto.ui.piet.ParameterizedText.Parameter}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter, Builder> implements
          // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.ParameterizedText.Parameter)
          org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.ParameterOrBuilder {
        // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        @java.lang.Override
        public ParameterTypesCase
            getParameterTypesCase() {
          return instance.getParameterTypesCase();
        }

        public Builder clearParameterTypes() {
          copyOnWrite();
          instance.clearParameterTypes();
          return this;
        }


        /**
         * <pre>
         * An absolute timestamp in seconds since the Unix epoch.
         * </pre>
         *
         * <code>int64 timestamp_seconds = 1;</code>
         * @return Whether the timestampSeconds field is set.
         */
        @java.lang.Override
        public boolean hasTimestampSeconds() {
          return instance.hasTimestampSeconds();
        }
        /**
         * <pre>
         * An absolute timestamp in seconds since the Unix epoch.
         * </pre>
         *
         * <code>int64 timestamp_seconds = 1;</code>
         * @return The timestampSeconds.
         */
        @java.lang.Override
        public long getTimestampSeconds() {
          return instance.getTimestampSeconds();
        }
        /**
         * <pre>
         * An absolute timestamp in seconds since the Unix epoch.
         * </pre>
         *
         * <code>int64 timestamp_seconds = 1;</code>
         * @param value The timestampSeconds to set.
         * @return This builder for chaining.
         */
        public Builder setTimestampSeconds(long value) {
          copyOnWrite();
          instance.setTimestampSeconds(value);
          return this;
        }
        /**
         * <pre>
         * An absolute timestamp in seconds since the Unix epoch.
         * </pre>
         *
         * <code>int64 timestamp_seconds = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestampSeconds() {
          copyOnWrite();
          instance.clearTimestampSeconds();
          return this;
        }

        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        @java.lang.Override
        public boolean hasLocation() {
          return instance.hasLocation();
        }
        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        @java.lang.Override
        public org.chromium.components.feed.core.proto.ui.piet.TextProto.Location getLocation() {
          return instance.getLocation();
        }
        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        public Builder setLocation(org.chromium.components.feed.core.proto.ui.piet.TextProto.Location value) {
          copyOnWrite();
          instance.setLocation(value);
          return this;
        }
        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        public Builder setLocation(
            org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.Builder builderForValue) {
          copyOnWrite();
          instance.setLocation(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        public Builder mergeLocation(org.chromium.components.feed.core.proto.ui.piet.TextProto.Location value) {
          copyOnWrite();
          instance.mergeLocation(value);
          return this;
        }
        /**
         * <pre>
         * A location to be used for computing relative distances or travel times.
         * </pre>
         *
         * <code>.components.feed.core.proto.ui.piet.Location location = 2;</code>
         */
        public Builder clearLocation() {
          copyOnWrite();
          instance.clearLocation();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.ParameterizedText.Parameter)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "parameterTypes_",
                "parameterTypesCase_",
                "bitField0_",
                org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.class,
              };
              java.lang.String info =
                  "\u0001\u0002\u0001\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1035\u0000\u0002" +
                  "\u103c\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.ParameterizedText.Parameter)
      private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter DEFAULT_INSTANCE;
      static {
        Parameter defaultInstance = new Parameter();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Parameter.class, defaultInstance);
      }

      public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Parameter> PARSER;

      public static com.google.protobuf.Parser<Parameter> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private java.lang.String text_;
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      return text_;
    }
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(text_);
    }
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @param value The text to set.
     */
    private void setText(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      text_ = value;
    }
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    private void clearText() {
      bitField0_ = (bitField0_ & ~0x00000001);
      text_ = getDefaultInstance().getText();
    }
    /**
     * <pre>
     * A string that may (but need not always) include placeholders for
     * parameters.
     * If parameters are specified, placeholders use the simplest standard C or
     * Java string format specifier: "%s". All other instances of the "%"
     * character must be escaped with another "%" character. If there are no
     * parameters, this string is used directly, without replacements. The number
     * of placeholders must correspond to the number of parameters provided. The
     * order of `parameters` is significant; parameters are replaced in the string
     * in the order specified.
     * The server is responsible for localizing this string for the target locale;
     * the client expects to receive only a single string for the current locale.
     * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
     * should be done by the server at serving time, and is not handled by the
     * client.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     * @param value The bytes for text to set.
     */
    private void setTextBytes(
        com.google.protobuf.ByteString value) {
      text_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int IS_HTML_FIELD_NUMBER = 2;
    private boolean isHtml_;
    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     * @return Whether the isHtml field is set.
     */
    @java.lang.Override
    public boolean hasIsHtml() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     * @return The isHtml.
     */
    @java.lang.Override
    public boolean getIsHtml() {
      return isHtml_;
    }
    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     * @param value The isHtml to set.
     */
    private void setIsHtml(boolean value) {
      bitField0_ |= 0x00000002;
      isHtml_ = value;
    }
    /**
     * <pre>
     * Strings are considered to be plain text by default, for performance
     * reasons. A string is parsed as HTML if and only if this field is explicitly
     * set to true.
     * TODO: Document the white-listed set of tags, and ensure this
     * content is correctly sanitized on all supported platforms.
     * </pre>
     *
     * <code>optional bool is_html = 2 [default = false];</code>
     */
    private void clearIsHtml() {
      bitField0_ = (bitField0_ & ~0x00000002);
      isHtml_ = false;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> parameters_;
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> getParametersList() {
      return parameters_;
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.ParameterOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    @java.lang.Override
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.ParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }
    private void ensureParametersIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> tmp = parameters_;
      if (!tmp.isModifiable()) {
        parameters_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void setParameters(
        int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
      value.getClass();
  ensureParametersIsMutable();
      parameters_.set(index, value);
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void addParameters(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
      value.getClass();
  ensureParametersIsMutable();
      parameters_.add(value);
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void addParameters(
        int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
      value.getClass();
  ensureParametersIsMutable();
      parameters_.add(index, value);
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void addAllParameters(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> values) {
      ensureParametersIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, parameters_);
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void clearParameters() {
      parameters_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An ordered list of parameters.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
     */
    private void removeParameters(int index) {
      ensureParametersIsMutable();
      parameters_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ParameterizedText allows strings to be constructed on the client based on
     * rapidly-changing information for which a server round-trip is not
     * appropriate. Clients will build a string at runtime by combining the
     * parameterized string with the values of the evaluated parameters.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.ParameterizedText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.ParameterizedText)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedTextOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @return Whether the text field is set.
       */
      @java.lang.Override
      public boolean hasText() {
        return instance.hasText();
      }
      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @return The text.
       */
      @java.lang.Override
      public java.lang.String getText() {
        return instance.getText();
      }
      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @return The bytes for text.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTextBytes() {
        return instance.getTextBytes();
      }
      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        copyOnWrite();
        instance.setText(value);
        return this;
      }
      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        copyOnWrite();
        instance.clearText();
        return this;
      }
      /**
       * <pre>
       * A string that may (but need not always) include placeholders for
       * parameters.
       * If parameters are specified, placeholders use the simplest standard C or
       * Java string format specifier: "%s". All other instances of the "%"
       * character must be escaped with another "%" character. If there are no
       * parameters, this string is used directly, without replacements. The number
       * of placeholders must correspond to the number of parameters provided. The
       * order of `parameters` is significant; parameters are replaced in the string
       * in the order specified.
       * The server is responsible for localizing this string for the target locale;
       * the client expects to receive only a single string for the current locale.
       * Any pluralization (["zero" | "one" | "two" | "few" | "many" | "other"])
       * should be done by the server at serving time, and is not handled by the
       * client.
       * </pre>
       *
       * <code>optional string text = 1;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTextBytes(value);
        return this;
      }

      /**
       * <pre>
       * Strings are considered to be plain text by default, for performance
       * reasons. A string is parsed as HTML if and only if this field is explicitly
       * set to true.
       * TODO: Document the white-listed set of tags, and ensure this
       * content is correctly sanitized on all supported platforms.
       * </pre>
       *
       * <code>optional bool is_html = 2 [default = false];</code>
       * @return Whether the isHtml field is set.
       */
      @java.lang.Override
      public boolean hasIsHtml() {
        return instance.hasIsHtml();
      }
      /**
       * <pre>
       * Strings are considered to be plain text by default, for performance
       * reasons. A string is parsed as HTML if and only if this field is explicitly
       * set to true.
       * TODO: Document the white-listed set of tags, and ensure this
       * content is correctly sanitized on all supported platforms.
       * </pre>
       *
       * <code>optional bool is_html = 2 [default = false];</code>
       * @return The isHtml.
       */
      @java.lang.Override
      public boolean getIsHtml() {
        return instance.getIsHtml();
      }
      /**
       * <pre>
       * Strings are considered to be plain text by default, for performance
       * reasons. A string is parsed as HTML if and only if this field is explicitly
       * set to true.
       * TODO: Document the white-listed set of tags, and ensure this
       * content is correctly sanitized on all supported platforms.
       * </pre>
       *
       * <code>optional bool is_html = 2 [default = false];</code>
       * @param value The isHtml to set.
       * @return This builder for chaining.
       */
      public Builder setIsHtml(boolean value) {
        copyOnWrite();
        instance.setIsHtml(value);
        return this;
      }
      /**
       * <pre>
       * Strings are considered to be plain text by default, for performance
       * reasons. A string is parsed as HTML if and only if this field is explicitly
       * set to true.
       * TODO: Document the white-listed set of tags, and ensure this
       * content is correctly sanitized on all supported platforms.
       * </pre>
       *
       * <code>optional bool is_html = 2 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearIsHtml() {
        copyOnWrite();
        instance.clearIsHtml();
        return this;
      }

      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> getParametersList() {
        return java.util.Collections.unmodifiableList(
            instance.getParametersList());
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      @java.lang.Override
      public int getParametersCount() {
        return instance.getParametersCount();
      }/**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter getParameters(int index) {
        return instance.getParameters(index);
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder setParameters(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
        copyOnWrite();
        instance.setParameters(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder setParameters(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.Builder builderForValue) {
        copyOnWrite();
        instance.setParameters(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder addParameters(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
        copyOnWrite();
        instance.addParameters(value);
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder addParameters(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter value) {
        copyOnWrite();
        instance.addParameters(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder addParameters(
          org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.Builder builderForValue) {
        copyOnWrite();
        instance.addParameters(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder addParameters(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.Builder builderForValue) {
        copyOnWrite();
        instance.addParameters(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter> values) {
        copyOnWrite();
        instance.addAllParameters(values);
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder clearParameters() {
        copyOnWrite();
        instance.clearParameters();
        return this;
      }
      /**
       * <pre>
       * An ordered list of parameters.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.ParameterizedText.Parameter parameters = 3;</code>
       */
      public Builder removeParameters(int index) {
        copyOnWrite();
        instance.removeParameters(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.ParameterizedText)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "text_",
              "isHtml_",
              "parameters_",
              org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Parameter.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u1008\u0000\u0002" +
                "\u1007\u0001\u0003\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.ParameterizedText)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText DEFAULT_INSTANCE;
    static {
      ParameterizedText defaultInstance = new ParameterizedText();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ParameterizedText.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ParameterizedText> PARSER;

    public static com.google.protobuf.Parser<ParameterizedText> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Location)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     * @return Whether the latitude field is set.
     */
    boolean hasLatitude();
    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     * @return The latitude.
     */
    double getLatitude();

    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     * @return Whether the longitude field is set.
     */
    boolean hasLongitude();
    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     * @return The longitude.
     */
    double getLongitude();
  }
  /**
   * <pre>
   * A location, expressed as a { latitude, longitude } tuple. This is used to
   * generate a string that describes the distance between the user’s current
   * location and the specified location in relative terms, e.g. “10 meters away”,
   * or “20 minutes away”.
   * Since Piet is a presentational language (not semantic), this Location should
   * only contain the fields necessary for accurate display. Specifically, other
   * fields such as physical addresses, labels, titles, or feature names should
   * not be added here.
   * Both latitude and longitude are specified as double-precision floats. The
   * worst case real-world distance expressed in this format is ~1-4 meters at the
   * equator.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Location}
   */
  public  static final class Location extends
      com.google.protobuf.GeneratedMessageLite<
          Location, Location.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Location)
      LocationOrBuilder {
    private Location() {
    }
    private int bitField0_;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private double latitude_;
    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     * @return Whether the latitude field is set.
     */
    @java.lang.Override
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public double getLatitude() {
      return latitude_;
    }
    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     * @param value The latitude to set.
     */
    private void setLatitude(double value) {
      bitField0_ |= 0x00000001;
      latitude_ = value;
    }
    /**
     * <pre>
     * Latitude for this location.
     * </pre>
     *
     * <code>optional double latitude = 1;</code>
     */
    private void clearLatitude() {
      bitField0_ = (bitField0_ & ~0x00000001);
      latitude_ = 0D;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     * @return Whether the longitude field is set.
     */
    @java.lang.Override
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public double getLongitude() {
      return longitude_;
    }
    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     * @param value The longitude to set.
     */
    private void setLongitude(double value) {
      bitField0_ |= 0x00000002;
      longitude_ = value;
    }
    /**
     * <pre>
     * Longitude for this location.
     * </pre>
     *
     * <code>optional double longitude = 2;</code>
     */
    private void clearLongitude() {
      bitField0_ = (bitField0_ & ~0x00000002);
      longitude_ = 0D;
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.Location prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A location, expressed as a { latitude, longitude } tuple. This is used to
     * generate a string that describes the distance between the user’s current
     * location and the specified location in relative terms, e.g. “10 meters away”,
     * or “20 minutes away”.
     * Since Piet is a presentational language (not semantic), this Location should
     * only contain the fields necessary for accurate display. Specifically, other
     * fields such as physical addresses, labels, titles, or feature names should
     * not be added here.
     * Both latitude and longitude are specified as double-precision floats. The
     * worst case real-world distance expressed in this format is ~1-4 meters at the
     * equator.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Location}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.Location, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Location)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.LocationOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Latitude for this location.
       * </pre>
       *
       * <code>optional double latitude = 1;</code>
       * @return Whether the latitude field is set.
       */
      @java.lang.Override
      public boolean hasLatitude() {
        return instance.hasLatitude();
      }
      /**
       * <pre>
       * Latitude for this location.
       * </pre>
       *
       * <code>optional double latitude = 1;</code>
       * @return The latitude.
       */
      @java.lang.Override
      public double getLatitude() {
        return instance.getLatitude();
      }
      /**
       * <pre>
       * Latitude for this location.
       * </pre>
       *
       * <code>optional double latitude = 1;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {
        copyOnWrite();
        instance.setLatitude(value);
        return this;
      }
      /**
       * <pre>
       * Latitude for this location.
       * </pre>
       *
       * <code>optional double latitude = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        copyOnWrite();
        instance.clearLatitude();
        return this;
      }

      /**
       * <pre>
       * Longitude for this location.
       * </pre>
       *
       * <code>optional double longitude = 2;</code>
       * @return Whether the longitude field is set.
       */
      @java.lang.Override
      public boolean hasLongitude() {
        return instance.hasLongitude();
      }
      /**
       * <pre>
       * Longitude for this location.
       * </pre>
       *
       * <code>optional double longitude = 2;</code>
       * @return The longitude.
       */
      @java.lang.Override
      public double getLongitude() {
        return instance.getLongitude();
      }
      /**
       * <pre>
       * Longitude for this location.
       * </pre>
       *
       * <code>optional double longitude = 2;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {
        copyOnWrite();
        instance.setLongitude(value);
        return this;
      }
      /**
       * <pre>
       * Longitude for this location.
       * </pre>
       *
       * <code>optional double longitude = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        copyOnWrite();
        instance.clearLongitude();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Location)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.Location();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "latitude_",
              "longitude_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1000\u0000\u0002" +
                "\u1000\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.Location> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.Location.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.Location>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Location)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.Location DEFAULT_INSTANCE;
    static {
      Location defaultInstance = new Location();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Location.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Location getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Location> PARSER;

    public static com.google.protobuf.Parser<Location> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChunkedTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.ChunkedText)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> 
        getChunksList();
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk getChunks(int index);
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    int getChunksCount();
  }
  /**
   * <pre>
   * ChunkedText allows composing a single string of multiple chunks with
   * different formatting. In addition to this, a chunk can also be composed of an
   * image that gets inlined with the surrounding text chunks. Image chunks are
   * aligned to the text baseline. Chunked text flows independently from the
   * chunked regions. Line wrapping is supported across different chunks. For
   * example a string composed of three chunks that needs to be wrapped in two
   * lines will be wrapped as follows:
   * [[chunk a] [image] [chunk]]
   * [[b]]
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.ChunkedText}
   */
  public  static final class ChunkedText extends
      com.google.protobuf.GeneratedMessageLite<
          ChunkedText, ChunkedText.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.ChunkedText)
      ChunkedTextOrBuilder {
    private ChunkedText() {
      chunks_ = emptyProtobufList();
    }
    public static final int CHUNKS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> chunks_;
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> getChunksList() {
      return chunks_;
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkOrBuilder> 
        getChunksOrBuilderList() {
      return chunks_;
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    @java.lang.Override
    public int getChunksCount() {
      return chunks_.size();
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk getChunks(int index) {
      return chunks_.get(index);
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkOrBuilder getChunksOrBuilder(
        int index) {
      return chunks_.get(index);
    }
    private void ensureChunksIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> tmp = chunks_;
      if (!tmp.isModifiable()) {
        chunks_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void setChunks(
        int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
      value.getClass();
  ensureChunksIsMutable();
      chunks_.set(index, value);
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void addChunks(org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
      value.getClass();
  ensureChunksIsMutable();
      chunks_.add(value);
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void addChunks(
        int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
      value.getClass();
  ensureChunksIsMutable();
      chunks_.add(index, value);
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void addAllChunks(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> values) {
      ensureChunksIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, chunks_);
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void clearChunks() {
      chunks_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The set of chunks that compose this chunked text.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
     */
    private void removeChunks(int index) {
      ensureChunksIsMutable();
      chunks_.remove(index);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ChunkedText allows composing a single string of multiple chunks with
     * different formatting. In addition to this, a chunk can also be composed of an
     * image that gets inlined with the surrounding text chunks. Image chunks are
     * aligned to the text baseline. Chunked text flows independently from the
     * chunked regions. Line wrapping is supported across different chunks. For
     * example a string composed of three chunks that needs to be wrapped in two
     * lines will be wrapped as follows:
     * [[chunk a] [image] [chunk]]
     * [[b]]
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.ChunkedText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.ChunkedText)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedTextOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> getChunksList() {
        return java.util.Collections.unmodifiableList(
            instance.getChunksList());
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      @java.lang.Override
      public int getChunksCount() {
        return instance.getChunksCount();
      }/**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk getChunks(int index) {
        return instance.getChunks(index);
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder setChunks(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
        copyOnWrite();
        instance.setChunks(index, value);
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder setChunks(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.Builder builderForValue) {
        copyOnWrite();
        instance.setChunks(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder addChunks(org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
        copyOnWrite();
        instance.addChunks(value);
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder addChunks(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk value) {
        copyOnWrite();
        instance.addChunks(index, value);
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder addChunks(
          org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.Builder builderForValue) {
        copyOnWrite();
        instance.addChunks(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder addChunks(
          int index, org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.Builder builderForValue) {
        copyOnWrite();
        instance.addChunks(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder addAllChunks(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> values) {
        copyOnWrite();
        instance.addAllChunks(values);
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder clearChunks() {
        copyOnWrite();
        instance.clearChunks();
        return this;
      }
      /**
       * <pre>
       * The set of chunks that compose this chunked text.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.ui.piet.Chunk chunks = 1;</code>
       */
      public Builder removeChunks(int index) {
        copyOnWrite();
        instance.removeChunks(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.ChunkedText)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "chunks_",
              org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.class,
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.ChunkedText)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText DEFAULT_INSTANCE;
    static {
      ChunkedText defaultInstance = new ChunkedText();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChunkedText.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkedText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChunkedText> PARSER;

    public static com.google.protobuf.Parser<ChunkedText> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.Chunk)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     * @return Whether the textChunk field is set.
     */
    boolean hasTextChunk();
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     * @return The textChunk.
     */
    org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk getTextChunk();

    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     * @return Whether the imageChunk field is set.
     */
    boolean hasImageChunk();
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     * @return The imageChunk.
     */
    org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk getImageChunk();

    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     * @return Whether the actions field is set.
     */
    boolean hasActions();
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     * @return The actions.
     */
    org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions();

    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     * @return Whether the actionsBinding field is set.
     */
    boolean hasActionsBinding();
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     * @return The actionsBinding.
     */
    org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef getActionsBinding();

    public org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.ContentCase getContentCase();

    public org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.ActionsDataCase getActionsDataCase();
  }
  /**
   * <pre>
   * A single region of content within a ChunkedText. A chunk can either be
   * composed of an image or a styled text chunk.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.Chunk}
   */
  public  static final class Chunk extends
      com.google.protobuf.GeneratedMessageLite<
          Chunk, Chunk.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.Chunk)
      ChunkOrBuilder {
    private Chunk() {
    }
    private int bitField0_;
    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase {
      TEXT_CHUNK(1),
      IMAGE_CHUNK(2),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 1: return TEXT_CHUNK;
          case 2: return IMAGE_CHUNK;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    private void clearContent() {
      contentCase_ = 0;
      content_ = null;
    }

    private int actionsDataCase_ = 0;
    private java.lang.Object actionsData_;
    public enum ActionsDataCase {
      ACTIONS(3),
      ACTIONS_BINDING(4),
      ACTIONSDATA_NOT_SET(0);
      private final int value;
      private ActionsDataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActionsDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static ActionsDataCase forNumber(int value) {
        switch (value) {
          case 3: return ACTIONS;
          case 4: return ACTIONS_BINDING;
          case 0: return ACTIONSDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ActionsDataCase
    getActionsDataCase() {
      return ActionsDataCase.forNumber(
          actionsDataCase_);
    }

    private void clearActionsData() {
      actionsDataCase_ = 0;
      actionsData_ = null;
    }

    public static final int TEXT_CHUNK_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     */
    @java.lang.Override
    public boolean hasTextChunk() {
      return contentCase_ == 1;
    }
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk getTextChunk() {
      if (contentCase_ == 1) {
         return (org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.getDefaultInstance();
    }
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     */
    private void setTextChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk value) {
      value.getClass();
  content_ = value;
      contentCase_ = 1;
    }
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     */
    private void mergeTextChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk value) {
      value.getClass();
  if (contentCase_ == 1 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.newBuilder((org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 1;
    }
    /**
     * <pre>
     * A styled piece of text content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
     */
    private void clearTextChunk() {
      if (contentCase_ == 1) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static final int IMAGE_CHUNK_FIELD_NUMBER = 2;
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     */
    @java.lang.Override
    public boolean hasImageChunk() {
      return contentCase_ == 2;
    }
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk getImageChunk() {
      if (contentCase_ == 2) {
         return (org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.getDefaultInstance();
    }
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     */
    private void setImageChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk value) {
      value.getClass();
  content_ = value;
      contentCase_ = 2;
    }
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     */
    private void mergeImageChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk value) {
      value.getClass();
  if (contentCase_ == 2 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.newBuilder((org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 2;
    }
    /**
     * <pre>
     * A styled piece of image content.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
     */
    private void clearImageChunk() {
      if (contentCase_ == 2) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static final int ACTIONS_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     */
    @java.lang.Override
    public boolean hasActions() {
      return actionsDataCase_ == 3;
    }
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions() {
      if (actionsDataCase_ == 3) {
         return (org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions) actionsData_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.getDefaultInstance();
    }
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     */
    private void setActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
      value.getClass();
  actionsData_ = value;
      actionsDataCase_ = 3;
    }
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     */
    private void mergeActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
      value.getClass();
  if (actionsDataCase_ == 3 &&
          actionsData_ != org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.getDefaultInstance()) {
        actionsData_ = org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.newBuilder((org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions) actionsData_)
            .mergeFrom(value).buildPartial();
      } else {
        actionsData_ = value;
      }
      actionsDataCase_ = 3;
    }
    /**
     * <pre>
     * Inlined actions.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
     */
    private void clearActions() {
      if (actionsDataCase_ == 3) {
        actionsDataCase_ = 0;
        actionsData_ = null;
      }
    }

    public static final int ACTIONS_BINDING_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     */
    @java.lang.Override
    public boolean hasActionsBinding() {
      return actionsDataCase_ == 4;
    }
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef getActionsBinding() {
      if (actionsDataCase_ == 4) {
         return (org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef) actionsData_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef.getDefaultInstance();
    }
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     */
    private void setActionsBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef value) {
      value.getClass();
  actionsData_ = value;
      actionsDataCase_ = 4;
    }
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     */
    private void mergeActionsBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef value) {
      value.getClass();
  if (actionsDataCase_ == 4 &&
          actionsData_ != org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef.getDefaultInstance()) {
        actionsData_ = org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef.newBuilder((org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef) actionsData_)
            .mergeFrom(value).buildPartial();
      } else {
        actionsData_ = value;
      }
      actionsDataCase_ = 4;
    }
    /**
     * <pre>
     * Actions from a template, bound at runtime.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
     */
    private void clearActionsBinding() {
      if (actionsDataCase_ == 4) {
        actionsDataCase_ = 0;
        actionsData_ = null;
      }
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A single region of content within a ChunkedText. A chunk can either be
     * composed of an image or a styled text chunk.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.Chunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.Chunk)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.ChunkOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public ContentCase
          getContentCase() {
        return instance.getContentCase();
      }

      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }

      @java.lang.Override
      public ActionsDataCase
          getActionsDataCase() {
        return instance.getActionsDataCase();
      }

      public Builder clearActionsData() {
        copyOnWrite();
        instance.clearActionsData();
        return this;
      }


      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      @java.lang.Override
      public boolean hasTextChunk() {
        return instance.hasTextChunk();
      }
      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk getTextChunk() {
        return instance.getTextChunk();
      }
      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      public Builder setTextChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk value) {
        copyOnWrite();
        instance.setTextChunk(value);
        return this;
      }
      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      public Builder setTextChunk(
          org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.Builder builderForValue) {
        copyOnWrite();
        instance.setTextChunk(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      public Builder mergeTextChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk value) {
        copyOnWrite();
        instance.mergeTextChunk(value);
        return this;
      }
      /**
       * <pre>
       * A styled piece of text content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledTextChunk text_chunk = 1;</code>
       */
      public Builder clearTextChunk() {
        copyOnWrite();
        instance.clearTextChunk();
        return this;
      }

      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      @java.lang.Override
      public boolean hasImageChunk() {
        return instance.hasImageChunk();
      }
      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk getImageChunk() {
        return instance.getImageChunk();
      }
      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      public Builder setImageChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk value) {
        copyOnWrite();
        instance.setImageChunk(value);
        return this;
      }
      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      public Builder setImageChunk(
          org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.Builder builderForValue) {
        copyOnWrite();
        instance.setImageChunk(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      public Builder mergeImageChunk(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk value) {
        copyOnWrite();
        instance.mergeImageChunk(value);
        return this;
      }
      /**
       * <pre>
       * A styled piece of image content.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.StyledImageChunk image_chunk = 2;</code>
       */
      public Builder clearImageChunk() {
        copyOnWrite();
        instance.clearImageChunk();
        return this;
      }

      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      @java.lang.Override
      public boolean hasActions() {
        return instance.hasActions();
      }
      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions getActions() {
        return instance.getActions();
      }
      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      public Builder setActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.setActions(value);
        return this;
      }
      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      public Builder setActions(
          org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.Builder builderForValue) {
        copyOnWrite();
        instance.setActions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      public Builder mergeActions(org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.mergeActions(value);
        return this;
      }
      /**
       * <pre>
       * Inlined actions.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Actions actions = 3;</code>
       */
      public Builder clearActions() {
        copyOnWrite();
        instance.clearActions();
        return this;
      }

      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      @java.lang.Override
      public boolean hasActionsBinding() {
        return instance.hasActionsBinding();
      }
      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef getActionsBinding() {
        return instance.getActionsBinding();
      }
      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      public Builder setActionsBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef value) {
        copyOnWrite();
        instance.setActionsBinding(value);
        return this;
      }
      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      public Builder setActionsBinding(
          org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef.Builder builderForValue) {
        copyOnWrite();
        instance.setActionsBinding(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      public Builder mergeActionsBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef value) {
        copyOnWrite();
        instance.mergeActionsBinding(value);
        return this;
      }
      /**
       * <pre>
       * Actions from a template, bound at runtime.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ActionsBindingRef actions_binding = 4;</code>
       */
      public Builder clearActionsBinding() {
        copyOnWrite();
        instance.clearActionsBinding();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.Chunk)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "content_",
              "contentCase_",
              "actionsData_",
              "actionsDataCase_",
              "bitField0_",
              org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.class,
              org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.class,
              org.chromium.components.feed.core.proto.ui.piet.ActionsProto.Actions.class,
              org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ActionsBindingRef.class,
            };
            java.lang.String info =
                "\u0001\u0004\u0002\u0001\u0001\u0004\u0004\u0000\u0000\u0003\u0001\u143c\u0000\u0002" +
                "\u143c\u0000\u0003\u143c\u0001\u0004\u103c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.Chunk)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk DEFAULT_INSTANCE;
    static {
      Chunk defaultInstance = new Chunk();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Chunk.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.Chunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Chunk> PARSER;

    public static com.google.protobuf.Parser<Chunk> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StyledImageChunkOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.StyledImageChunk)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                StyledImageChunk, StyledImageChunk.Builder> {

    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     * @return Whether the styleReferences field is set.
     */
    boolean hasStyleReferences();
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     * @return The styleReferences.
     */
    org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences();

    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     * @return Whether the imageBinding field is set.
     */
    boolean hasImageBinding();
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     * @return The imageBinding.
     */
    org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef getImageBinding();

    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     * @return Whether the image field is set.
     */
    boolean hasImage();
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     * @return The image.
     */
    org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image getImage();

    public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.ContentCase getContentCase();
  }
  /**
   * <pre>
   * A single region of image content that has a particular style applied to it.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.StyledImageChunk}
   */
  public  static final class StyledImageChunk extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        StyledImageChunk, StyledImageChunk.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.StyledImageChunk)
      StyledImageChunkOrBuilder {
    private StyledImageChunk() {
    }
    private int bitField0_;
    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase {
      IMAGE_BINDING(2),
      IMAGE(3),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 2: return IMAGE_BINDING;
          case 3: return IMAGE;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    private void clearContent() {
      contentCase_ = 0;
      content_ = null;
    }

    public static final int STYLE_REFERENCES_FIELD_NUMBER = 1;
    private org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack styleReferences_;
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.Override
    public boolean hasStyleReferences() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
      return styleReferences_ == null ? org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : styleReferences_;
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    private void setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  styleReferences_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  if (styleReferences_ != null &&
          styleReferences_ != org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        styleReferences_ =
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.newBuilder(styleReferences_).mergeFrom(value).buildPartial();
      } else {
        styleReferences_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    private void clearStyleReferences() {  styleReferences_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int IMAGE_BINDING_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     */
    @java.lang.Override
    public boolean hasImageBinding() {
      return contentCase_ == 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef getImageBinding() {
      if (contentCase_ == 2) {
         return (org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef.getDefaultInstance();
    }
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     */
    private void setImageBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef value) {
      value.getClass();
  content_ = value;
      contentCase_ = 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     */
    private void mergeImageBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef value) {
      value.getClass();
  if (contentCase_ == 2 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef.newBuilder((org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for an Image.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
     */
    private void clearImageBinding() {
      if (contentCase_ == 2) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static final int IMAGE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     */
    @java.lang.Override
    public boolean hasImage() {
      return contentCase_ == 3;
    }
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image getImage() {
      if (contentCase_ == 3) {
         return (org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image.getDefaultInstance();
    }
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     */
    private void setImage(org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image value) {
      value.getClass();
  content_ = value;
      contentCase_ = 3;
    }
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     */
    private void mergeImage(org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image value) {
      value.getClass();
  if (contentCase_ == 3 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image.newBuilder((org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 3;
    }
    /**
     * <pre>
     * The image to be displayed.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
     */
    private void clearImage() {
      if (contentCase_ == 3) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A single region of image content that has a particular style applied to it.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.StyledImageChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.StyledImageChunk)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunkOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public ContentCase
          getContentCase() {
        return instance.getContentCase();
      }

      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }


      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      @java.lang.Override
      public boolean hasStyleReferences() {
        return instance.hasStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
        return instance.getStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setStyleReferences(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder setStyleReferences(
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setStyleReferences(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeStyleReferences(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder clearStyleReferences() {  copyOnWrite();
        instance.clearStyleReferences();
        return this;
      }

      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      @java.lang.Override
      public boolean hasImageBinding() {
        return instance.hasImageBinding();
      }
      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef getImageBinding() {
        return instance.getImageBinding();
      }
      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      public Builder setImageBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef value) {
        copyOnWrite();
        instance.setImageBinding(value);
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      public Builder setImageBinding(
          org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef.Builder builderForValue) {
        copyOnWrite();
        instance.setImageBinding(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      public Builder mergeImageBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef value) {
        copyOnWrite();
        instance.mergeImageBinding(value);
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for an Image.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ImageBindingRef image_binding = 2;</code>
       */
      public Builder clearImageBinding() {
        copyOnWrite();
        instance.clearImageBinding();
        return this;
      }

      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      @java.lang.Override
      public boolean hasImage() {
        return instance.hasImage();
      }
      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image getImage() {
        return instance.getImage();
      }
      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      public Builder setImage(org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image value) {
        copyOnWrite();
        instance.setImage(value);
        return this;
      }
      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      public Builder setImage(
          org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image.Builder builderForValue) {
        copyOnWrite();
        instance.setImage(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      public Builder mergeImage(org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image value) {
        copyOnWrite();
        instance.mergeImage(value);
        return this;
      }
      /**
       * <pre>
       * The image to be displayed.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.Image image = 3;</code>
       */
      public Builder clearImage() {
        copyOnWrite();
        instance.clearImage();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.StyledImageChunk)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "content_",
              "contentCase_",
              "bitField0_",
              "styleReferences_",
              org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ImageBindingRef.class,
              org.chromium.components.feed.core.proto.ui.piet.ImagesProto.Image.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0001\u0001\u0001\u0003\u0003\u0000\u0000\u0002\u0001\u1409\u0000\u0002" +
                "\u103c\u0000\u0003\u143c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.StyledImageChunk)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk DEFAULT_INSTANCE;
    static {
      StyledImageChunk defaultInstance = new StyledImageChunk();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StyledImageChunk.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledImageChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StyledImageChunk> PARSER;

    public static com.google.protobuf.Parser<StyledImageChunk> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StyledTextChunkOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.ui.piet.StyledTextChunk)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                StyledTextChunk, StyledTextChunk.Builder> {

    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     * @return Whether the styleReferences field is set.
     */
    boolean hasStyleReferences();
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     * @return The styleReferences.
     */
    org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences();

    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     * @return Whether the parameterizedTextBinding field is set.
     */
    boolean hasParameterizedTextBinding();
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     * @return The parameterizedTextBinding.
     */
    org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef getParameterizedTextBinding();

    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     * @return Whether the parameterizedText field is set.
     */
    boolean hasParameterizedText();
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     * @return The parameterizedText.
     */
    org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText getParameterizedText();

    public org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.ContentCase getContentCase();
  }
  /**
   * <pre>
   * A single region of text content that has styles applied to it.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.ui.piet.StyledTextChunk}
   */
  public  static final class StyledTextChunk extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        StyledTextChunk, StyledTextChunk.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.ui.piet.StyledTextChunk)
      StyledTextChunkOrBuilder {
    private StyledTextChunk() {
    }
    private int bitField0_;
    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase {
      PARAMETERIZED_TEXT_BINDING(2),
      PARAMETERIZED_TEXT(3),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 2: return PARAMETERIZED_TEXT_BINDING;
          case 3: return PARAMETERIZED_TEXT;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    private void clearContent() {
      contentCase_ = 0;
      content_ = null;
    }

    public static final int STYLE_REFERENCES_FIELD_NUMBER = 1;
    private org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack styleReferences_;
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.Override
    public boolean hasStyleReferences() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
      return styleReferences_ == null ? org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : styleReferences_;
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    private void setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  styleReferences_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
      value.getClass();
  if (styleReferences_ != null &&
          styleReferences_ != org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        styleReferences_ =
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.newBuilder(styleReferences_).mergeFrom(value).buildPartial();
      } else {
        styleReferences_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Styles applied to this chunk.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
     */
    private void clearStyleReferences() {  styleReferences_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PARAMETERIZED_TEXT_BINDING_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     */
    @java.lang.Override
    public boolean hasParameterizedTextBinding() {
      return contentCase_ == 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef getParameterizedTextBinding() {
      if (contentCase_ == 2) {
         return (org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef.getDefaultInstance();
    }
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     */
    private void setParameterizedTextBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef value) {
      value.getClass();
  content_ = value;
      contentCase_ = 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     */
    private void mergeParameterizedTextBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef value) {
      value.getClass();
  if (contentCase_ == 2 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef.newBuilder((org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 2;
    }
    /**
     * <pre>
     * The binding to the BindingValue for a ParameterizedText.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
     */
    private void clearParameterizedTextBinding() {
      if (contentCase_ == 2) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static final int PARAMETERIZED_TEXT_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     */
    @java.lang.Override
    public boolean hasParameterizedText() {
      return contentCase_ == 3;
    }
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText getParameterizedText() {
      if (contentCase_ == 3) {
         return (org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText) content_;
      }
      return org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.getDefaultInstance();
    }
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     */
    private void setParameterizedText(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText value) {
      value.getClass();
  content_ = value;
      contentCase_ = 3;
    }
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     */
    private void mergeParameterizedText(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText value) {
      value.getClass();
  if (contentCase_ == 3 &&
          content_ != org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.getDefaultInstance()) {
        content_ = org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.newBuilder((org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText) content_)
            .mergeFrom(value).buildPartial();
      } else {
        content_ = value;
      }
      contentCase_ = 3;
    }
    /**
     * <pre>
     * The text to display.
     * </pre>
     *
     * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
     */
    private void clearParameterizedText() {
      if (contentCase_ == 3) {
        contentCase_ = 0;
        content_ = null;
      }
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A single region of text content that has styles applied to it.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.ui.piet.StyledTextChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.ui.piet.StyledTextChunk)
        org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunkOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public ContentCase
          getContentCase() {
        return instance.getContentCase();
      }

      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }


      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      @java.lang.Override
      public boolean hasStyleReferences() {
        return instance.hasStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
        return instance.getStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder setStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setStyleReferences(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder setStyleReferences(
          org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setStyleReferences(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder mergeStyleReferences(org.chromium.components.feed.core.proto.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeStyleReferences(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to this chunk.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.piet.StyleIdsStack style_references = 1;</code>
       */
      public Builder clearStyleReferences() {  copyOnWrite();
        instance.clearStyleReferences();
        return this;
      }

      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      @java.lang.Override
      public boolean hasParameterizedTextBinding() {
        return instance.hasParameterizedTextBinding();
      }
      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef getParameterizedTextBinding() {
        return instance.getParameterizedTextBinding();
      }
      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      public Builder setParameterizedTextBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef value) {
        copyOnWrite();
        instance.setParameterizedTextBinding(value);
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      public Builder setParameterizedTextBinding(
          org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef.Builder builderForValue) {
        copyOnWrite();
        instance.setParameterizedTextBinding(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      public Builder mergeParameterizedTextBinding(org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef value) {
        copyOnWrite();
        instance.mergeParameterizedTextBinding(value);
        return this;
      }
      /**
       * <pre>
       * The binding to the BindingValue for a ParameterizedText.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedTextBindingRef parameterized_text_binding = 2;</code>
       */
      public Builder clearParameterizedTextBinding() {
        copyOnWrite();
        instance.clearParameterizedTextBinding();
        return this;
      }

      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      @java.lang.Override
      public boolean hasParameterizedText() {
        return instance.hasParameterizedText();
      }
      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText getParameterizedText() {
        return instance.getParameterizedText();
      }
      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      public Builder setParameterizedText(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText value) {
        copyOnWrite();
        instance.setParameterizedText(value);
        return this;
      }
      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      public Builder setParameterizedText(
          org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.Builder builderForValue) {
        copyOnWrite();
        instance.setParameterizedText(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      public Builder mergeParameterizedText(org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText value) {
        copyOnWrite();
        instance.mergeParameterizedText(value);
        return this;
      }
      /**
       * <pre>
       * The text to display.
       * </pre>
       *
       * <code>.components.feed.core.proto.ui.piet.ParameterizedText parameterized_text = 3;</code>
       */
      public Builder clearParameterizedText() {
        copyOnWrite();
        instance.clearParameterizedText();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.ui.piet.StyledTextChunk)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "content_",
              "contentCase_",
              "bitField0_",
              "styleReferences_",
              org.chromium.components.feed.core.proto.ui.piet.BindingRefsProto.ParameterizedTextBindingRef.class,
              org.chromium.components.feed.core.proto.ui.piet.TextProto.ParameterizedText.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0001\u0001\u0001\u0003\u0003\u0000\u0000\u0001\u0001\u1409\u0000\u0002" +
                "\u103c\u0000\u0003\u103c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.ui.piet.StyledTextChunk)
    private static final org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk DEFAULT_INSTANCE;
    static {
      StyledTextChunk defaultInstance = new StyledTextChunk();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StyledTextChunk.class, defaultInstance);
    }

    public static org.chromium.components.feed.core.proto.ui.piet.TextProto.StyledTextChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StyledTextChunk> PARSER;

    public static com.google.protobuf.Parser<StyledTextChunk> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
