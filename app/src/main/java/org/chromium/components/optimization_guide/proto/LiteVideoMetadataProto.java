// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lite_video_metadata.proto

package org.chromium.components.optimization_guide.proto;

public final class LiteVideoMetadataProto {
  private LiteVideoMetadataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface LiteVideoHintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.LiteVideoHint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     * @return Whether the targetVideoResolution field is set.
     */
    boolean hasTargetVideoResolution();
    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     * @return The targetVideoResolution.
     */
    long getTargetVideoResolution();

    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     * @return Whether the targetDownlinkBandwidthKbps field is set.
     */
    boolean hasTargetDownlinkBandwidthKbps();
    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     * @return The targetDownlinkBandwidthKbps.
     */
    long getTargetDownlinkBandwidthKbps();

    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     * @return Whether the targetDownlinkRttLatency field is set.
     */
    boolean hasTargetDownlinkRttLatency();
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     * @return The targetDownlinkRttLatency.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getTargetDownlinkRttLatency();

    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     * @return Whether the kilobytesToBufferBeforeThrottle field is set.
     */
    boolean hasKilobytesToBufferBeforeThrottle();
    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     * @return The kilobytesToBufferBeforeThrottle.
     */
    long getKilobytesToBufferBeforeThrottle();

    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     * @return Whether the maxThrottlingDelay field is set.
     */
    boolean hasMaxThrottlingDelay();
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     * @return The maxThrottlingDelay.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxThrottlingDelay();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.LiteVideoHint}
   */
  public  static final class LiteVideoHint extends
      com.google.protobuf.GeneratedMessageLite<
          LiteVideoHint, LiteVideoHint.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.LiteVideoHint)
      LiteVideoHintOrBuilder {
    private LiteVideoHint() {
    }
    private int bitField0_;
    public static final int TARGET_VIDEO_RESOLUTION_FIELD_NUMBER = 1;
    private long targetVideoResolution_;
    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     * @return Whether the targetVideoResolution field is set.
     */
    @java.lang.Override
    public boolean hasTargetVideoResolution() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     * @return The targetVideoResolution.
     */
    @java.lang.Override
    public long getTargetVideoResolution() {
      return targetVideoResolution_;
    }
    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     * @param value The targetVideoResolution to set.
     */
    private void setTargetVideoResolution(long value) {
      bitField0_ |= 0x00000001;
      targetVideoResolution_ = value;
    }
    /**
     * <pre>
     * The target video resolution for throttling. Initially unused.
     * </pre>
     *
     * <code>optional int64 target_video_resolution = 1;</code>
     */
    private void clearTargetVideoResolution() {
      bitField0_ = (bitField0_ & ~0x00000001);
      targetVideoResolution_ = 0L;
    }

    public static final int TARGET_DOWNLINK_BANDWIDTH_KBPS_FIELD_NUMBER = 2;
    private long targetDownlinkBandwidthKbps_;
    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     * @return Whether the targetDownlinkBandwidthKbps field is set.
     */
    @java.lang.Override
    public boolean hasTargetDownlinkBandwidthKbps() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     * @return The targetDownlinkBandwidthKbps.
     */
    @java.lang.Override
    public long getTargetDownlinkBandwidthKbps() {
      return targetDownlinkBandwidthKbps_;
    }
    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     * @param value The targetDownlinkBandwidthKbps to set.
     */
    private void setTargetDownlinkBandwidthKbps(long value) {
      bitField0_ |= 0x00000002;
      targetDownlinkBandwidthKbps_ = value;
    }
    /**
     * <pre>
     * The network downlink bandwidth target in kilobits per second used to
     * calculate the throttling delay on media requests.
     * </pre>
     *
     * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
     */
    private void clearTargetDownlinkBandwidthKbps() {
      bitField0_ = (bitField0_ & ~0x00000002);
      targetDownlinkBandwidthKbps_ = 0L;
    }

    public static final int TARGET_DOWNLINK_RTT_LATENCY_FIELD_NUMBER = 3;
    private org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration targetDownlinkRttLatency_;
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     */
    @java.lang.Override
    public boolean hasTargetDownlinkRttLatency() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getTargetDownlinkRttLatency() {
      return targetDownlinkRttLatency_ == null ? org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance() : targetDownlinkRttLatency_;
    }
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     */
    private void setTargetDownlinkRttLatency(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  targetDownlinkRttLatency_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTargetDownlinkRttLatency(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  if (targetDownlinkRttLatency_ != null &&
          targetDownlinkRttLatency_ != org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance()) {
        targetDownlinkRttLatency_ =
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.newBuilder(targetDownlinkRttLatency_).mergeFrom(value).buildPartial();
      } else {
        targetDownlinkRttLatency_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * The network downlink rtt target latency used to calculate the
     * throttling delay on media requests.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
     */
    private void clearTargetDownlinkRttLatency() {  targetDownlinkRttLatency_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int KILOBYTES_TO_BUFFER_BEFORE_THROTTLE_FIELD_NUMBER = 4;
    private long kilobytesToBufferBeforeThrottle_;
    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     * @return Whether the kilobytesToBufferBeforeThrottle field is set.
     */
    @java.lang.Override
    public boolean hasKilobytesToBufferBeforeThrottle() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     * @return The kilobytesToBufferBeforeThrottle.
     */
    @java.lang.Override
    public long getKilobytesToBufferBeforeThrottle() {
      return kilobytesToBufferBeforeThrottle_;
    }
    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     * @param value The kilobytesToBufferBeforeThrottle to set.
     */
    private void setKilobytesToBufferBeforeThrottle(long value) {
      bitField0_ |= 0x00000008;
      kilobytesToBufferBeforeThrottle_ = value;
    }
    /**
     * <pre>
     * The number of kilobytes for media to be observed before starting to
     * throttle requests.
     * </pre>
     *
     * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
     */
    private void clearKilobytesToBufferBeforeThrottle() {
      bitField0_ = (bitField0_ & ~0x00000008);
      kilobytesToBufferBeforeThrottle_ = 0L;
    }

    public static final int MAX_THROTTLING_DELAY_FIELD_NUMBER = 5;
    private org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration maxThrottlingDelay_;
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     */
    @java.lang.Override
    public boolean hasMaxThrottlingDelay() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxThrottlingDelay() {
      return maxThrottlingDelay_ == null ? org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance() : maxThrottlingDelay_;
    }
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     */
    private void setMaxThrottlingDelay(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  maxThrottlingDelay_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMaxThrottlingDelay(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  if (maxThrottlingDelay_ != null &&
          maxThrottlingDelay_ != org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance()) {
        maxThrottlingDelay_ =
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.newBuilder(maxThrottlingDelay_).mergeFrom(value).buildPartial();
      } else {
        maxThrottlingDelay_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * The maximum delay a throttle can introduce for a media request in
     * milliseconds.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
     */
    private void clearMaxThrottlingDelay() {  maxThrottlingDelay_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.LiteVideoHint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.LiteVideoHint)
        org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHintOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The target video resolution for throttling. Initially unused.
       * </pre>
       *
       * <code>optional int64 target_video_resolution = 1;</code>
       * @return Whether the targetVideoResolution field is set.
       */
      @java.lang.Override
      public boolean hasTargetVideoResolution() {
        return instance.hasTargetVideoResolution();
      }
      /**
       * <pre>
       * The target video resolution for throttling. Initially unused.
       * </pre>
       *
       * <code>optional int64 target_video_resolution = 1;</code>
       * @return The targetVideoResolution.
       */
      @java.lang.Override
      public long getTargetVideoResolution() {
        return instance.getTargetVideoResolution();
      }
      /**
       * <pre>
       * The target video resolution for throttling. Initially unused.
       * </pre>
       *
       * <code>optional int64 target_video_resolution = 1;</code>
       * @param value The targetVideoResolution to set.
       * @return This builder for chaining.
       */
      public Builder setTargetVideoResolution(long value) {
        copyOnWrite();
        instance.setTargetVideoResolution(value);
        return this;
      }
      /**
       * <pre>
       * The target video resolution for throttling. Initially unused.
       * </pre>
       *
       * <code>optional int64 target_video_resolution = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetVideoResolution() {
        copyOnWrite();
        instance.clearTargetVideoResolution();
        return this;
      }

      /**
       * <pre>
       * The network downlink bandwidth target in kilobits per second used to
       * calculate the throttling delay on media requests.
       * </pre>
       *
       * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
       * @return Whether the targetDownlinkBandwidthKbps field is set.
       */
      @java.lang.Override
      public boolean hasTargetDownlinkBandwidthKbps() {
        return instance.hasTargetDownlinkBandwidthKbps();
      }
      /**
       * <pre>
       * The network downlink bandwidth target in kilobits per second used to
       * calculate the throttling delay on media requests.
       * </pre>
       *
       * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
       * @return The targetDownlinkBandwidthKbps.
       */
      @java.lang.Override
      public long getTargetDownlinkBandwidthKbps() {
        return instance.getTargetDownlinkBandwidthKbps();
      }
      /**
       * <pre>
       * The network downlink bandwidth target in kilobits per second used to
       * calculate the throttling delay on media requests.
       * </pre>
       *
       * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
       * @param value The targetDownlinkBandwidthKbps to set.
       * @return This builder for chaining.
       */
      public Builder setTargetDownlinkBandwidthKbps(long value) {
        copyOnWrite();
        instance.setTargetDownlinkBandwidthKbps(value);
        return this;
      }
      /**
       * <pre>
       * The network downlink bandwidth target in kilobits per second used to
       * calculate the throttling delay on media requests.
       * </pre>
       *
       * <code>optional int64 target_downlink_bandwidth_kbps = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetDownlinkBandwidthKbps() {
        copyOnWrite();
        instance.clearTargetDownlinkBandwidthKbps();
        return this;
      }

      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      @java.lang.Override
      public boolean hasTargetDownlinkRttLatency() {
        return instance.hasTargetDownlinkRttLatency();
      }
      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getTargetDownlinkRttLatency() {
        return instance.getTargetDownlinkRttLatency();
      }
      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      public Builder setTargetDownlinkRttLatency(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.setTargetDownlinkRttLatency(value);
        return this;
        }
      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      public Builder setTargetDownlinkRttLatency(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.Builder builderForValue) {
        copyOnWrite();
        instance.setTargetDownlinkRttLatency(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      public Builder mergeTargetDownlinkRttLatency(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.mergeTargetDownlinkRttLatency(value);
        return this;
      }
      /**
       * <pre>
       * The network downlink rtt target latency used to calculate the
       * throttling delay on media requests.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration target_downlink_rtt_latency = 3;</code>
       */
      public Builder clearTargetDownlinkRttLatency() {  copyOnWrite();
        instance.clearTargetDownlinkRttLatency();
        return this;
      }

      /**
       * <pre>
       * The number of kilobytes for media to be observed before starting to
       * throttle requests.
       * </pre>
       *
       * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
       * @return Whether the kilobytesToBufferBeforeThrottle field is set.
       */
      @java.lang.Override
      public boolean hasKilobytesToBufferBeforeThrottle() {
        return instance.hasKilobytesToBufferBeforeThrottle();
      }
      /**
       * <pre>
       * The number of kilobytes for media to be observed before starting to
       * throttle requests.
       * </pre>
       *
       * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
       * @return The kilobytesToBufferBeforeThrottle.
       */
      @java.lang.Override
      public long getKilobytesToBufferBeforeThrottle() {
        return instance.getKilobytesToBufferBeforeThrottle();
      }
      /**
       * <pre>
       * The number of kilobytes for media to be observed before starting to
       * throttle requests.
       * </pre>
       *
       * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
       * @param value The kilobytesToBufferBeforeThrottle to set.
       * @return This builder for chaining.
       */
      public Builder setKilobytesToBufferBeforeThrottle(long value) {
        copyOnWrite();
        instance.setKilobytesToBufferBeforeThrottle(value);
        return this;
      }
      /**
       * <pre>
       * The number of kilobytes for media to be observed before starting to
       * throttle requests.
       * </pre>
       *
       * <code>optional int64 kilobytes_to_buffer_before_throttle = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKilobytesToBufferBeforeThrottle() {
        copyOnWrite();
        instance.clearKilobytesToBufferBeforeThrottle();
        return this;
      }

      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      @java.lang.Override
      public boolean hasMaxThrottlingDelay() {
        return instance.hasMaxThrottlingDelay();
      }
      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxThrottlingDelay() {
        return instance.getMaxThrottlingDelay();
      }
      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      public Builder setMaxThrottlingDelay(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.setMaxThrottlingDelay(value);
        return this;
        }
      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      public Builder setMaxThrottlingDelay(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.Builder builderForValue) {
        copyOnWrite();
        instance.setMaxThrottlingDelay(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      public Builder mergeMaxThrottlingDelay(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.mergeMaxThrottlingDelay(value);
        return this;
      }
      /**
       * <pre>
       * The maximum delay a throttle can introduce for a media request in
       * milliseconds.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_throttling_delay = 5;</code>
       */
      public Builder clearMaxThrottlingDelay() {  copyOnWrite();
        instance.clearMaxThrottlingDelay();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.LiteVideoHint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "targetVideoResolution_",
              "targetDownlinkBandwidthKbps_",
              "targetDownlinkRttLatency_",
              "kilobytesToBufferBeforeThrottle_",
              "maxThrottlingDelay_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u1002\u0000\u0002" +
                "\u1002\u0001\u0003\u1009\u0002\u0004\u1002\u0003\u0005\u1009\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.LiteVideoHint)
    private static final org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint DEFAULT_INSTANCE;
    static {
      LiteVideoHint defaultInstance = new LiteVideoHint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LiteVideoHint.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LiteVideoHint> PARSER;

    public static com.google.protobuf.Parser<LiteVideoHint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LiteVideoMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.LiteVideoMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     * @return Whether the liteVideoHint field is set.
     */
    boolean hasLiteVideoHint();
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     * @return The liteVideoHint.
     */
    org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint getLiteVideoHint();
  }
  /**
   * <pre>
   * Optimization metadata associated with LiteVideos.
   * This is only populated for the LITE_VIDEO optimization type.
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.LiteVideoMetadata}
   */
  public  static final class LiteVideoMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          LiteVideoMetadata, LiteVideoMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.LiteVideoMetadata)
      LiteVideoMetadataOrBuilder {
    private LiteVideoMetadata() {
    }
    private int bitField0_;
    public static final int LITE_VIDEO_HINT_FIELD_NUMBER = 1;
    private org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint liteVideoHint_;
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     */
    @java.lang.Override
    public boolean hasLiteVideoHint() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint getLiteVideoHint() {
      return liteVideoHint_ == null ? org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.getDefaultInstance() : liteVideoHint_;
    }
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     */
    private void setLiteVideoHint(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint value) {
      value.getClass();
  liteVideoHint_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLiteVideoHint(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint value) {
      value.getClass();
  if (liteVideoHint_ != null &&
          liteVideoHint_ != org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.getDefaultInstance()) {
        liteVideoHint_ =
          org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.newBuilder(liteVideoHint_).mergeFrom(value).buildPartial();
      } else {
        liteVideoHint_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * A LiteVideo hint.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
     */
    private void clearLiteVideoHint() {  liteVideoHint_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Optimization metadata associated with LiteVideos.
     * This is only populated for the LITE_VIDEO optimization type.
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.LiteVideoMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.LiteVideoMetadata)
        org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadataOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      @java.lang.Override
      public boolean hasLiteVideoHint() {
        return instance.hasLiteVideoHint();
      }
      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint getLiteVideoHint() {
        return instance.getLiteVideoHint();
      }
      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      public Builder setLiteVideoHint(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint value) {
        copyOnWrite();
        instance.setLiteVideoHint(value);
        return this;
        }
      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      public Builder setLiteVideoHint(
          org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint.Builder builderForValue) {
        copyOnWrite();
        instance.setLiteVideoHint(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      public Builder mergeLiteVideoHint(org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoHint value) {
        copyOnWrite();
        instance.mergeLiteVideoHint(value);
        return this;
      }
      /**
       * <pre>
       * A LiteVideo hint.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.LiteVideoHint lite_video_hint = 1;</code>
       */
      public Builder clearLiteVideoHint() {  copyOnWrite();
        instance.clearLiteVideoHint();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.LiteVideoMetadata)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "liteVideoHint_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.LiteVideoMetadata)
    private static final org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata DEFAULT_INSTANCE;
    static {
      LiteVideoMetadata defaultInstance = new LiteVideoMetadata();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LiteVideoMetadata.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.LiteVideoMetadataProto.LiteVideoMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LiteVideoMetadata> PARSER;

    public static com.google.protobuf.Parser<LiteVideoMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
