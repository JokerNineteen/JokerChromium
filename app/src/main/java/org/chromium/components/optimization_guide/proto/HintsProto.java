// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hints.proto

package org.chromium.components.optimization_guide.proto;

public final class HintsProto {
  private HintsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code optimization_guide.proto.OptimizationType}
   */
  public enum OptimizationType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * This optimization blocks JavaScript on the page.
     * </pre>
     *
     * <code>NOSCRIPT = 1;</code>
     */
    NOSCRIPT(1),
    /**
     * <pre>
     * This optimization applies a set of ResourceLoadingHint(s) to load the
     * page.
     * </pre>
     *
     * <code>RESOURCE_LOADING = 2;</code>
     */
    RESOURCE_LOADING(2),
    /**
     * <pre>
     * This optimization redirects the navigation through a lite page server.
     * </pre>
     *
     * <code>LITE_PAGE_REDIRECT = 3;</code>
     */
    LITE_PAGE_REDIRECT(3),
    /**
     * <pre>
     * This optimization does nothing (no-op).
     * </pre>
     *
     * <code>OPTIMIZATION_NONE = 4;</code>
     */
    OPTIMIZATION_NONE(4),
    /**
     * <pre>
     * This optimization defers execution of parser-blocking script until after
     * parsing completes.
     * </pre>
     *
     * <code>DEFER_ALL_SCRIPT = 5;</code>
     */
    DEFER_ALL_SCRIPT(5),
    /**
     * <pre>
     * This optimization is used to provide aggregated performance information
     * about the page and pages it links to.
     * </pre>
     *
     * <code>PERFORMANCE_HINTS = 6;</code>
     */
    PERFORMANCE_HINTS(6),
    /**
     * <pre>
     * This optimization allows page loads going through the data reduction
     * proxy to be transformed by the proxy.
     * </pre>
     *
     * <code>LITE_PAGE = 7;</code>
     */
    LITE_PAGE(7),
    /**
     * <pre>
     * This optimization compresses public images.
     * </pre>
     *
     * <code>COMPRESS_PUBLIC_IMAGES = 8;</code>
     */
    COMPRESS_PUBLIC_IMAGES(8),
    /**
     * <pre>
     * This optimization provides the Loading Predictor with resources predicted
     * to be on the page.
     * </pre>
     *
     * <code>LOADING_PREDICTOR = 9;</code>
     */
    LOADING_PREDICTOR(9),
    /**
     * <pre>
     * This optimization provides information about hosts that historically
     * provide a fast and responsive user experience.
     * </pre>
     *
     * <code>FAST_HOST_HINTS = 10;</code>
     */
    FAST_HOST_HINTS(10),
    /**
     * <pre>
     * This optimization provides information about the effective delay for async
     * script execution.
     * </pre>
     *
     * <code>DELAY_ASYNC_SCRIPT_EXECUTION = 11;</code>
     */
    DELAY_ASYNC_SCRIPT_EXECUTION(11),
    /**
     * <pre>
     * This optimization provides information about the effective delay and
     * priority thresholds for delaying low priority requests.
     * </pre>
     *
     * <code>DELAY_COMPETING_LOW_PRIORITY_REQUESTS = 12;</code>
     */
    DELAY_COMPETING_LOW_PRIORITY_REQUESTS(12),
    /**
     * <pre>
     * This optimization provides information about how to throttle meda requests
     * to reduce the bitrate of adaptively streamed media.
     * </pre>
     *
     * <code>LITE_VIDEO = 13;</code>
     */
    LITE_VIDEO(13),
    /**
     * <pre>
     * This optimization is used to provide aggregated performance information
     * about pages linked to from the current page.
     * </pre>
     *
     * <code>LINK_PERFORMANCE = 14;</code>
     */
    LINK_PERFORMANCE(14),
    /**
     * <pre>
     * Detects if a page is a shopping page or not. A tradeoff has been made here
     * where the number of shopping page predictions for non-shopping pages is
     * increased to reduce the number of non-shopping page predictions for
     * shopping pages.
     * </pre>
     *
     * <code>SHOPPING_PAGE_PREDICTOR = 15;</code>
     */
    SHOPPING_PAGE_PREDICTOR(15),
    /**
     * <pre>
     * This optimization provides information about hosts that are identified as
     * commonly logged-in.
     * </pre>
     *
     * <code>LOGIN_DETECTION = 16;</code>
     */
    LOGIN_DETECTION(16),
    ;

    /**
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * This optimization blocks JavaScript on the page.
     * </pre>
     *
     * <code>NOSCRIPT = 1;</code>
     */
    public static final int NOSCRIPT_VALUE = 1;
    /**
     * <pre>
     * This optimization applies a set of ResourceLoadingHint(s) to load the
     * page.
     * </pre>
     *
     * <code>RESOURCE_LOADING = 2;</code>
     */
    public static final int RESOURCE_LOADING_VALUE = 2;
    /**
     * <pre>
     * This optimization redirects the navigation through a lite page server.
     * </pre>
     *
     * <code>LITE_PAGE_REDIRECT = 3;</code>
     */
    public static final int LITE_PAGE_REDIRECT_VALUE = 3;
    /**
     * <pre>
     * This optimization does nothing (no-op).
     * </pre>
     *
     * <code>OPTIMIZATION_NONE = 4;</code>
     */
    public static final int OPTIMIZATION_NONE_VALUE = 4;
    /**
     * <pre>
     * This optimization defers execution of parser-blocking script until after
     * parsing completes.
     * </pre>
     *
     * <code>DEFER_ALL_SCRIPT = 5;</code>
     */
    public static final int DEFER_ALL_SCRIPT_VALUE = 5;
    /**
     * <pre>
     * This optimization is used to provide aggregated performance information
     * about the page and pages it links to.
     * </pre>
     *
     * <code>PERFORMANCE_HINTS = 6;</code>
     */
    public static final int PERFORMANCE_HINTS_VALUE = 6;
    /**
     * <pre>
     * This optimization allows page loads going through the data reduction
     * proxy to be transformed by the proxy.
     * </pre>
     *
     * <code>LITE_PAGE = 7;</code>
     */
    public static final int LITE_PAGE_VALUE = 7;
    /**
     * <pre>
     * This optimization compresses public images.
     * </pre>
     *
     * <code>COMPRESS_PUBLIC_IMAGES = 8;</code>
     */
    public static final int COMPRESS_PUBLIC_IMAGES_VALUE = 8;
    /**
     * <pre>
     * This optimization provides the Loading Predictor with resources predicted
     * to be on the page.
     * </pre>
     *
     * <code>LOADING_PREDICTOR = 9;</code>
     */
    public static final int LOADING_PREDICTOR_VALUE = 9;
    /**
     * <pre>
     * This optimization provides information about hosts that historically
     * provide a fast and responsive user experience.
     * </pre>
     *
     * <code>FAST_HOST_HINTS = 10;</code>
     */
    public static final int FAST_HOST_HINTS_VALUE = 10;
    /**
     * <pre>
     * This optimization provides information about the effective delay for async
     * script execution.
     * </pre>
     *
     * <code>DELAY_ASYNC_SCRIPT_EXECUTION = 11;</code>
     */
    public static final int DELAY_ASYNC_SCRIPT_EXECUTION_VALUE = 11;
    /**
     * <pre>
     * This optimization provides information about the effective delay and
     * priority thresholds for delaying low priority requests.
     * </pre>
     *
     * <code>DELAY_COMPETING_LOW_PRIORITY_REQUESTS = 12;</code>
     */
    public static final int DELAY_COMPETING_LOW_PRIORITY_REQUESTS_VALUE = 12;
    /**
     * <pre>
     * This optimization provides information about how to throttle meda requests
     * to reduce the bitrate of adaptively streamed media.
     * </pre>
     *
     * <code>LITE_VIDEO = 13;</code>
     */
    public static final int LITE_VIDEO_VALUE = 13;
    /**
     * <pre>
     * This optimization is used to provide aggregated performance information
     * about pages linked to from the current page.
     * </pre>
     *
     * <code>LINK_PERFORMANCE = 14;</code>
     */
    public static final int LINK_PERFORMANCE_VALUE = 14;
    /**
     * <pre>
     * Detects if a page is a shopping page or not. A tradeoff has been made here
     * where the number of shopping page predictions for non-shopping pages is
     * increased to reduce the number of non-shopping page predictions for
     * shopping pages.
     * </pre>
     *
     * <code>SHOPPING_PAGE_PREDICTOR = 15;</code>
     */
    public static final int SHOPPING_PAGE_PREDICTOR_VALUE = 15;
    /**
     * <pre>
     * This optimization provides information about hosts that are identified as
     * commonly logged-in.
     * </pre>
     *
     * <code>LOGIN_DETECTION = 16;</code>
     */
    public static final int LOGIN_DETECTION_VALUE = 16;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OptimizationType valueOf(int value) {
      return forNumber(value);
    }

    public static OptimizationType forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNSPECIFIED;
        case 1: return NOSCRIPT;
        case 2: return RESOURCE_LOADING;
        case 3: return LITE_PAGE_REDIRECT;
        case 4: return OPTIMIZATION_NONE;
        case 5: return DEFER_ALL_SCRIPT;
        case 6: return PERFORMANCE_HINTS;
        case 7: return LITE_PAGE;
        case 8: return COMPRESS_PUBLIC_IMAGES;
        case 9: return LOADING_PREDICTOR;
        case 10: return FAST_HOST_HINTS;
        case 11: return DELAY_ASYNC_SCRIPT_EXECUTION;
        case 12: return DELAY_COMPETING_LOW_PRIORITY_REQUESTS;
        case 13: return LITE_VIDEO;
        case 14: return LINK_PERFORMANCE;
        case 15: return SHOPPING_PAGE_PREDICTOR;
        case 16: return LOGIN_DETECTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OptimizationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OptimizationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OptimizationType>() {
            @java.lang.Override
            public OptimizationType findValueByNumber(int number) {
              return OptimizationType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return OptimizationTypeVerifier.INSTANCE;
    }

    private static final class OptimizationTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new OptimizationTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return OptimizationType.forNumber(number) != null;
            }
          };

    private final int value;

    private OptimizationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:optimization_guide.proto.OptimizationType)
  }

  /**
   * <pre>
   * Presents semantics for how page load URLs should be matched.
   * </pre>
   *
   * Protobuf enum {@code optimization_guide.proto.KeyRepresentation}
   */
  public enum KeyRepresentation
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>REPRESENTATION_UNSPECIFIED = 0;</code>
     */
    REPRESENTATION_UNSPECIFIED(0),
    /**
     * <pre>
     * The suffix to match in the hostname of a page load URL.
     * Example: A host suffix of example.com would match pages with host
     * sports.example.com, but not fooexample.com.
     * </pre>
     *
     * <code>HOST_SUFFIX = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    HOST_SUFFIX(1),
    /**
     * <pre>
     * The full URL to match.
     * This will be an exact match of a page load URL, including query params and
     * fragments.
     * </pre>
     *
     * <code>FULL_URL = 2;</code>
     */
    FULL_URL(2),
    /**
     * <pre>
     * The host to match.
     * This will be an exact match of a page load host.
     * </pre>
     *
     * <code>HOST = 3;</code>
     */
    HOST(3),
    ;

    /**
     * <code>REPRESENTATION_UNSPECIFIED = 0;</code>
     */
    public static final int REPRESENTATION_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The suffix to match in the hostname of a page load URL.
     * Example: A host suffix of example.com would match pages with host
     * sports.example.com, but not fooexample.com.
     * </pre>
     *
     * <code>HOST_SUFFIX = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public static final int HOST_SUFFIX_VALUE = 1;
    /**
     * <pre>
     * The full URL to match.
     * This will be an exact match of a page load URL, including query params and
     * fragments.
     * </pre>
     *
     * <code>FULL_URL = 2;</code>
     */
    public static final int FULL_URL_VALUE = 2;
    /**
     * <pre>
     * The host to match.
     * This will be an exact match of a page load host.
     * </pre>
     *
     * <code>HOST = 3;</code>
     */
    public static final int HOST_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyRepresentation valueOf(int value) {
      return forNumber(value);
    }

    public static KeyRepresentation forNumber(int value) {
      switch (value) {
        case 0: return REPRESENTATION_UNSPECIFIED;
        case 1: return HOST_SUFFIX;
        case 2: return FULL_URL;
        case 3: return HOST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyRepresentation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyRepresentation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyRepresentation>() {
            @java.lang.Override
            public KeyRepresentation findValueByNumber(int number) {
              return KeyRepresentation.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return KeyRepresentationVerifier.INSTANCE;
    }

    private static final class KeyRepresentationVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new KeyRepresentationVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return KeyRepresentation.forNumber(number) != null;
            }
          };

    private final int value;

    private KeyRepresentation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:optimization_guide.proto.KeyRepresentation)
  }

  /**
   * Protobuf enum {@code optimization_guide.proto.HintSource}
   */
  public enum HintSource
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>HINT_SOURCE_UNKNOWN = 0;</code>
     */
    HINT_SOURCE_UNKNOWN(0),
    /**
     * <pre>
     * Served from the Chrome Optimization Hints Component.
     * </pre>
     *
     * <code>HINT_SOURCE_OPTIMIZATION_HINTS_COMPONENT = 1;</code>
     */
    HINT_SOURCE_OPTIMIZATION_HINTS_COMPONENT(1),
    /**
     * <pre>
     * Served from the Chrome Optimization Guide Service.
     * </pre>
     *
     * <code>HINT_SOURCE_OPTIMIZATION_GUIDE_SERVICE = 2;</code>
     */
    HINT_SOURCE_OPTIMIZATION_GUIDE_SERVICE(2),
    ;

    /**
     * <code>HINT_SOURCE_UNKNOWN = 0;</code>
     */
    public static final int HINT_SOURCE_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Served from the Chrome Optimization Hints Component.
     * </pre>
     *
     * <code>HINT_SOURCE_OPTIMIZATION_HINTS_COMPONENT = 1;</code>
     */
    public static final int HINT_SOURCE_OPTIMIZATION_HINTS_COMPONENT_VALUE = 1;
    /**
     * <pre>
     * Served from the Chrome Optimization Guide Service.
     * </pre>
     *
     * <code>HINT_SOURCE_OPTIMIZATION_GUIDE_SERVICE = 2;</code>
     */
    public static final int HINT_SOURCE_OPTIMIZATION_GUIDE_SERVICE_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HintSource valueOf(int value) {
      return forNumber(value);
    }

    public static HintSource forNumber(int value) {
      switch (value) {
        case 0: return HINT_SOURCE_UNKNOWN;
        case 1: return HINT_SOURCE_OPTIMIZATION_HINTS_COMPONENT;
        case 2: return HINT_SOURCE_OPTIMIZATION_GUIDE_SERVICE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HintSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HintSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HintSource>() {
            @java.lang.Override
            public HintSource findValueByNumber(int number) {
              return HintSource.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return HintSourceVerifier.INSTANCE;
    }

    private static final class HintSourceVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new HintSourceVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return HintSource.forNumber(number) != null;
            }
          };

    private final int value;

    private HintSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:optimization_guide.proto.HintSource)
  }

  public interface MatchedHintInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.MatchedHintInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return Whether the keyRepresentation field is set.
     */
    boolean hasKeyRepresentation();
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return The keyRepresentation.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation();

    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     * @return The version.
     */
    long getVersion();
  }
  /**
   * <pre>
   * Information about the hint that the client already has for a host.
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.MatchedHintInfo}
   */
  public  static final class MatchedHintInfo extends
      com.google.protobuf.GeneratedMessageLite<
          MatchedHintInfo, MatchedHintInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.MatchedHintInfo)
      MatchedHintInfoOrBuilder {
    private MatchedHintInfo() {
      key_ = "";
    }
    private int bitField0_;
    public static final int KEY_REPRESENTATION_FIELD_NUMBER = 1;
    private int keyRepresentation_;
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return Whether the keyRepresentation field is set.
     */
    @java.lang.Override
    public boolean hasKeyRepresentation() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return The keyRepresentation.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation() {
      org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation result = org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.forNumber(keyRepresentation_);
      return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.REPRESENTATION_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @param value The keyRepresentation to set.
     */
    private void setKeyRepresentation(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
      keyRepresentation_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     */
    private void clearKeyRepresentation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      keyRepresentation_ = 0;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.String key_;
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      return key_;
    }
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(key_);
    }
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @param value The key to set.
     */
    private void setKey(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      key_ = value;
    }
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     */
    private void clearKey() {
      bitField0_ = (bitField0_ & ~0x00000002);
      key_ = getDefaultInstance().getKey();
    }
    /**
     * <pre>
     * The key of the hint currently used for the host.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @param value The bytes for key to set.
     */
    private void setKeyBytes(
        com.google.protobuf.ByteString value) {
      key_ = value.toStringUtf8();
      bitField0_ |= 0x00000002;
    }

    public static final int VERSION_FIELD_NUMBER = 3;
    private long version_;
    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     * @return The version.
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }
    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     * @param value The version to set.
     */
    private void setVersion(long value) {
      bitField0_ |= 0x00000004;
      version_ = value;
    }
    /**
     * <pre>
     * The version of the hint for this key already stored on the client.
     * </pre>
     *
     * <code>optional int64 version = 3;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      version_ = 0L;
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Information about the hint that the client already has for a host.
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.MatchedHintInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.MatchedHintInfo)
        org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfoOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return Whether the keyRepresentation field is set.
       */
      @java.lang.Override
      public boolean hasKeyRepresentation() {
        return instance.hasKeyRepresentation();
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return The keyRepresentation.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation() {
        return instance.getKeyRepresentation();
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @param value The enum numeric value on the wire for keyRepresentation to set.
       * @return This builder for chaining.
       */
      public Builder setKeyRepresentation(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
        copyOnWrite();
        instance.setKeyRepresentation(value);
        return this;
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyRepresentation() {
        copyOnWrite();
        instance.clearKeyRepresentation();
        return this;
      }

      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return instance.hasKey();
      }
      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        return instance.getKey();
      }
      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return instance.getKeyBytes();
      }
      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }
      /**
       * <pre>
       * The key of the hint currently used for the host.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyBytes(value);
        return this;
      }

      /**
       * <pre>
       * The version of the hint for this key already stored on the client.
       * </pre>
       *
       * <code>optional int64 version = 3;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <pre>
       * The version of the hint for this key already stored on the client.
       * </pre>
       *
       * <code>optional int64 version = 3;</code>
       * @return The version.
       */
      @java.lang.Override
      public long getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * The version of the hint for this key already stored on the client.
       * </pre>
       *
       * <code>optional int64 version = 3;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(long value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * The version of the hint for this key already stored on the client.
       * </pre>
       *
       * <code>optional int64 version = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.MatchedHintInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "keyRepresentation_",
              org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.internalGetVerifier(),
              "key_",
              "version_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u100c\u0000\u0002" +
                "\u1008\u0001\u0003\u1002\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.MatchedHintInfo)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo DEFAULT_INSTANCE;
    static {
      MatchedHintInfo defaultInstance = new MatchedHintInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MatchedHintInfo.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MatchedHintInfo> PARSER;

    public static com.google.protobuf.Parser<MatchedHintInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HostInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.HostInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return Whether the host field is set.
     */
    boolean hasHost();
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     * @return Whether the matchedHint field is set.
     */
    boolean hasMatchedHint();
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     * @return The matchedHint.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getMatchedHint();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.HostInfo}
   */
  public  static final class HostInfo extends
      com.google.protobuf.GeneratedMessageLite<
          HostInfo, HostInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.HostInfo)
      HostInfoOrBuilder {
    private HostInfo() {
      host_ = "";
    }
    private int bitField0_;
    public static final int HOST_FIELD_NUMBER = 1;
    private java.lang.String host_;
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return Whether the host field is set.
     */
    @java.lang.Override
    public boolean hasHost() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      return host_;
    }
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(host_);
    }
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @param value The host to set.
     */
    private void setHost(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      host_ = value;
    }
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     */
    private void clearHost() {
      bitField0_ = (bitField0_ & ~0x00000001);
      host_ = getDefaultInstance().getHost();
    }
    /**
     * <pre>
     * Host that the client is requesting information for.
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @param value The bytes for host to set.
     */
    private void setHostBytes(
        com.google.protobuf.ByteString value) {
      host_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int MATCHED_HINT_FIELD_NUMBER = 2;
    private org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo matchedHint_;
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     */
    @java.lang.Override
    public boolean hasMatchedHint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getMatchedHint() {
      return matchedHint_ == null ? org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.getDefaultInstance() : matchedHint_;
    }
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     */
    private void setMatchedHint(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
      value.getClass();
  matchedHint_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMatchedHint(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
      value.getClass();
  if (matchedHint_ != null &&
          matchedHint_ != org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.getDefaultInstance()) {
        matchedHint_ =
          org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.newBuilder(matchedHint_).mergeFrom(value).buildPartial();
      } else {
        matchedHint_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Information about the hint that the client already has for the host.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
     */
    private void clearMatchedHint() {  matchedHint_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.HostInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.HostInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.HostInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.HostInfo)
        org.chromium.components.optimization_guide.proto.HintsProto.HostInfoOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return Whether the host field is set.
       */
      @java.lang.Override
      public boolean hasHost() {
        return instance.hasHost();
      }
      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return The host.
       */
      @java.lang.Override
      public java.lang.String getHost() {
        return instance.getHost();
      }
      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return The bytes for host.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHostBytes() {
        return instance.getHostBytes();
      }
      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        copyOnWrite();
        instance.setHost(value);
        return this;
      }
      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        copyOnWrite();
        instance.clearHost();
        return this;
      }
      /**
       * <pre>
       * Host that the client is requesting information for.
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHostBytes(value);
        return this;
      }

      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      @java.lang.Override
      public boolean hasMatchedHint() {
        return instance.hasMatchedHint();
      }
      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getMatchedHint() {
        return instance.getMatchedHint();
      }
      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      public Builder setMatchedHint(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
        copyOnWrite();
        instance.setMatchedHint(value);
        return this;
        }
      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      public Builder setMatchedHint(
          org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setMatchedHint(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      public Builder mergeMatchedHint(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
        copyOnWrite();
        instance.mergeMatchedHint(value);
        return this;
      }
      /**
       * <pre>
       * Information about the hint that the client already has for the host.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.MatchedHintInfo matched_hint = 2;</code>
       */
      public Builder clearMatchedHint() {  copyOnWrite();
        instance.clearMatchedHint();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.HostInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.HostInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "host_",
              "matchedHint_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.HostInfo)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.HostInfo DEFAULT_INSTANCE;
    static {
      HostInfo defaultInstance = new HostInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HostInfo.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.HostInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HostInfo> PARSER;

    public static com.google.protobuf.Parser<HostInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UrlInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.UrlInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return Whether the url field is set.
     */
    boolean hasUrl();
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The url.
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The bytes for url.
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * <pre>
   * Information about a URL to request hints for.
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.UrlInfo}
   */
  public  static final class UrlInfo extends
      com.google.protobuf.GeneratedMessageLite<
          UrlInfo, UrlInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.UrlInfo)
      UrlInfoOrBuilder {
    private UrlInfo() {
      url_ = "";
    }
    private int bitField0_;
    public static final int URL_FIELD_NUMBER = 1;
    private java.lang.String url_;
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return Whether the url field is set.
     */
    @java.lang.Override
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The url.
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @return The bytes for url.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @param value The url to set.
     */
    private void setUrl(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      url_ = value;
    }
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     */
    private void clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000001);
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <pre>
     * The URL that the client is requesting information for.
     * </pre>
     *
     * <code>optional string url = 1;</code>
     * @param value The bytes for url to set.
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      url_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Information about a URL to request hints for.
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.UrlInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.UrlInfo)
        org.chromium.components.optimization_guide.proto.HintsProto.UrlInfoOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return Whether the url field is set.
       */
      @java.lang.Override
      public boolean hasUrl() {
        return instance.hasUrl();
      }
      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return The url.
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return The bytes for url.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @param value The url to set.
       * @return This builder for chaining.
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <pre>
       * The URL that the client is requesting information for.
       * </pre>
       *
       * <code>optional string url = 1;</code>
       * @param value The bytes for url to set.
       * @return This builder for chaining.
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.UrlInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "url_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1008\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.UrlInfo)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo DEFAULT_INSTANCE;
    static {
      UrlInfo defaultInstance = new UrlInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UrlInfo.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UrlInfo> PARSER;

    public static com.google.protobuf.Parser<UrlInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetHintsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.GetHintsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> 
        getHostsList();
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.HostInfo getHosts(int index);
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    int getHostsCount();

    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> 
        getUrlsList();
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo getUrls(int index);
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    int getUrlsCount();

    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @return A list containing the supportedOptimizations.
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> getSupportedOptimizationsList();
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @return The count of supportedOptimizations.
     */
    int getSupportedOptimizationsCount();
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @param index The index of the element to return.
     * @return The supportedOptimizations at the given index.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getSupportedOptimizations(int index);

    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @return A list containing the supportedKeyRepresentations.
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> getSupportedKeyRepresentationsList();
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @return The count of supportedKeyRepresentations.
     */
    int getSupportedKeyRepresentationsCount();
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @param index The index of the element to return.
     * @return The supportedKeyRepresentations at the given index.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getSupportedKeyRepresentations(int index);

    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     * @return Whether the context field is set.
     */
    boolean hasContext();
    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     * @return The context.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext getContext();

    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> 
        getActiveFieldTrialsList();
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial getActiveFieldTrials(int index);
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    int getActiveFieldTrialsCount();
  }
  /**
   * <pre>
   * Request to return a set of hints that guide what optimizations to perform
   * on those hosts.
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.GetHintsRequest}
   */
  public  static final class GetHintsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          GetHintsRequest, GetHintsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.GetHintsRequest)
      GetHintsRequestOrBuilder {
    private GetHintsRequest() {
      hosts_ = emptyProtobufList();
      urls_ = emptyProtobufList();
      supportedOptimizations_ = emptyIntList();
      supportedKeyRepresentations_ = emptyIntList();
      activeFieldTrials_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HOSTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> hosts_;
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> getHostsList() {
      return hosts_;
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.HostInfoOrBuilder> 
        getHostsOrBuilderList() {
      return hosts_;
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    @java.lang.Override
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.HostInfo getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.HostInfoOrBuilder getHostsOrBuilder(
        int index) {
      return hosts_.get(index);
    }
    private void ensureHostsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> tmp = hosts_;
      if (!tmp.isModifiable()) {
        hosts_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void setHosts(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
      value.getClass();
  ensureHostsIsMutable();
      hosts_.set(index, value);
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void addHosts(org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
      value.getClass();
  ensureHostsIsMutable();
      hosts_.add(value);
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void addHosts(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
      value.getClass();
  ensureHostsIsMutable();
      hosts_.add(index, value);
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void addAllHosts(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> values) {
      ensureHostsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, hosts_);
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void clearHosts() {
      hosts_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Information about the set of hosts to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
     */
    private void removeHosts(int index) {
      ensureHostsIsMutable();
      hosts_.remove(index);
    }

    public static final int URLS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> urls_;
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> getUrlsList() {
      return urls_;
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.UrlInfoOrBuilder> 
        getUrlsOrBuilderList() {
      return urls_;
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    @java.lang.Override
    public int getUrlsCount() {
      return urls_.size();
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo getUrls(int index) {
      return urls_.get(index);
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.UrlInfoOrBuilder getUrlsOrBuilder(
        int index) {
      return urls_.get(index);
    }
    private void ensureUrlsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> tmp = urls_;
      if (!tmp.isModifiable()) {
        urls_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void setUrls(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
      value.getClass();
  ensureUrlsIsMutable();
      urls_.set(index, value);
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void addUrls(org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
      value.getClass();
  ensureUrlsIsMutable();
      urls_.add(value);
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void addUrls(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
      value.getClass();
  ensureUrlsIsMutable();
      urls_.add(index, value);
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void addAllUrls(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> values) {
      ensureUrlsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, urls_);
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void clearUrls() {
      urls_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Information about the set of URLs to retrieve hints for.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
     */
    private void removeUrls(int index) {
      ensureUrlsIsMutable();
      urls_.remove(index);
    }

    public static final int SUPPORTED_OPTIMIZATIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList supportedOptimizations_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> supportedOptimizations_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType>() {
              @java.lang.Override
              public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType convert(java.lang.Integer from) {
                org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType result = org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.forNumber(from);
                return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.TYPE_UNSPECIFIED : result;
              }
            };
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @return A list containing the supportedOptimizations.
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> getSupportedOptimizationsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType>(supportedOptimizations_, supportedOptimizations_converter_);
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @return The count of supportedOptimizations.
     */
    @java.lang.Override
    public int getSupportedOptimizationsCount() {
      return supportedOptimizations_.size();
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @param index The index of the element to return.
     * @return The supportedOptimizations at the given index.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getSupportedOptimizations(int index) {
      return supportedOptimizations_converter_.convert(supportedOptimizations_.getInt(index));
    }
    private void ensureSupportedOptimizationsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = supportedOptimizations_;
      if (!tmp.isModifiable()) {
        supportedOptimizations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @param index The index to set the value at.
     * @param value The supportedOptimizations to set.
     */
    private void setSupportedOptimizations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
      value.getClass();
  ensureSupportedOptimizationsIsMutable();
      supportedOptimizations_.setInt(index, value.getNumber());
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @param value The supportedOptimizations to add.
     */
    private void addSupportedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
      value.getClass();
  ensureSupportedOptimizationsIsMutable();
      supportedOptimizations_.addInt(value.getNumber());
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     * @param values The supportedOptimizations to add.
     */
    private void addAllSupportedOptimizations(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> values) {
      ensureSupportedOptimizationsIsMutable();
      for (org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value : values) {
        supportedOptimizations_.addInt(value.getNumber());
      }
    }
    /**
     * <pre>
     * The set of optimization types that the requesting client can support
     * and perform.
     * It is guaranteed that the response will only contain hints for
     * optimizations present in this set.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
     */
    private void clearSupportedOptimizations() {
      supportedOptimizations_ = emptyIntList();
    }

    public static final int SUPPORTED_KEY_REPRESENTATIONS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList supportedKeyRepresentations_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> supportedKeyRepresentations_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation>() {
              @java.lang.Override
              public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation convert(java.lang.Integer from) {
                org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation result = org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.forNumber(from);
                return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.REPRESENTATION_UNSPECIFIED : result;
              }
            };
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @return A list containing the supportedKeyRepresentations.
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> getSupportedKeyRepresentationsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation>(supportedKeyRepresentations_, supportedKeyRepresentations_converter_);
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @return The count of supportedKeyRepresentations.
     */
    @java.lang.Override
    public int getSupportedKeyRepresentationsCount() {
      return supportedKeyRepresentations_.size();
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @param index The index of the element to return.
     * @return The supportedKeyRepresentations at the given index.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getSupportedKeyRepresentations(int index) {
      return supportedKeyRepresentations_converter_.convert(supportedKeyRepresentations_.getInt(index));
    }
    private void ensureSupportedKeyRepresentationsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = supportedKeyRepresentations_;
      if (!tmp.isModifiable()) {
        supportedKeyRepresentations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @param index The index to set the value at.
     * @param value The supportedKeyRepresentations to set.
     */
    private void setSupportedKeyRepresentations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
      value.getClass();
  ensureSupportedKeyRepresentationsIsMutable();
      supportedKeyRepresentations_.setInt(index, value.getNumber());
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @param value The supportedKeyRepresentations to add.
     */
    private void addSupportedKeyRepresentations(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
      value.getClass();
  ensureSupportedKeyRepresentationsIsMutable();
      supportedKeyRepresentations_.addInt(value.getNumber());
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     * @param values The supportedKeyRepresentations to add.
     */
    private void addAllSupportedKeyRepresentations(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> values) {
      ensureSupportedKeyRepresentationsIsMutable();
      for (org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value : values) {
        supportedKeyRepresentations_.addInt(value.getNumber());
      }
    }
    /**
     * <pre>
     * The set of key representations that the client can process.
     * It is guaranteed that the response will only contain hints for key
     * representations present in this set. If not specified,
     * [HOST_SUFFIX, FULL_URL] will be used.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
     */
    private void clearSupportedKeyRepresentations() {
      supportedKeyRepresentations_ = emptyIntList();
    }

    public static final int CONTEXT_FIELD_NUMBER = 3;
    private int context_;
    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     * @return Whether the context field is set.
     */
    @java.lang.Override
    public boolean hasContext() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     * @return The context.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext getContext() {
      org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext result = org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext.forNumber(context_);
      return result == null ? org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext.CONTEXT_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     * @param value The context to set.
     */
    private void setContext(org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext value) {
      context_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Context in which this request is made.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
     */
    private void clearContext() {
      bitField0_ = (bitField0_ & ~0x00000001);
      context_ = 0;
    }

    public static final int ACTIVE_FIELD_TRIALS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> activeFieldTrials_;
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> getActiveFieldTrialsList() {
      return activeFieldTrials_;
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrialOrBuilder> 
        getActiveFieldTrialsOrBuilderList() {
      return activeFieldTrials_;
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    @java.lang.Override
    public int getActiveFieldTrialsCount() {
      return activeFieldTrials_.size();
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial getActiveFieldTrials(int index) {
      return activeFieldTrials_.get(index);
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrialOrBuilder getActiveFieldTrialsOrBuilder(
        int index) {
      return activeFieldTrials_.get(index);
    }
    private void ensureActiveFieldTrialsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> tmp = activeFieldTrials_;
      if (!tmp.isModifiable()) {
        activeFieldTrials_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void setActiveFieldTrials(
        int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
      value.getClass();
  ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.set(index, value);
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void addActiveFieldTrials(org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
      value.getClass();
  ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(value);
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void addActiveFieldTrials(
        int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
      value.getClass();
  ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(index, value);
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void addAllActiveFieldTrials(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> values) {
      ensureActiveFieldTrialsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, activeFieldTrials_);
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void clearActiveFieldTrials() {
      activeFieldTrials_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The field trials that are currently active when this request is made.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
     */
    private void removeActiveFieldTrials(int index) {
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.remove(index);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Request to return a set of hints that guide what optimizations to perform
     * on those hosts.
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.GetHintsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.GetHintsRequest)
        org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequestOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> getHostsList() {
        return java.util.Collections.unmodifiableList(
            instance.getHostsList());
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      @java.lang.Override
      public int getHostsCount() {
        return instance.getHostsCount();
      }/**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.HostInfo getHosts(int index) {
        return instance.getHosts(index);
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder setHosts(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
        copyOnWrite();
        instance.setHosts(index, value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder setHosts(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setHosts(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder addHosts(org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
        copyOnWrite();
        instance.addHosts(value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder addHosts(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo value) {
        copyOnWrite();
        instance.addHosts(index, value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder addHosts(
          org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addHosts(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder addHosts(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addHosts(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder addAllHosts(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.HostInfo> values) {
        copyOnWrite();
        instance.addAllHosts(values);
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder clearHosts() {
        copyOnWrite();
        instance.clearHosts();
        return this;
      }
      /**
       * <pre>
       * Information about the set of hosts to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.HostInfo hosts = 1;</code>
       */
      public Builder removeHosts(int index) {
        copyOnWrite();
        instance.removeHosts(index);
        return this;
      }

      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> getUrlsList() {
        return java.util.Collections.unmodifiableList(
            instance.getUrlsList());
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      @java.lang.Override
      public int getUrlsCount() {
        return instance.getUrlsCount();
      }/**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo getUrls(int index) {
        return instance.getUrls(index);
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder setUrls(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
        copyOnWrite();
        instance.setUrls(index, value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder setUrls(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setUrls(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder addUrls(org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
        copyOnWrite();
        instance.addUrls(value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder addUrls(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo value) {
        copyOnWrite();
        instance.addUrls(index, value);
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder addUrls(
          org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUrls(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder addUrls(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUrls(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder addAllUrls(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo> values) {
        copyOnWrite();
        instance.addAllUrls(values);
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder clearUrls() {
        copyOnWrite();
        instance.clearUrls();
        return this;
      }
      /**
       * <pre>
       * Information about the set of URLs to retrieve hints for.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.UrlInfo urls = 4;</code>
       */
      public Builder removeUrls(int index) {
        copyOnWrite();
        instance.removeUrls(index);
        return this;
      }

      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @return A list containing the supportedOptimizations.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> getSupportedOptimizationsList() {
        return instance.getSupportedOptimizationsList();
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @return The count of supportedOptimizations.
       */
      @java.lang.Override
      public int getSupportedOptimizationsCount() {
        return instance.getSupportedOptimizationsCount();
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @param index The index of the element to return.
       * @return The supportedOptimizations at the given index.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getSupportedOptimizations(int index) {
        return instance.getSupportedOptimizations(index);
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @param index The index to set the value at.
       * @param value The supportedOptimizations to set.
       * @return This builder for chaining.
       */
      public Builder setSupportedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
        copyOnWrite();
        instance.setSupportedOptimizations(index, value);
        return this;
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @param value The supportedOptimizations to add.
       * @return This builder for chaining.
       */
      public Builder addSupportedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
        copyOnWrite();
        instance.addSupportedOptimizations(value);
        return this;
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @param values The supportedOptimizations to add.
       * @return This builder for chaining.
       */
      public Builder addAllSupportedOptimizations(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType> values) {
        copyOnWrite();
        instance.addAllSupportedOptimizations(values);  return this;
      }
      /**
       * <pre>
       * The set of optimization types that the requesting client can support
       * and perform.
       * It is guaranteed that the response will only contain hints for
       * optimizations present in this set.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationType supported_optimizations = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSupportedOptimizations() {
        copyOnWrite();
        instance.clearSupportedOptimizations();
        return this;
      }

      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @return A list containing the supportedKeyRepresentations.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> getSupportedKeyRepresentationsList() {
        return instance.getSupportedKeyRepresentationsList();
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @return The count of supportedKeyRepresentations.
       */
      @java.lang.Override
      public int getSupportedKeyRepresentationsCount() {
        return instance.getSupportedKeyRepresentationsCount();
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @param index The index of the element to return.
       * @return The supportedKeyRepresentations at the given index.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getSupportedKeyRepresentations(int index) {
        return instance.getSupportedKeyRepresentations(index);
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @param index The index to set the value at.
       * @param value The supportedKeyRepresentations to set.
       * @return This builder for chaining.
       */
      public Builder setSupportedKeyRepresentations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
        copyOnWrite();
        instance.setSupportedKeyRepresentations(index, value);
        return this;
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @param value The supportedKeyRepresentations to add.
       * @return This builder for chaining.
       */
      public Builder addSupportedKeyRepresentations(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
        copyOnWrite();
        instance.addSupportedKeyRepresentations(value);
        return this;
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @param values The supportedKeyRepresentations to add.
       * @return This builder for chaining.
       */
      public Builder addAllSupportedKeyRepresentations(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation> values) {
        copyOnWrite();
        instance.addAllSupportedKeyRepresentations(values);  return this;
      }
      /**
       * <pre>
       * The set of key representations that the client can process.
       * It is guaranteed that the response will only contain hints for key
       * representations present in this set. If not specified,
       * [HOST_SUFFIX, FULL_URL] will be used.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.KeyRepresentation supported_key_representations = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSupportedKeyRepresentations() {
        copyOnWrite();
        instance.clearSupportedKeyRepresentations();
        return this;
      }

      /**
       * <pre>
       * Context in which this request is made.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
       * @return Whether the context field is set.
       */
      @java.lang.Override
      public boolean hasContext() {
        return instance.hasContext();
      }
      /**
       * <pre>
       * Context in which this request is made.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
       * @return The context.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext getContext() {
        return instance.getContext();
      }
      /**
       * <pre>
       * Context in which this request is made.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
       * @param value The enum numeric value on the wire for context to set.
       * @return This builder for chaining.
       */
      public Builder setContext(org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext value) {
        copyOnWrite();
        instance.setContext(value);
        return this;
      }
      /**
       * <pre>
       * Context in which this request is made.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.RequestContext context = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearContext() {
        copyOnWrite();
        instance.clearContext();
        return this;
      }

      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> getActiveFieldTrialsList() {
        return java.util.Collections.unmodifiableList(
            instance.getActiveFieldTrialsList());
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      @java.lang.Override
      public int getActiveFieldTrialsCount() {
        return instance.getActiveFieldTrialsCount();
      }/**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial getActiveFieldTrials(int index) {
        return instance.getActiveFieldTrials(index);
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder setActiveFieldTrials(
          int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
        copyOnWrite();
        instance.setActiveFieldTrials(index, value);
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder setActiveFieldTrials(
          int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial.Builder builderForValue) {
        copyOnWrite();
        instance.setActiveFieldTrials(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder addActiveFieldTrials(org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
        copyOnWrite();
        instance.addActiveFieldTrials(value);
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder addActiveFieldTrials(
          int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial value) {
        copyOnWrite();
        instance.addActiveFieldTrials(index, value);
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder addActiveFieldTrials(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial.Builder builderForValue) {
        copyOnWrite();
        instance.addActiveFieldTrials(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder addActiveFieldTrials(
          int index, org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial.Builder builderForValue) {
        copyOnWrite();
        instance.addActiveFieldTrials(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder addAllActiveFieldTrials(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial> values) {
        copyOnWrite();
        instance.addAllActiveFieldTrials(values);
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder clearActiveFieldTrials() {
        copyOnWrite();
        instance.clearActiveFieldTrials();
        return this;
      }
      /**
       * <pre>
       * The field trials that are currently active when this request is made.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.FieldTrial active_field_trials = 6;</code>
       */
      public Builder removeActiveFieldTrials(int index) {
        copyOnWrite();
        instance.removeActiveFieldTrials(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.GetHintsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "hosts_",
              org.chromium.components.optimization_guide.proto.HintsProto.HostInfo.class,
              "supportedOptimizations_",
              org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.internalGetVerifier(),
              "context_",
              org.chromium.components.optimization_guide.proto.CommonTypesProto.RequestContext.internalGetVerifier(),
              "urls_",
              org.chromium.components.optimization_guide.proto.HintsProto.UrlInfo.class,
              "supportedKeyRepresentations_",
              org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.internalGetVerifier(),
              "activeFieldTrials_",
              org.chromium.components.optimization_guide.proto.CommonTypesProto.FieldTrial.class,
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0005\u0000\u0001\u001b\u0002\u001e" +
                "\u0003\u100c\u0000\u0004\u001b\u0005\u001e\u0006\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.GetHintsRequest)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest DEFAULT_INSTANCE;
    static {
      GetHintsRequest defaultInstance = new GetHintsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetHintsRequest.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetHintsRequest> PARSER;

    public static com.google.protobuf.Parser<GetHintsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetHintsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.GetHintsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> 
        getHintsList();
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index);
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    int getHintsCount();

    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     * @return Whether the maxCacheDuration field is set.
     */
    boolean hasMaxCacheDuration();
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     * @return The maxCacheDuration.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration();

    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> 
        getHintsToRemoveList();
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getHintsToRemove(int index);
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    int getHintsToRemoveCount();
  }
  /**
   * <pre>
   * Response to the GetHints request.
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.GetHintsResponse}
   */
  public  static final class GetHintsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          GetHintsResponse, GetHintsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.GetHintsResponse)
      GetHintsResponseOrBuilder {
    private GetHintsResponse() {
      hints_ = emptyProtobufList();
      hintsToRemove_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HINTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Hint> hints_;
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> getHintsList() {
      return hints_;
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.HintOrBuilder> 
        getHintsOrBuilderList() {
      return hints_;
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public int getHintsCount() {
      return hints_.size();
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index) {
      return hints_.get(index);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.HintOrBuilder getHintsOrBuilder(
        int index) {
      return hints_.get(index);
    }
    private void ensureHintsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Hint> tmp = hints_;
      if (!tmp.isModifiable()) {
        hints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void setHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.set(index, value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addHints(org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.add(value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.add(index, value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addAllHints(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Hint> values) {
      ensureHintsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, hints_);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void clearHints() {
      hints_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page. It is expected that the client will use the Hint record with the
     * most specific key that matches the main frame URL.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void removeHints(int index) {
      ensureHintsIsMutable();
      hints_.remove(index);
    }

    public static final int MAX_CACHE_DURATION_FIELD_NUMBER = 2;
    private org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration maxCacheDuration_;
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     */
    @java.lang.Override
    public boolean hasMaxCacheDuration() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration() {
      return maxCacheDuration_ == null ? org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance() : maxCacheDuration_;
    }
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     */
    private void setMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  maxCacheDuration_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  if (maxCacheDuration_ != null &&
          maxCacheDuration_ != org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance()) {
        maxCacheDuration_ =
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.newBuilder(maxCacheDuration_).mergeFrom(value).buildPartial();
      } else {
        maxCacheDuration_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The maximum duration in which the hints, or lack of hints, provided in
     * this response are valid.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
     */
    private void clearMaxCacheDuration() {  maxCacheDuration_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int HINTS_TO_REMOVE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> hintsToRemove_;
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> getHintsToRemoveList() {
      return hintsToRemove_;
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfoOrBuilder> 
        getHintsToRemoveOrBuilderList() {
      return hintsToRemove_;
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    @java.lang.Override
    public int getHintsToRemoveCount() {
      return hintsToRemove_.size();
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getHintsToRemove(int index) {
      return hintsToRemove_.get(index);
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfoOrBuilder getHintsToRemoveOrBuilder(
        int index) {
      return hintsToRemove_.get(index);
    }
    private void ensureHintsToRemoveIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> tmp = hintsToRemove_;
      if (!tmp.isModifiable()) {
        hintsToRemove_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void setHintsToRemove(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
      value.getClass();
  ensureHintsToRemoveIsMutable();
      hintsToRemove_.set(index, value);
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void addHintsToRemove(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
      value.getClass();
  ensureHintsToRemoveIsMutable();
      hintsToRemove_.add(value);
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void addHintsToRemove(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
      value.getClass();
  ensureHintsToRemoveIsMutable();
      hintsToRemove_.add(index, value);
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void addAllHintsToRemove(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> values) {
      ensureHintsToRemoveIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, hintsToRemove_);
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void clearHintsToRemove() {
      hintsToRemove_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A set of hint keys to remove from the client cache.
     * It is guaranteed that all entries in this list were provided by the client
     * in the corresponding request's |hosts.matched_hint| fields.
     * It is expected for the client to immediately stop using all hints contained
     * in this field. Hints that are not present in |hints| or in this field
     * should adhere to the client cache's existing expiration policy.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
     */
    private void removeHintsToRemove(int index) {
      ensureHintsToRemoveIsMutable();
      hintsToRemove_.remove(index);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Response to the GetHints request.
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.GetHintsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.GetHintsResponse)
        org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponseOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> getHintsList() {
        return java.util.Collections.unmodifiableList(
            instance.getHintsList());
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public int getHintsCount() {
        return instance.getHintsCount();
      }/**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index) {
        return instance.getHints(index);
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder setHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.setHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder setHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.setHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.addHints(value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.addHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.addHints(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.addHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addAllHints(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Hint> values) {
        copyOnWrite();
        instance.addAllHints(values);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder clearHints() {
        copyOnWrite();
        instance.clearHints();
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page. It is expected that the client will use the Hint record with the
       * most specific key that matches the main frame URL.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder removeHints(int index) {
        copyOnWrite();
        instance.removeHints(index);
        return this;
      }

      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      @java.lang.Override
      public boolean hasMaxCacheDuration() {
        return instance.hasMaxCacheDuration();
      }
      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration() {
        return instance.getMaxCacheDuration();
      }
      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      public Builder setMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.setMaxCacheDuration(value);
        return this;
        }
      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      public Builder setMaxCacheDuration(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.Builder builderForValue) {
        copyOnWrite();
        instance.setMaxCacheDuration(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      public Builder mergeMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.mergeMaxCacheDuration(value);
        return this;
      }
      /**
       * <pre>
       * The maximum duration in which the hints, or lack of hints, provided in
       * this response are valid.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 2;</code>
       */
      public Builder clearMaxCacheDuration() {  copyOnWrite();
        instance.clearMaxCacheDuration();
        return this;
      }

      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> getHintsToRemoveList() {
        return java.util.Collections.unmodifiableList(
            instance.getHintsToRemoveList());
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      @java.lang.Override
      public int getHintsToRemoveCount() {
        return instance.getHintsToRemoveCount();
      }/**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo getHintsToRemove(int index) {
        return instance.getHintsToRemove(index);
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder setHintsToRemove(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
        copyOnWrite();
        instance.setHintsToRemove(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder setHintsToRemove(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setHintsToRemove(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder addHintsToRemove(org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
        copyOnWrite();
        instance.addHintsToRemove(value);
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder addHintsToRemove(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo value) {
        copyOnWrite();
        instance.addHintsToRemove(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder addHintsToRemove(
          org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addHintsToRemove(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder addHintsToRemove(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addHintsToRemove(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder addAllHintsToRemove(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo> values) {
        copyOnWrite();
        instance.addAllHintsToRemove(values);
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder clearHintsToRemove() {
        copyOnWrite();
        instance.clearHintsToRemove();
        return this;
      }
      /**
       * <pre>
       * A set of hint keys to remove from the client cache.
       * It is guaranteed that all entries in this list were provided by the client
       * in the corresponding request's |hosts.matched_hint| fields.
       * It is expected for the client to immediately stop using all hints contained
       * in this field. Hints that are not present in |hints| or in this field
       * should adhere to the client cache's existing expiration policy.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.MatchedHintInfo hints_to_remove = 3;</code>
       */
      public Builder removeHintsToRemove(int index) {
        copyOnWrite();
        instance.removeHintsToRemove(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.GetHintsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "hints_",
              org.chromium.components.optimization_guide.proto.HintsProto.Hint.class,
              "maxCacheDuration_",
              "hintsToRemove_",
              org.chromium.components.optimization_guide.proto.HintsProto.MatchedHintInfo.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0002\u0000\u0001\u001b\u0002\u1009" +
                "\u0000\u0003\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.GetHintsResponse)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse DEFAULT_INSTANCE;
    static {
      GetHintsResponse defaultInstance = new GetHintsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetHintsResponse.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.GetHintsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetHintsResponse> PARSER;

    public static com.google.protobuf.Parser<GetHintsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OptimizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.Optimization)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return Whether the optimizationType field is set.
     */
    boolean hasOptimizationType();
    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return The optimizationType.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType();

    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     * @return Whether the tuningVersion field is set.
     */
    boolean hasTuningVersion();
    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     * @return The tuningVersion.
     */
    long getTuningVersion();

    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     * @return Whether the performanceHintsMetadata field is set.
     */
    boolean hasPerformanceHintsMetadata();
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     * @return The performanceHintsMetadata.
     */
    org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata getPerformanceHintsMetadata();

    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     * @return Whether the publicImageMetadata field is set.
     */
    boolean hasPublicImageMetadata();
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     * @return The publicImageMetadata.
     */
    org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata getPublicImageMetadata();

    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     * @return Whether the loadingPredictorMetadata field is set.
     */
    boolean hasLoadingPredictorMetadata();
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     * @return The loadingPredictorMetadata.
     */
    org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata getLoadingPredictorMetadata();

    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     * @return Whether the anyMetadata field is set.
     */
    boolean hasAnyMetadata();
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     * @return The anyMetadata.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.Any getAnyMetadata();

    public org.chromium.components.optimization_guide.proto.HintsProto.Optimization.MetadataCase getMetadataCase();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.Optimization}
   */
  public  static final class Optimization extends
      com.google.protobuf.GeneratedMessageLite<
          Optimization, Optimization.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.Optimization)
      OptimizationOrBuilder {
    private Optimization() {
    }
    private int bitField0_;
    private int metadataCase_ = 0;
    private java.lang.Object metadata_;
    public enum MetadataCase {
      PERFORMANCE_HINTS_METADATA(11),
      PUBLIC_IMAGE_METADATA(12),
      LOADING_PREDICTOR_METADATA(13),
      ANY_METADATA(15),
      METADATA_NOT_SET(0);
      private final int value;
      private MetadataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MetadataCase valueOf(int value) {
        return forNumber(value);
      }

      public static MetadataCase forNumber(int value) {
        switch (value) {
          case 11: return PERFORMANCE_HINTS_METADATA;
          case 12: return PUBLIC_IMAGE_METADATA;
          case 13: return LOADING_PREDICTOR_METADATA;
          case 15: return ANY_METADATA;
          case 0: return METADATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public MetadataCase
    getMetadataCase() {
      return MetadataCase.forNumber(
          metadataCase_);
    }

    private void clearMetadata() {
      metadataCase_ = 0;
      metadata_ = null;
    }

    public static final int OPTIMIZATION_TYPE_FIELD_NUMBER = 1;
    private int optimizationType_;
    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return Whether the optimizationType field is set.
     */
    @java.lang.Override
    public boolean hasOptimizationType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return The optimizationType.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType() {
      org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType result = org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.forNumber(optimizationType_);
      return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.TYPE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @param value The optimizationType to set.
     */
    private void setOptimizationType(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
      optimizationType_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The type of optimization the hint applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     */
    private void clearOptimizationType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      optimizationType_ = 0;
    }

    public static final int TUNING_VERSION_FIELD_NUMBER = 6;
    private long tuningVersion_;
    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     * @return Whether the tuningVersion field is set.
     */
    @java.lang.Override
    public boolean hasTuningVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     * @return The tuningVersion.
     */
    @java.lang.Override
    public long getTuningVersion() {
      return tuningVersion_;
    }
    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     * @param value The tuningVersion to set.
     */
    private void setTuningVersion(long value) {
      bitField0_ |= 0x00000002;
      tuningVersion_ = value;
    }
    /**
     * <pre>
     * The version of the tuning group for the optimization type.
     * This will only be populated if this optimization is being autotuned.
     * If this is set to UINT64_MAX, this optimization should be considered as
     * not allowed and was only included for metrics purposes.
     * </pre>
     *
     * <code>optional uint64 tuning_version = 6;</code>
     */
    private void clearTuningVersion() {
      bitField0_ = (bitField0_ & ~0x00000002);
      tuningVersion_ = 0L;
    }

    public static final int PERFORMANCE_HINTS_METADATA_FIELD_NUMBER = 11;
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     */
    @java.lang.Override
    public boolean hasPerformanceHintsMetadata() {
      return metadataCase_ == 11;
    }
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata getPerformanceHintsMetadata() {
      if (metadataCase_ == 11) {
         return (org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata) metadata_;
      }
      return org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata.getDefaultInstance();
    }
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     */
    private void setPerformanceHintsMetadata(org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata value) {
      value.getClass();
  metadata_ = value;
      metadataCase_ = 11;
    }
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     */
    private void mergePerformanceHintsMetadata(org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata value) {
      value.getClass();
  if (metadataCase_ == 11 &&
          metadata_ != org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata.getDefaultInstance()) {
        metadata_ = org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata.newBuilder((org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata) metadata_)
            .mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      metadataCase_ = 11;
    }
    /**
     * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
     */
    private void clearPerformanceHintsMetadata() {
      if (metadataCase_ == 11) {
        metadataCase_ = 0;
        metadata_ = null;
      }
    }

    public static final int PUBLIC_IMAGE_METADATA_FIELD_NUMBER = 12;
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     */
    @java.lang.Override
    public boolean hasPublicImageMetadata() {
      return metadataCase_ == 12;
    }
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata getPublicImageMetadata() {
      if (metadataCase_ == 12) {
         return (org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata) metadata_;
      }
      return org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata.getDefaultInstance();
    }
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     */
    private void setPublicImageMetadata(org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata value) {
      value.getClass();
  metadata_ = value;
      metadataCase_ = 12;
    }
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     */
    private void mergePublicImageMetadata(org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata value) {
      value.getClass();
  if (metadataCase_ == 12 &&
          metadata_ != org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata.getDefaultInstance()) {
        metadata_ = org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata.newBuilder((org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata) metadata_)
            .mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      metadataCase_ = 12;
    }
    /**
     * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
     */
    private void clearPublicImageMetadata() {
      if (metadataCase_ == 12) {
        metadataCase_ = 0;
        metadata_ = null;
      }
    }

    public static final int LOADING_PREDICTOR_METADATA_FIELD_NUMBER = 13;
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     */
    @java.lang.Override
    public boolean hasLoadingPredictorMetadata() {
      return metadataCase_ == 13;
    }
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata getLoadingPredictorMetadata() {
      if (metadataCase_ == 13) {
         return (org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata) metadata_;
      }
      return org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata.getDefaultInstance();
    }
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     */
    private void setLoadingPredictorMetadata(org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata value) {
      value.getClass();
  metadata_ = value;
      metadataCase_ = 13;
    }
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     */
    private void mergeLoadingPredictorMetadata(org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata value) {
      value.getClass();
  if (metadataCase_ == 13 &&
          metadata_ != org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata.getDefaultInstance()) {
        metadata_ = org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata.newBuilder((org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata) metadata_)
            .mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      metadataCase_ = 13;
    }
    /**
     * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
     */
    private void clearLoadingPredictorMetadata() {
      if (metadataCase_ == 13) {
        metadataCase_ = 0;
        metadata_ = null;
      }
    }

    public static final int ANY_METADATA_FIELD_NUMBER = 15;
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     */
    @java.lang.Override
    public boolean hasAnyMetadata() {
      return metadataCase_ == 15;
    }
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.Any getAnyMetadata() {
      if (metadataCase_ == 15) {
         return (org.chromium.components.optimization_guide.proto.CommonTypesProto.Any) metadata_;
      }
      return org.chromium.components.optimization_guide.proto.CommonTypesProto.Any.getDefaultInstance();
    }
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     */
    private void setAnyMetadata(org.chromium.components.optimization_guide.proto.CommonTypesProto.Any value) {
      value.getClass();
  metadata_ = value;
      metadataCase_ = 15;
    }
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     */
    private void mergeAnyMetadata(org.chromium.components.optimization_guide.proto.CommonTypesProto.Any value) {
      value.getClass();
  if (metadataCase_ == 15 &&
          metadata_ != org.chromium.components.optimization_guide.proto.CommonTypesProto.Any.getDefaultInstance()) {
        metadata_ = org.chromium.components.optimization_guide.proto.CommonTypesProto.Any.newBuilder((org.chromium.components.optimization_guide.proto.CommonTypesProto.Any) metadata_)
            .mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      metadataCase_ = 15;
    }
    /**
     * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
     */
    private void clearAnyMetadata() {
      if (metadataCase_ == 15) {
        metadataCase_ = 0;
        metadata_ = null;
      }
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.Optimization prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.Optimization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.Optimization, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.Optimization)
        org.chromium.components.optimization_guide.proto.HintsProto.OptimizationOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.Optimization.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public MetadataCase
          getMetadataCase() {
        return instance.getMetadataCase();
      }

      public Builder clearMetadata() {
        copyOnWrite();
        instance.clearMetadata();
        return this;
      }


      /**
       * <pre>
       * The type of optimization the hint applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return Whether the optimizationType field is set.
       */
      @java.lang.Override
      public boolean hasOptimizationType() {
        return instance.hasOptimizationType();
      }
      /**
       * <pre>
       * The type of optimization the hint applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return The optimizationType.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType() {
        return instance.getOptimizationType();
      }
      /**
       * <pre>
       * The type of optimization the hint applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @param value The enum numeric value on the wire for optimizationType to set.
       * @return This builder for chaining.
       */
      public Builder setOptimizationType(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
        copyOnWrite();
        instance.setOptimizationType(value);
        return this;
      }
      /**
       * <pre>
       * The type of optimization the hint applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptimizationType() {
        copyOnWrite();
        instance.clearOptimizationType();
        return this;
      }

      /**
       * <pre>
       * The version of the tuning group for the optimization type.
       * This will only be populated if this optimization is being autotuned.
       * If this is set to UINT64_MAX, this optimization should be considered as
       * not allowed and was only included for metrics purposes.
       * </pre>
       *
       * <code>optional uint64 tuning_version = 6;</code>
       * @return Whether the tuningVersion field is set.
       */
      @java.lang.Override
      public boolean hasTuningVersion() {
        return instance.hasTuningVersion();
      }
      /**
       * <pre>
       * The version of the tuning group for the optimization type.
       * This will only be populated if this optimization is being autotuned.
       * If this is set to UINT64_MAX, this optimization should be considered as
       * not allowed and was only included for metrics purposes.
       * </pre>
       *
       * <code>optional uint64 tuning_version = 6;</code>
       * @return The tuningVersion.
       */
      @java.lang.Override
      public long getTuningVersion() {
        return instance.getTuningVersion();
      }
      /**
       * <pre>
       * The version of the tuning group for the optimization type.
       * This will only be populated if this optimization is being autotuned.
       * If this is set to UINT64_MAX, this optimization should be considered as
       * not allowed and was only included for metrics purposes.
       * </pre>
       *
       * <code>optional uint64 tuning_version = 6;</code>
       * @param value The tuningVersion to set.
       * @return This builder for chaining.
       */
      public Builder setTuningVersion(long value) {
        copyOnWrite();
        instance.setTuningVersion(value);
        return this;
      }
      /**
       * <pre>
       * The version of the tuning group for the optimization type.
       * This will only be populated if this optimization is being autotuned.
       * If this is set to UINT64_MAX, this optimization should be considered as
       * not allowed and was only included for metrics purposes.
       * </pre>
       *
       * <code>optional uint64 tuning_version = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTuningVersion() {
        copyOnWrite();
        instance.clearTuningVersion();
        return this;
      }

      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      @java.lang.Override
      public boolean hasPerformanceHintsMetadata() {
        return instance.hasPerformanceHintsMetadata();
      }
      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata getPerformanceHintsMetadata() {
        return instance.getPerformanceHintsMetadata();
      }
      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      public Builder setPerformanceHintsMetadata(org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata value) {
        copyOnWrite();
        instance.setPerformanceHintsMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      public Builder setPerformanceHintsMetadata(
          org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setPerformanceHintsMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      public Builder mergePerformanceHintsMetadata(org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata value) {
        copyOnWrite();
        instance.mergePerformanceHintsMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PerformanceHintsMetadata performance_hints_metadata = 11;</code>
       */
      public Builder clearPerformanceHintsMetadata() {
        copyOnWrite();
        instance.clearPerformanceHintsMetadata();
        return this;
      }

      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      @java.lang.Override
      public boolean hasPublicImageMetadata() {
        return instance.hasPublicImageMetadata();
      }
      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata getPublicImageMetadata() {
        return instance.getPublicImageMetadata();
      }
      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      public Builder setPublicImageMetadata(org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata value) {
        copyOnWrite();
        instance.setPublicImageMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      public Builder setPublicImageMetadata(
          org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setPublicImageMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      public Builder mergePublicImageMetadata(org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata value) {
        copyOnWrite();
        instance.mergePublicImageMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.PublicImageMetadata public_image_metadata = 12;</code>
       */
      public Builder clearPublicImageMetadata() {
        copyOnWrite();
        instance.clearPublicImageMetadata();
        return this;
      }

      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      @java.lang.Override
      public boolean hasLoadingPredictorMetadata() {
        return instance.hasLoadingPredictorMetadata();
      }
      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata getLoadingPredictorMetadata() {
        return instance.getLoadingPredictorMetadata();
      }
      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      public Builder setLoadingPredictorMetadata(org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata value) {
        copyOnWrite();
        instance.setLoadingPredictorMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      public Builder setLoadingPredictorMetadata(
          org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setLoadingPredictorMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      public Builder mergeLoadingPredictorMetadata(org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata value) {
        copyOnWrite();
        instance.mergeLoadingPredictorMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.LoadingPredictorMetadata loading_predictor_metadata = 13;</code>
       */
      public Builder clearLoadingPredictorMetadata() {
        copyOnWrite();
        instance.clearLoadingPredictorMetadata();
        return this;
      }

      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      @java.lang.Override
      public boolean hasAnyMetadata() {
        return instance.hasAnyMetadata();
      }
      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.Any getAnyMetadata() {
        return instance.getAnyMetadata();
      }
      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      public Builder setAnyMetadata(org.chromium.components.optimization_guide.proto.CommonTypesProto.Any value) {
        copyOnWrite();
        instance.setAnyMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      public Builder setAnyMetadata(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Any.Builder builderForValue) {
        copyOnWrite();
        instance.setAnyMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      public Builder mergeAnyMetadata(org.chromium.components.optimization_guide.proto.CommonTypesProto.Any value) {
        copyOnWrite();
        instance.mergeAnyMetadata(value);
        return this;
      }
      /**
       * <code>.optimization_guide.proto.Any any_metadata = 15;</code>
       */
      public Builder clearAnyMetadata() {
        copyOnWrite();
        instance.clearAnyMetadata();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.Optimization)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.Optimization();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "metadata_",
              "metadataCase_",
              "bitField0_",
              "optimizationType_",
              org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.internalGetVerifier(),
              "tuningVersion_",
              org.chromium.components.optimization_guide.proto.PerformanceHintsMetadataProto.PerformanceHintsMetadata.class,
              org.chromium.components.optimization_guide.proto.PublicImageMetadataProto.PublicImageMetadata.class,
              org.chromium.components.optimization_guide.proto.LoadingPredictorMetadataProto.LoadingPredictorMetadata.class,
              org.chromium.components.optimization_guide.proto.CommonTypesProto.Any.class,
            };
            java.lang.String info =
                "\u0001\u0006\u0001\u0001\u0001\u000f\u0006\u0000\u0000\u0000\u0001\u100c\u0000\u0006" +
                "\u1003\u0001\u000b\u103c\u0000\f\u103c\u0000\r\u103c\u0000\u000f\u103c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.Optimization.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.Optimization>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.Optimization)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.Optimization DEFAULT_INSTANCE;
    static {
      Optimization defaultInstance = new Optimization();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Optimization.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Optimization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Optimization> PARSER;

    public static com.google.protobuf.Parser<Optimization> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PageHintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.PageHint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return Whether the pagePattern field is set.
     */
    boolean hasPagePattern();
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return The pagePattern.
     */
    java.lang.String getPagePattern();
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return The bytes for pagePattern.
     */
    com.google.protobuf.ByteString
        getPagePatternBytes();

    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> 
        getWhitelistedOptimizationsList();
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index);
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    int getWhitelistedOptimizationsCount();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.PageHint}
   */
  public  static final class PageHint extends
      com.google.protobuf.GeneratedMessageLite<
          PageHint, PageHint.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.PageHint)
      PageHintOrBuilder {
    private PageHint() {
      pagePattern_ = "";
      whitelistedOptimizations_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int PAGE_PATTERN_FIELD_NUMBER = 1;
    private java.lang.String pagePattern_;
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return Whether the pagePattern field is set.
     */
    @java.lang.Override
    public boolean hasPagePattern() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return The pagePattern.
     */
    @java.lang.Override
    public java.lang.String getPagePattern() {
      return pagePattern_;
    }
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @return The bytes for pagePattern.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPagePatternBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pagePattern_);
    }
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @param value The pagePattern to set.
     */
    private void setPagePattern(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      pagePattern_ = value;
    }
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     */
    private void clearPagePattern() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pagePattern_ = getDefaultInstance().getPagePattern();
    }
    /**
     * <pre>
     * The pattern to match against the committed page URL.
     * The pattern may be a single substring to match against the full URL or it
     * may be an ordered set of substrings to match where the substrings are
     * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
     * beginning and end).
     * </pre>
     *
     * <code>optional string page_pattern = 1;</code>
     * @param value The bytes for pagePattern to set.
     */
    private void setPagePatternBytes(
        com.google.protobuf.ByteString value) {
      pagePattern_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int WHITELISTED_OPTIMIZATIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> whitelistedOptimizations_;
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> getWhitelistedOptimizationsList() {
      return whitelistedOptimizations_;
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationOrBuilder> 
        getWhitelistedOptimizationsOrBuilderList() {
      return whitelistedOptimizations_;
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public int getWhitelistedOptimizationsCount() {
      return whitelistedOptimizations_.size();
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index) {
      return whitelistedOptimizations_.get(index);
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationOrBuilder getWhitelistedOptimizationsOrBuilder(
        int index) {
      return whitelistedOptimizations_.get(index);
    }
    private void ensureWhitelistedOptimizationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> tmp = whitelistedOptimizations_;
      if (!tmp.isModifiable()) {
        whitelistedOptimizations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void setWhitelistedOptimizations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.set(index, value);
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addWhitelistedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.add(value);
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addWhitelistedOptimizations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.add(index, value);
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addAllWhitelistedOptimizations(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Optimization> values) {
      ensureWhitelistedOptimizationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, whitelistedOptimizations_);
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void clearWhitelistedOptimizations() {
      whitelistedOptimizations_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An ordered set of optimizations that should be whitelisted for this page
     * pattern.
     * The client will use the first optimization that it supports.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void removeWhitelistedOptimizations(int index) {
      ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.remove(index);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.PageHint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.PageHint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.PageHint, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.PageHint)
        org.chromium.components.optimization_guide.proto.HintsProto.PageHintOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.PageHint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @return Whether the pagePattern field is set.
       */
      @java.lang.Override
      public boolean hasPagePattern() {
        return instance.hasPagePattern();
      }
      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @return The pagePattern.
       */
      @java.lang.Override
      public java.lang.String getPagePattern() {
        return instance.getPagePattern();
      }
      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @return The bytes for pagePattern.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPagePatternBytes() {
        return instance.getPagePatternBytes();
      }
      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @param value The pagePattern to set.
       * @return This builder for chaining.
       */
      public Builder setPagePattern(
          java.lang.String value) {
        copyOnWrite();
        instance.setPagePattern(value);
        return this;
      }
      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPagePattern() {
        copyOnWrite();
        instance.clearPagePattern();
        return this;
      }
      /**
       * <pre>
       * The pattern to match against the committed page URL.
       * The pattern may be a single substring to match against the full URL or it
       * may be an ordered set of substrings to match where the substrings are
       * separated by the ‘*’ wildcard character (with an implicit ‘*’ at the
       * beginning and end).
       * </pre>
       *
       * <code>optional string page_pattern = 1;</code>
       * @param value The bytes for pagePattern to set.
       * @return This builder for chaining.
       */
      public Builder setPagePatternBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPagePatternBytes(value);
        return this;
      }

      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> getWhitelistedOptimizationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getWhitelistedOptimizationsList());
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public int getWhitelistedOptimizationsCount() {
        return instance.getWhitelistedOptimizationsCount();
      }/**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index) {
        return instance.getWhitelistedOptimizations(index);
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder setWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.setWhitelistedOptimizations(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder setWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.setWhitelistedOptimizations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addAllWhitelistedOptimizations(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Optimization> values) {
        copyOnWrite();
        instance.addAllWhitelistedOptimizations(values);
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder clearWhitelistedOptimizations() {
        copyOnWrite();
        instance.clearWhitelistedOptimizations();
        return this;
      }
      /**
       * <pre>
       * An ordered set of optimizations that should be whitelisted for this page
       * pattern.
       * The client will use the first optimization that it supports.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder removeWhitelistedOptimizations(int index) {
        copyOnWrite();
        instance.removeWhitelistedOptimizations(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.PageHint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.PageHint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "pagePattern_",
              "whitelistedOptimizations_",
              org.chromium.components.optimization_guide.proto.HintsProto.Optimization.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0003\u0002\u0000\u0001\u0000\u0001\u1008\u0000\u0003" +
                "\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.PageHint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.PageHint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.PageHint)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.PageHint DEFAULT_INSTANCE;
    static {
      PageHint defaultInstance = new PageHint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PageHint.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.PageHint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PageHint> PARSER;

    public static com.google.protobuf.Parser<PageHint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.Hint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return Whether the keyRepresentation field is set.
     */
    boolean hasKeyRepresentation();
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return The keyRepresentation.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation();

    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> 
        getWhitelistedOptimizationsList();
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index);
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    int getWhitelistedOptimizationsCount();

    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> 
        getPageHintsList();
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.PageHint getPageHints(int index);
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    int getPageHintsCount();

    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     * @return Whether the maxCacheDuration field is set.
     */
    boolean hasMaxCacheDuration();
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     * @return The maxCacheDuration.
     */
    org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.Hint}
   */
  public  static final class Hint extends
      com.google.protobuf.GeneratedMessageLite<
          Hint, Hint.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.Hint)
      HintOrBuilder {
    private Hint() {
      key_ = "";
      whitelistedOptimizations_ = emptyProtobufList();
      pageHints_ = emptyProtobufList();
      version_ = "";
    }
    private int bitField0_;
    public static final int KEY_REPRESENTATION_FIELD_NUMBER = 1;
    private int keyRepresentation_;
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return Whether the keyRepresentation field is set.
     */
    @java.lang.Override
    public boolean hasKeyRepresentation() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @return The keyRepresentation.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation() {
      org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation result = org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.forNumber(keyRepresentation_);
      return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.REPRESENTATION_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     * @param value The keyRepresentation to set.
     */
    private void setKeyRepresentation(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
      keyRepresentation_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Describes the granularity of the key field.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
     */
    private void clearKeyRepresentation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      keyRepresentation_ = 0;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.String key_;
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      return key_;
    }
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(key_);
    }
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @param value The key to set.
     */
    private void setKey(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      key_ = value;
    }
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     */
    private void clearKey() {
      bitField0_ = (bitField0_ & ~0x00000002);
      key_ = getDefaultInstance().getKey();
    }
    /**
     * <pre>
     * The key that applies to this hint. The key_representation field describes
     * the form in which this key takes. Guaranteed to be non-empty.
     * </pre>
     *
     * <code>optional string key = 2;</code>
     * @param value The bytes for key to set.
     */
    private void setKeyBytes(
        com.google.protobuf.ByteString value) {
      key_ = value.toStringUtf8();
      bitField0_ |= 0x00000002;
    }

    public static final int WHITELISTED_OPTIMIZATIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> whitelistedOptimizations_;
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> getWhitelistedOptimizationsList() {
      return whitelistedOptimizations_;
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationOrBuilder> 
        getWhitelistedOptimizationsOrBuilderList() {
      return whitelistedOptimizations_;
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public int getWhitelistedOptimizationsCount() {
      return whitelistedOptimizations_.size();
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index) {
      return whitelistedOptimizations_.get(index);
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationOrBuilder getWhitelistedOptimizationsOrBuilder(
        int index) {
      return whitelistedOptimizations_.get(index);
    }
    private void ensureWhitelistedOptimizationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> tmp = whitelistedOptimizations_;
      if (!tmp.isModifiable()) {
        whitelistedOptimizations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void setWhitelistedOptimizations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.set(index, value);
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addWhitelistedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.add(value);
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addWhitelistedOptimizations(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
      value.getClass();
  ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.add(index, value);
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void addAllWhitelistedOptimizations(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Optimization> values) {
      ensureWhitelistedOptimizationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, whitelistedOptimizations_);
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void clearWhitelistedOptimizations() {
      whitelistedOptimizations_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An unordered set of optimizations that should be whitelisted for this
     * hint.
     * This field is currently only specified for key_representation of HOST.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
     */
    private void removeWhitelistedOptimizations(int index) {
      ensureWhitelistedOptimizationsIsMutable();
      whitelistedOptimizations_.remove(index);
    }

    public static final int PAGE_HINTS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> pageHints_;
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> getPageHintsList() {
      return pageHints_;
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.PageHintOrBuilder> 
        getPageHintsOrBuilderList() {
      return pageHints_;
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    @java.lang.Override
    public int getPageHintsCount() {
      return pageHints_.size();
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.PageHint getPageHints(int index) {
      return pageHints_.get(index);
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.PageHintOrBuilder getPageHintsOrBuilder(
        int index) {
      return pageHints_.get(index);
    }
    private void ensurePageHintsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> tmp = pageHints_;
      if (!tmp.isModifiable()) {
        pageHints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void setPageHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
      value.getClass();
  ensurePageHintsIsMutable();
      pageHints_.set(index, value);
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void addPageHints(org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
      value.getClass();
  ensurePageHintsIsMutable();
      pageHints_.add(value);
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void addPageHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
      value.getClass();
  ensurePageHintsIsMutable();
      pageHints_.add(index, value);
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void addAllPageHints(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.PageHint> values) {
      ensurePageHintsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, pageHints_);
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void clearPageHints() {
      pageHints_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An ordered set of per-page hints. Only the first PageHint record
     * that matches a committed page URL should be used for that page load.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
     */
    private void removePageHints(int index) {
      ensurePageHintsIsMutable();
      pageHints_.remove(index);
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private java.lang.String version_;
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(version_);
    }
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @param value The version to set.
     */
    private void setVersion(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000004;
      version_ = value;
    }
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      version_ = getDefaultInstance().getVersion();
    }
    /**
     * <pre>
     * Version that generated this hint.
     * It is expected that this version be sent along with subsequent requests
     * for hosts that match this hint.
     * </pre>
     *
     * <code>optional string version = 5;</code>
     * @param value The bytes for version to set.
     */
    private void setVersionBytes(
        com.google.protobuf.ByteString value) {
      version_ = value.toStringUtf8();
      bitField0_ |= 0x00000004;
    }

    public static final int MAX_CACHE_DURATION_FIELD_NUMBER = 6;
    private org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration maxCacheDuration_;
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     */
    @java.lang.Override
    public boolean hasMaxCacheDuration() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration() {
      return maxCacheDuration_ == null ? org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance() : maxCacheDuration_;
    }
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     */
    private void setMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  maxCacheDuration_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
      value.getClass();
  if (maxCacheDuration_ != null &&
          maxCacheDuration_ != org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.getDefaultInstance()) {
        maxCacheDuration_ =
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.newBuilder(maxCacheDuration_).mergeFrom(value).buildPartial();
      } else {
        maxCacheDuration_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * The maximum duration for which the hint should be used for.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
     */
    private void clearMaxCacheDuration() {  maxCacheDuration_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.Hint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.Hint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.Hint, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.Hint)
        org.chromium.components.optimization_guide.proto.HintsProto.HintOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.Hint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return Whether the keyRepresentation field is set.
       */
      @java.lang.Override
      public boolean hasKeyRepresentation() {
        return instance.hasKeyRepresentation();
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return The keyRepresentation.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation getKeyRepresentation() {
        return instance.getKeyRepresentation();
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @param value The enum numeric value on the wire for keyRepresentation to set.
       * @return This builder for chaining.
       */
      public Builder setKeyRepresentation(org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation value) {
        copyOnWrite();
        instance.setKeyRepresentation(value);
        return this;
      }
      /**
       * <pre>
       * Describes the granularity of the key field.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.KeyRepresentation key_representation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyRepresentation() {
        copyOnWrite();
        instance.clearKeyRepresentation();
        return this;
      }

      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return instance.hasKey();
      }
      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        return instance.getKey();
      }
      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return instance.getKeyBytes();
      }
      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }
      /**
       * <pre>
       * The key that applies to this hint. The key_representation field describes
       * the form in which this key takes. Guaranteed to be non-empty.
       * </pre>
       *
       * <code>optional string key = 2;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyBytes(value);
        return this;
      }

      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Optimization> getWhitelistedOptimizationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getWhitelistedOptimizationsList());
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public int getWhitelistedOptimizationsCount() {
        return instance.getWhitelistedOptimizationsCount();
      }/**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.Optimization getWhitelistedOptimizations(int index) {
        return instance.getWhitelistedOptimizations(index);
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder setWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.setWhitelistedOptimizations(index, value);
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder setWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.setWhitelistedOptimizations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(value);
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization value) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(index, value);
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addWhitelistedOptimizations(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Optimization.Builder builderForValue) {
        copyOnWrite();
        instance.addWhitelistedOptimizations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder addAllWhitelistedOptimizations(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Optimization> values) {
        copyOnWrite();
        instance.addAllWhitelistedOptimizations(values);
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder clearWhitelistedOptimizations() {
        copyOnWrite();
        instance.clearWhitelistedOptimizations();
        return this;
      }
      /**
       * <pre>
       * An unordered set of optimizations that should be whitelisted for this
       * hint.
       * This field is currently only specified for key_representation of HOST.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Optimization whitelisted_optimizations = 3;</code>
       */
      public Builder removeWhitelistedOptimizations(int index) {
        copyOnWrite();
        instance.removeWhitelistedOptimizations(index);
        return this;
      }

      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.PageHint> getPageHintsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPageHintsList());
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      @java.lang.Override
      public int getPageHintsCount() {
        return instance.getPageHintsCount();
      }/**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.PageHint getPageHints(int index) {
        return instance.getPageHints(index);
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder setPageHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
        copyOnWrite();
        instance.setPageHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder setPageHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint.Builder builderForValue) {
        copyOnWrite();
        instance.setPageHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder addPageHints(org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
        copyOnWrite();
        instance.addPageHints(value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder addPageHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint value) {
        copyOnWrite();
        instance.addPageHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder addPageHints(
          org.chromium.components.optimization_guide.proto.HintsProto.PageHint.Builder builderForValue) {
        copyOnWrite();
        instance.addPageHints(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder addPageHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.PageHint.Builder builderForValue) {
        copyOnWrite();
        instance.addPageHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder addAllPageHints(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.PageHint> values) {
        copyOnWrite();
        instance.addAllPageHints(values);
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder clearPageHints() {
        copyOnWrite();
        instance.clearPageHints();
        return this;
      }
      /**
       * <pre>
       * An ordered set of per-page hints. Only the first PageHint record
       * that matches a committed page URL should be used for that page load.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.PageHint page_hints = 4;</code>
       */
      public Builder removePageHints(int index) {
        copyOnWrite();
        instance.removePageHints(index);
        return this;
      }

      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        return instance.getVersionBytes();
      }
      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }
      /**
       * <pre>
       * Version that generated this hint.
       * It is expected that this version be sent along with subsequent requests
       * for hosts that match this hint.
       * </pre>
       *
       * <code>optional string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVersionBytes(value);
        return this;
      }

      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      @java.lang.Override
      public boolean hasMaxCacheDuration() {
        return instance.hasMaxCacheDuration();
      }
      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration getMaxCacheDuration() {
        return instance.getMaxCacheDuration();
      }
      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      public Builder setMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.setMaxCacheDuration(value);
        return this;
        }
      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      public Builder setMaxCacheDuration(
          org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration.Builder builderForValue) {
        copyOnWrite();
        instance.setMaxCacheDuration(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      public Builder mergeMaxCacheDuration(org.chromium.components.optimization_guide.proto.CommonTypesProto.Duration value) {
        copyOnWrite();
        instance.mergeMaxCacheDuration(value);
        return this;
      }
      /**
       * <pre>
       * The maximum duration for which the hint should be used for.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Duration max_cache_duration = 6;</code>
       */
      public Builder clearMaxCacheDuration() {  copyOnWrite();
        instance.clearMaxCacheDuration();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.Hint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.Hint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "keyRepresentation_",
              org.chromium.components.optimization_guide.proto.HintsProto.KeyRepresentation.internalGetVerifier(),
              "key_",
              "whitelistedOptimizations_",
              org.chromium.components.optimization_guide.proto.HintsProto.Optimization.class,
              "pageHints_",
              org.chromium.components.optimization_guide.proto.HintsProto.PageHint.class,
              "version_",
              "maxCacheDuration_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0002\u0000\u0001\u100c\u0000\u0002" +
                "\u1008\u0001\u0003\u001b\u0004\u001b\u0005\u1008\u0002\u0006\u1009\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.Hint> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.Hint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.Hint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.Hint)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.Hint DEFAULT_INSTANCE;
    static {
      Hint defaultInstance = new Hint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Hint.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Hint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Hint> PARSER;

    public static com.google.protobuf.Parser<Hint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BloomFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.BloomFilter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     * @return Whether the numHashFunctions field is set.
     */
    boolean hasNumHashFunctions();
    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     * @return The numHashFunctions.
     */
    int getNumHashFunctions();

    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     * @return Whether the numBits field is set.
     */
    boolean hasNumBits();
    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     * @return The numBits.
     */
    int getNumBits();

    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Configuration and data for a Bloom filter.
   * Note that some additional aspects of the BloomFilter are separately
   * specified between the client and server including the specific MurmurHash3
   * hashing function, how the hashing function is seeded, how bits are
   * addressed in the byte vector, and the nature of the strings that the
   * Bloom filter holds (whether host, host suffix, URL path, etc.).
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.BloomFilter}
   */
  public  static final class BloomFilter extends
      com.google.protobuf.GeneratedMessageLite<
          BloomFilter, BloomFilter.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.BloomFilter)
      BloomFilterOrBuilder {
    private BloomFilter() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int NUM_HASH_FUNCTIONS_FIELD_NUMBER = 1;
    private int numHashFunctions_;
    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     * @return Whether the numHashFunctions field is set.
     */
    @java.lang.Override
    public boolean hasNumHashFunctions() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     * @return The numHashFunctions.
     */
    @java.lang.Override
    public int getNumHashFunctions() {
      return numHashFunctions_;
    }
    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     * @param value The numHashFunctions to set.
     */
    private void setNumHashFunctions(int value) {
      bitField0_ |= 0x00000001;
      numHashFunctions_ = value;
    }
    /**
     * <pre>
     * Specifies the number of hash functions to use in the Bloom filter.
     * This essentially means how many bits will be set in the bit array
     * for a string member of the Bloom filter.
     * </pre>
     *
     * <code>optional uint32 num_hash_functions = 1;</code>
     */
    private void clearNumHashFunctions() {
      bitField0_ = (bitField0_ & ~0x00000001);
      numHashFunctions_ = 0;
    }

    public static final int NUM_BITS_FIELD_NUMBER = 2;
    private int numBits_;
    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     * @return Whether the numBits field is set.
     */
    @java.lang.Override
    public boolean hasNumBits() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     * @return The numBits.
     */
    @java.lang.Override
    public int getNumBits() {
      return numBits_;
    }
    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     * @param value The numBits to set.
     */
    private void setNumBits(int value) {
      bitField0_ |= 0x00000002;
      numBits_ = value;
    }
    /**
     * <pre>
     * The number of bits in the Bloom filter's bit array.
     * </pre>
     *
     * <code>optional uint32 num_bits = 2;</code>
     */
    private void clearNumBits() {
      bitField0_ = (bitField0_ & ~0x00000002);
      numBits_ = 0;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000004;
      data_ = value;
    }
    /**
     * <pre>
     * The bit array data of the Bloom filter provided via a byte vector.
     * The number of bytes provided must be large enough to hold the
     * specified number of bits (num_bits).
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000004);
      data_ = getDefaultInstance().getData();
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Configuration and data for a Bloom filter.
     * Note that some additional aspects of the BloomFilter are separately
     * specified between the client and server including the specific MurmurHash3
     * hashing function, how the hashing function is seeded, how bits are
     * addressed in the byte vector, and the nature of the strings that the
     * Bloom filter holds (whether host, host suffix, URL path, etc.).
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.BloomFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.BloomFilter)
        org.chromium.components.optimization_guide.proto.HintsProto.BloomFilterOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Specifies the number of hash functions to use in the Bloom filter.
       * This essentially means how many bits will be set in the bit array
       * for a string member of the Bloom filter.
       * </pre>
       *
       * <code>optional uint32 num_hash_functions = 1;</code>
       * @return Whether the numHashFunctions field is set.
       */
      @java.lang.Override
      public boolean hasNumHashFunctions() {
        return instance.hasNumHashFunctions();
      }
      /**
       * <pre>
       * Specifies the number of hash functions to use in the Bloom filter.
       * This essentially means how many bits will be set in the bit array
       * for a string member of the Bloom filter.
       * </pre>
       *
       * <code>optional uint32 num_hash_functions = 1;</code>
       * @return The numHashFunctions.
       */
      @java.lang.Override
      public int getNumHashFunctions() {
        return instance.getNumHashFunctions();
      }
      /**
       * <pre>
       * Specifies the number of hash functions to use in the Bloom filter.
       * This essentially means how many bits will be set in the bit array
       * for a string member of the Bloom filter.
       * </pre>
       *
       * <code>optional uint32 num_hash_functions = 1;</code>
       * @param value The numHashFunctions to set.
       * @return This builder for chaining.
       */
      public Builder setNumHashFunctions(int value) {
        copyOnWrite();
        instance.setNumHashFunctions(value);
        return this;
      }
      /**
       * <pre>
       * Specifies the number of hash functions to use in the Bloom filter.
       * This essentially means how many bits will be set in the bit array
       * for a string member of the Bloom filter.
       * </pre>
       *
       * <code>optional uint32 num_hash_functions = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumHashFunctions() {
        copyOnWrite();
        instance.clearNumHashFunctions();
        return this;
      }

      /**
       * <pre>
       * The number of bits in the Bloom filter's bit array.
       * </pre>
       *
       * <code>optional uint32 num_bits = 2;</code>
       * @return Whether the numBits field is set.
       */
      @java.lang.Override
      public boolean hasNumBits() {
        return instance.hasNumBits();
      }
      /**
       * <pre>
       * The number of bits in the Bloom filter's bit array.
       * </pre>
       *
       * <code>optional uint32 num_bits = 2;</code>
       * @return The numBits.
       */
      @java.lang.Override
      public int getNumBits() {
        return instance.getNumBits();
      }
      /**
       * <pre>
       * The number of bits in the Bloom filter's bit array.
       * </pre>
       *
       * <code>optional uint32 num_bits = 2;</code>
       * @param value The numBits to set.
       * @return This builder for chaining.
       */
      public Builder setNumBits(int value) {
        copyOnWrite();
        instance.setNumBits(value);
        return this;
      }
      /**
       * <pre>
       * The number of bits in the Bloom filter's bit array.
       * </pre>
       *
       * <code>optional uint32 num_bits = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumBits() {
        copyOnWrite();
        instance.clearNumBits();
        return this;
      }

      /**
       * <pre>
       * The bit array data of the Bloom filter provided via a byte vector.
       * The number of bytes provided must be large enough to hold the
       * specified number of bits (num_bits).
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       * @return Whether the data field is set.
       */
      @java.lang.Override
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <pre>
       * The bit array data of the Bloom filter provided via a byte vector.
       * The number of bytes provided must be large enough to hold the
       * specified number of bits (num_bits).
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * The bit array data of the Bloom filter provided via a byte vector.
       * The number of bytes provided must be large enough to hold the
       * specified number of bits (num_bits).
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * The bit array data of the Bloom filter provided via a byte vector.
       * The number of bytes provided must be large enough to hold the
       * specified number of bits (num_bits).
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.BloomFilter)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "numHashFunctions_",
              "numBits_",
              "data_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u100b\u0000\u0002" +
                "\u100b\u0001\u0003\u100a\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.BloomFilter)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter DEFAULT_INSTANCE;
    static {
      BloomFilter defaultInstance = new BloomFilter();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BloomFilter.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BloomFilter> PARSER;

    public static com.google.protobuf.Parser<BloomFilter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OptimizationFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.OptimizationFilter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return Whether the optimizationType field is set.
     */
    boolean hasOptimizationType();
    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return The optimizationType.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType();

    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     * @return Whether the bloomFilter field is set.
     */
    boolean hasBloomFilter();
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     * @return The bloomFilter.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter getBloomFilter();

    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @return A list containing the regexps.
     */
    java.util.List<java.lang.String>
        getRegexpsList();
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @return The count of regexps.
     */
    int getRegexpsCount();
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param index The index of the element to return.
     * @return The regexps at the given index.
     */
    java.lang.String getRegexps(int index);
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param index The index of the element to return.
     * @return The regexps at the given index.
     */
    com.google.protobuf.ByteString
        getRegexpsBytes(int index);

    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @return A list containing the exclusionRegexps.
     */
    java.util.List<java.lang.String>
        getExclusionRegexpsList();
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @return The count of exclusionRegexps.
     */
    int getExclusionRegexpsCount();
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param index The index of the element to return.
     * @return The exclusionRegexps at the given index.
     */
    java.lang.String getExclusionRegexps(int index);
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param index The index of the element to return.
     * @return The exclusionRegexps at the given index.
     */
    com.google.protobuf.ByteString
        getExclusionRegexpsBytes(int index);

    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     * @return Whether the skipHostSuffixChecking field is set.
     */
    boolean hasSkipHostSuffixChecking();
    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     * @return The skipHostSuffixChecking.
     */
    boolean getSkipHostSuffixChecking();
  }
  /**
   * <pre>
   * A scalable filter for an optimization type.
   * Next ID: 6
   * </pre>
   *
   * Protobuf type {@code optimization_guide.proto.OptimizationFilter}
   */
  public  static final class OptimizationFilter extends
      com.google.protobuf.GeneratedMessageLite<
          OptimizationFilter, OptimizationFilter.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.OptimizationFilter)
      OptimizationFilterOrBuilder {
    private OptimizationFilter() {
      regexps_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      exclusionRegexps_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    private int bitField0_;
    public static final int OPTIMIZATION_TYPE_FIELD_NUMBER = 1;
    private int optimizationType_;
    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return Whether the optimizationType field is set.
     */
    @java.lang.Override
    public boolean hasOptimizationType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @return The optimizationType.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType() {
      org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType result = org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.forNumber(optimizationType_);
      return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.TYPE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     * @param value The optimizationType to set.
     */
    private void setOptimizationType(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
      optimizationType_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The type of optimization this filter applies to.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
     */
    private void clearOptimizationType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      optimizationType_ = 0;
    }

    public static final int BLOOM_FILTER_FIELD_NUMBER = 2;
    private org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter bloomFilter_;
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     */
    @java.lang.Override
    public boolean hasBloomFilter() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter getBloomFilter() {
      return bloomFilter_ == null ? org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.getDefaultInstance() : bloomFilter_;
    }
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     */
    private void setBloomFilter(org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter value) {
      value.getClass();
  bloomFilter_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeBloomFilter(org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter value) {
      value.getClass();
  if (bloomFilter_ != null &&
          bloomFilter_ != org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.getDefaultInstance()) {
        bloomFilter_ =
          org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.newBuilder(bloomFilter_).mergeFrom(value).buildPartial();
      } else {
        bloomFilter_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The filter data represented as a Bloom filter.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
     */
    private void clearBloomFilter() {  bloomFilter_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int REGEXPS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> regexps_;
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @return A list containing the regexps.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getRegexpsList() {
      return regexps_;
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @return The count of regexps.
     */
    @java.lang.Override
    public int getRegexpsCount() {
      return regexps_.size();
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param index The index of the element to return.
     * @return The regexps at the given index.
     */
    @java.lang.Override
    public java.lang.String getRegexps(int index) {
      return regexps_.get(index);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the regexps at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRegexpsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          regexps_.get(index));
    }
    private void ensureRegexpsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          regexps_;  if (!tmp.isModifiable()) {
        regexps_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param index The index to set the value at.
     * @param value The regexps to set.
     */
    private void setRegexps(
        int index, java.lang.String value) {
      value.getClass();
  ensureRegexpsIsMutable();
      regexps_.set(index, value);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param value The regexps to add.
     */
    private void addRegexps(
        java.lang.String value) {
      value.getClass();
  ensureRegexpsIsMutable();
      regexps_.add(value);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param values The regexps to add.
     */
    private void addAllRegexps(
        java.lang.Iterable<java.lang.String> values) {
      ensureRegexpsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, regexps_);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     */
    private void clearRegexps() {
      regexps_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as contained in the filter.
     * </pre>
     *
     * <code>repeated string regexps = 3;</code>
     * @param value The bytes of the regexps to add.
     */
    private void addRegexpsBytes(
        com.google.protobuf.ByteString value) {
      ensureRegexpsIsMutable();
      regexps_.add(value.toStringUtf8());
    }

    public static final int EXCLUSION_REGEXPS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> exclusionRegexps_;
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @return A list containing the exclusionRegexps.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getExclusionRegexpsList() {
      return exclusionRegexps_;
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @return The count of exclusionRegexps.
     */
    @java.lang.Override
    public int getExclusionRegexpsCount() {
      return exclusionRegexps_.size();
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param index The index of the element to return.
     * @return The exclusionRegexps at the given index.
     */
    @java.lang.Override
    public java.lang.String getExclusionRegexps(int index) {
      return exclusionRegexps_.get(index);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exclusionRegexps at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExclusionRegexpsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          exclusionRegexps_.get(index));
    }
    private void ensureExclusionRegexpsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          exclusionRegexps_;  if (!tmp.isModifiable()) {
        exclusionRegexps_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param index The index to set the value at.
     * @param value The exclusionRegexps to set.
     */
    private void setExclusionRegexps(
        int index, java.lang.String value) {
      value.getClass();
  ensureExclusionRegexpsIsMutable();
      exclusionRegexps_.set(index, value);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param value The exclusionRegexps to add.
     */
    private void addExclusionRegexps(
        java.lang.String value) {
      value.getClass();
  ensureExclusionRegexpsIsMutable();
      exclusionRegexps_.add(value);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param values The exclusionRegexps to add.
     */
    private void addAllExclusionRegexps(
        java.lang.Iterable<java.lang.String> values) {
      ensureExclusionRegexpsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, exclusionRegexps_);
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     */
    private void clearExclusionRegexps() {
      exclusionRegexps_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Additional filters represented as regexps matched against the main page
     * URL. If matched, the URL will be considered as not contained in the filter.
     * This set of regexps should be checked prior to any matching against the
     * contained bloom_filter or regexps fields.
     * </pre>
     *
     * <code>repeated string exclusion_regexps = 5;</code>
     * @param value The bytes of the exclusionRegexps to add.
     */
    private void addExclusionRegexpsBytes(
        com.google.protobuf.ByteString value) {
      ensureExclusionRegexpsIsMutable();
      exclusionRegexps_.add(value.toStringUtf8());
    }

    public static final int SKIP_HOST_SUFFIX_CHECKING_FIELD_NUMBER = 4;
    private boolean skipHostSuffixChecking_;
    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     * @return Whether the skipHostSuffixChecking field is set.
     */
    @java.lang.Override
    public boolean hasSkipHostSuffixChecking() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     * @return The skipHostSuffixChecking.
     */
    @java.lang.Override
    public boolean getSkipHostSuffixChecking() {
      return skipHostSuffixChecking_;
    }
    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     * @param value The skipHostSuffixChecking to set.
     */
    private void setSkipHostSuffixChecking(boolean value) {
      bitField0_ |= 0x00000004;
      skipHostSuffixChecking_ = value;
    }
    /**
     * <pre>
     * Whether additional host suffixes (other than the host) should be checked
     * against the filter.
     * </pre>
     *
     * <code>optional bool skip_host_suffix_checking = 4;</code>
     */
    private void clearSkipHostSuffixChecking() {
      bitField0_ = (bitField0_ & ~0x00000004);
      skipHostSuffixChecking_ = false;
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A scalable filter for an optimization type.
     * Next ID: 6
     * </pre>
     *
     * Protobuf type {@code optimization_guide.proto.OptimizationFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.OptimizationFilter)
        org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilterOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The type of optimization this filter applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return Whether the optimizationType field is set.
       */
      @java.lang.Override
      public boolean hasOptimizationType() {
        return instance.hasOptimizationType();
      }
      /**
       * <pre>
       * The type of optimization this filter applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return The optimizationType.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType getOptimizationType() {
        return instance.getOptimizationType();
      }
      /**
       * <pre>
       * The type of optimization this filter applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @param value The enum numeric value on the wire for optimizationType to set.
       * @return This builder for chaining.
       */
      public Builder setOptimizationType(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType value) {
        copyOnWrite();
        instance.setOptimizationType(value);
        return this;
      }
      /**
       * <pre>
       * The type of optimization this filter applies to.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.OptimizationType optimization_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptimizationType() {
        copyOnWrite();
        instance.clearOptimizationType();
        return this;
      }

      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      @java.lang.Override
      public boolean hasBloomFilter() {
        return instance.hasBloomFilter();
      }
      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter getBloomFilter() {
        return instance.getBloomFilter();
      }
      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      public Builder setBloomFilter(org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter value) {
        copyOnWrite();
        instance.setBloomFilter(value);
        return this;
        }
      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      public Builder setBloomFilter(
          org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setBloomFilter(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      public Builder mergeBloomFilter(org.chromium.components.optimization_guide.proto.HintsProto.BloomFilter value) {
        copyOnWrite();
        instance.mergeBloomFilter(value);
        return this;
      }
      /**
       * <pre>
       * The filter data represented as a Bloom filter.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.BloomFilter bloom_filter = 2;</code>
       */
      public Builder clearBloomFilter() {  copyOnWrite();
        instance.clearBloomFilter();
        return this;
      }

      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @return A list containing the regexps.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getRegexpsList() {
        return java.util.Collections.unmodifiableList(
            instance.getRegexpsList());
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @return The count of regexps.
       */
      @java.lang.Override
      public int getRegexpsCount() {
        return instance.getRegexpsCount();
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param index The index of the element to return.
       * @return The regexps at the given index.
       */
      @java.lang.Override
      public java.lang.String getRegexps(int index) {
        return instance.getRegexps(index);
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the regexps at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRegexpsBytes(int index) {
        return instance.getRegexpsBytes(index);
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param index The index to set the value at.
       * @param value The regexps to set.
       * @return This builder for chaining.
       */
      public Builder setRegexps(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setRegexps(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param value The regexps to add.
       * @return This builder for chaining.
       */
      public Builder addRegexps(
          java.lang.String value) {
        copyOnWrite();
        instance.addRegexps(value);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param values The regexps to add.
       * @return This builder for chaining.
       */
      public Builder addAllRegexps(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllRegexps(values);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegexps() {
        copyOnWrite();
        instance.clearRegexps();
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as contained in the filter.
       * </pre>
       *
       * <code>repeated string regexps = 3;</code>
       * @param value The bytes of the regexps to add.
       * @return This builder for chaining.
       */
      public Builder addRegexpsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addRegexpsBytes(value);
        return this;
      }

      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @return A list containing the exclusionRegexps.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getExclusionRegexpsList() {
        return java.util.Collections.unmodifiableList(
            instance.getExclusionRegexpsList());
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @return The count of exclusionRegexps.
       */
      @java.lang.Override
      public int getExclusionRegexpsCount() {
        return instance.getExclusionRegexpsCount();
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param index The index of the element to return.
       * @return The exclusionRegexps at the given index.
       */
      @java.lang.Override
      public java.lang.String getExclusionRegexps(int index) {
        return instance.getExclusionRegexps(index);
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the exclusionRegexps at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getExclusionRegexpsBytes(int index) {
        return instance.getExclusionRegexpsBytes(index);
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param index The index to set the value at.
       * @param value The exclusionRegexps to set.
       * @return This builder for chaining.
       */
      public Builder setExclusionRegexps(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setExclusionRegexps(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param value The exclusionRegexps to add.
       * @return This builder for chaining.
       */
      public Builder addExclusionRegexps(
          java.lang.String value) {
        copyOnWrite();
        instance.addExclusionRegexps(value);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param values The exclusionRegexps to add.
       * @return This builder for chaining.
       */
      public Builder addAllExclusionRegexps(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllExclusionRegexps(values);
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearExclusionRegexps() {
        copyOnWrite();
        instance.clearExclusionRegexps();
        return this;
      }
      /**
       * <pre>
       * Additional filters represented as regexps matched against the main page
       * URL. If matched, the URL will be considered as not contained in the filter.
       * This set of regexps should be checked prior to any matching against the
       * contained bloom_filter or regexps fields.
       * </pre>
       *
       * <code>repeated string exclusion_regexps = 5;</code>
       * @param value The bytes of the exclusionRegexps to add.
       * @return This builder for chaining.
       */
      public Builder addExclusionRegexpsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addExclusionRegexpsBytes(value);
        return this;
      }

      /**
       * <pre>
       * Whether additional host suffixes (other than the host) should be checked
       * against the filter.
       * </pre>
       *
       * <code>optional bool skip_host_suffix_checking = 4;</code>
       * @return Whether the skipHostSuffixChecking field is set.
       */
      @java.lang.Override
      public boolean hasSkipHostSuffixChecking() {
        return instance.hasSkipHostSuffixChecking();
      }
      /**
       * <pre>
       * Whether additional host suffixes (other than the host) should be checked
       * against the filter.
       * </pre>
       *
       * <code>optional bool skip_host_suffix_checking = 4;</code>
       * @return The skipHostSuffixChecking.
       */
      @java.lang.Override
      public boolean getSkipHostSuffixChecking() {
        return instance.getSkipHostSuffixChecking();
      }
      /**
       * <pre>
       * Whether additional host suffixes (other than the host) should be checked
       * against the filter.
       * </pre>
       *
       * <code>optional bool skip_host_suffix_checking = 4;</code>
       * @param value The skipHostSuffixChecking to set.
       * @return This builder for chaining.
       */
      public Builder setSkipHostSuffixChecking(boolean value) {
        copyOnWrite();
        instance.setSkipHostSuffixChecking(value);
        return this;
      }
      /**
       * <pre>
       * Whether additional host suffixes (other than the host) should be checked
       * against the filter.
       * </pre>
       *
       * <code>optional bool skip_host_suffix_checking = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkipHostSuffixChecking() {
        copyOnWrite();
        instance.clearSkipHostSuffixChecking();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.OptimizationFilter)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "optimizationType_",
              org.chromium.components.optimization_guide.proto.HintsProto.OptimizationType.internalGetVerifier(),
              "bloomFilter_",
              "regexps_",
              "skipHostSuffixChecking_",
              "exclusionRegexps_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0002\u0000\u0001\u100c\u0000\u0002" +
                "\u1009\u0001\u0003\u001a\u0004\u1007\u0002\u0005\u001a";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.OptimizationFilter)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter DEFAULT_INSTANCE;
    static {
      OptimizationFilter defaultInstance = new OptimizationFilter();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        OptimizationFilter.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OptimizationFilter> PARSER;

    public static com.google.protobuf.Parser<OptimizationFilter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.Configuration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> 
        getHintsList();
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index);
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    int getHintsCount();

    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> 
        getOptimizationBlacklistsList();
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationBlacklists(int index);
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    int getOptimizationBlacklistsCount();

    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> 
        getOptimizationAllowlistsList();
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationAllowlists(int index);
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    int getOptimizationAllowlistsCount();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.Configuration}
   */
  public  static final class Configuration extends
      com.google.protobuf.GeneratedMessageLite<
          Configuration, Configuration.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.Configuration)
      ConfigurationOrBuilder {
    private Configuration() {
      hints_ = emptyProtobufList();
      optimizationBlacklists_ = emptyProtobufList();
      optimizationAllowlists_ = emptyProtobufList();
    }
    public static final int HINTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Hint> hints_;
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> getHintsList() {
      return hints_;
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.HintOrBuilder> 
        getHintsOrBuilderList() {
      return hints_;
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public int getHintsCount() {
      return hints_.size();
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index) {
      return hints_.get(index);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.HintOrBuilder getHintsOrBuilder(
        int index) {
      return hints_.get(index);
    }
    private void ensureHintsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.Hint> tmp = hints_;
      if (!tmp.isModifiable()) {
        hints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void setHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.set(index, value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addHints(org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.add(value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addHints(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
      value.getClass();
  ensureHintsIsMutable();
      hints_.add(index, value);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void addAllHints(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Hint> values) {
      ensureHintsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, hints_);
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void clearHints() {
      hints_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An ordered list containing hints for key/optimization combinations.
     * It is guaranteed that there will only be a single hint per key and key
     * representation combination. These hints are intended to apply to a full
     * page.
     * Note, this list may contain multiple hints that apply to a page. For
     * example, if there are hints for (HOST_SUFFIX,example.com) and
     * (HOST_SUFFIX,sports.example.com), these may both apply to
     * sports.example.com/foo.
     * The client will use the first Hint record with a key that matches the
     * main frame URL. Therefore, the server should provide all the hint
     * details for that key that it wants to provide as the client will only
     * look at that one record to decide which optimization to apply.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
     */
    private void removeHints(int index) {
      ensureHintsIsMutable();
      hints_.remove(index);
    }

    public static final int OPTIMIZATION_BLACKLISTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> optimizationBlacklists_;
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> getOptimizationBlacklistsList() {
      return optimizationBlacklists_;
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilterOrBuilder> 
        getOptimizationBlacklistsOrBuilderList() {
      return optimizationBlacklists_;
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    @java.lang.Override
    public int getOptimizationBlacklistsCount() {
      return optimizationBlacklists_.size();
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationBlacklists(int index) {
      return optimizationBlacklists_.get(index);
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilterOrBuilder getOptimizationBlacklistsOrBuilder(
        int index) {
      return optimizationBlacklists_.get(index);
    }
    private void ensureOptimizationBlacklistsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> tmp = optimizationBlacklists_;
      if (!tmp.isModifiable()) {
        optimizationBlacklists_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void setOptimizationBlacklists(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationBlacklistsIsMutable();
      optimizationBlacklists_.set(index, value);
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void addOptimizationBlacklists(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationBlacklistsIsMutable();
      optimizationBlacklists_.add(value);
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void addOptimizationBlacklists(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationBlacklistsIsMutable();
      optimizationBlacklists_.add(index, value);
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void addAllOptimizationBlacklists(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> values) {
      ensureOptimizationBlacklistsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, optimizationBlacklists_);
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void clearOptimizationBlacklists() {
      optimizationBlacklists_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A set of per-optimization blacklists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
     */
    private void removeOptimizationBlacklists(int index) {
      ensureOptimizationBlacklistsIsMutable();
      optimizationBlacklists_.remove(index);
    }

    public static final int OPTIMIZATION_ALLOWLISTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> optimizationAllowlists_;
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> getOptimizationAllowlistsList() {
      return optimizationAllowlists_;
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilterOrBuilder> 
        getOptimizationAllowlistsOrBuilderList() {
      return optimizationAllowlists_;
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    @java.lang.Override
    public int getOptimizationAllowlistsCount() {
      return optimizationAllowlists_.size();
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationAllowlists(int index) {
      return optimizationAllowlists_.get(index);
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilterOrBuilder getOptimizationAllowlistsOrBuilder(
        int index) {
      return optimizationAllowlists_.get(index);
    }
    private void ensureOptimizationAllowlistsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> tmp = optimizationAllowlists_;
      if (!tmp.isModifiable()) {
        optimizationAllowlists_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void setOptimizationAllowlists(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationAllowlistsIsMutable();
      optimizationAllowlists_.set(index, value);
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void addOptimizationAllowlists(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationAllowlistsIsMutable();
      optimizationAllowlists_.add(value);
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void addOptimizationAllowlists(
        int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
      value.getClass();
  ensureOptimizationAllowlistsIsMutable();
      optimizationAllowlists_.add(index, value);
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void addAllOptimizationAllowlists(
        java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> values) {
      ensureOptimizationAllowlistsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, optimizationAllowlists_);
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void clearOptimizationAllowlists() {
      optimizationAllowlists_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A set of per-optimization allowlists.
     * It is guaranteed that an optimization type will not have filters in both
     * |optimization_blacklists| and |optimization_allowlists|.
     * </pre>
     *
     * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
     */
    private void removeOptimizationAllowlists(int index) {
      ensureOptimizationAllowlistsIsMutable();
      optimizationAllowlists_.remove(index);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.Configuration prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.Configuration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.Configuration, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.Configuration)
        org.chromium.components.optimization_guide.proto.HintsProto.ConfigurationOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.Configuration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.Hint> getHintsList() {
        return java.util.Collections.unmodifiableList(
            instance.getHintsList());
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public int getHintsCount() {
        return instance.getHintsCount();
      }/**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.Hint getHints(int index) {
        return instance.getHints(index);
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder setHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.setHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder setHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.setHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.addHints(value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint value) {
        copyOnWrite();
        instance.addHints(index, value);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.addHints(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addHints(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.Hint.Builder builderForValue) {
        copyOnWrite();
        instance.addHints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder addAllHints(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.Hint> values) {
        copyOnWrite();
        instance.addAllHints(values);
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder clearHints() {
        copyOnWrite();
        instance.clearHints();
        return this;
      }
      /**
       * <pre>
       * An ordered list containing hints for key/optimization combinations.
       * It is guaranteed that there will only be a single hint per key and key
       * representation combination. These hints are intended to apply to a full
       * page.
       * Note, this list may contain multiple hints that apply to a page. For
       * example, if there are hints for (HOST_SUFFIX,example.com) and
       * (HOST_SUFFIX,sports.example.com), these may both apply to
       * sports.example.com/foo.
       * The client will use the first Hint record with a key that matches the
       * main frame URL. Therefore, the server should provide all the hint
       * details for that key that it wants to provide as the client will only
       * look at that one record to decide which optimization to apply.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.Hint hints = 1;</code>
       */
      public Builder removeHints(int index) {
        copyOnWrite();
        instance.removeHints(index);
        return this;
      }

      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> getOptimizationBlacklistsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOptimizationBlacklistsList());
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      @java.lang.Override
      public int getOptimizationBlacklistsCount() {
        return instance.getOptimizationBlacklistsCount();
      }/**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationBlacklists(int index) {
        return instance.getOptimizationBlacklists(index);
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder setOptimizationBlacklists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.setOptimizationBlacklists(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder setOptimizationBlacklists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setOptimizationBlacklists(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder addOptimizationBlacklists(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.addOptimizationBlacklists(value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder addOptimizationBlacklists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.addOptimizationBlacklists(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder addOptimizationBlacklists(
          org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.addOptimizationBlacklists(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder addOptimizationBlacklists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.addOptimizationBlacklists(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder addAllOptimizationBlacklists(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> values) {
        copyOnWrite();
        instance.addAllOptimizationBlacklists(values);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder clearOptimizationBlacklists() {
        copyOnWrite();
        instance.clearOptimizationBlacklists();
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization blacklists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_blacklists = 2;</code>
       */
      public Builder removeOptimizationBlacklists(int index) {
        copyOnWrite();
        instance.removeOptimizationBlacklists(index);
        return this;
      }

      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> getOptimizationAllowlistsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOptimizationAllowlistsList());
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      @java.lang.Override
      public int getOptimizationAllowlistsCount() {
        return instance.getOptimizationAllowlistsCount();
      }/**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter getOptimizationAllowlists(int index) {
        return instance.getOptimizationAllowlists(index);
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder setOptimizationAllowlists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.setOptimizationAllowlists(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder setOptimizationAllowlists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setOptimizationAllowlists(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder addOptimizationAllowlists(org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.addOptimizationAllowlists(value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder addOptimizationAllowlists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter value) {
        copyOnWrite();
        instance.addOptimizationAllowlists(index, value);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder addOptimizationAllowlists(
          org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.addOptimizationAllowlists(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder addOptimizationAllowlists(
          int index, org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.Builder builderForValue) {
        copyOnWrite();
        instance.addOptimizationAllowlists(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder addAllOptimizationAllowlists(
          java.lang.Iterable<? extends org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter> values) {
        copyOnWrite();
        instance.addAllOptimizationAllowlists(values);
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder clearOptimizationAllowlists() {
        copyOnWrite();
        instance.clearOptimizationAllowlists();
        return this;
      }
      /**
       * <pre>
       * A set of per-optimization allowlists.
       * It is guaranteed that an optimization type will not have filters in both
       * |optimization_blacklists| and |optimization_allowlists|.
       * </pre>
       *
       * <code>repeated .optimization_guide.proto.OptimizationFilter optimization_allowlists = 3;</code>
       */
      public Builder removeOptimizationAllowlists(int index) {
        copyOnWrite();
        instance.removeOptimizationAllowlists(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.Configuration)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.Configuration();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "hints_",
              org.chromium.components.optimization_guide.proto.HintsProto.Hint.class,
              "optimizationBlacklists_",
              org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.class,
              "optimizationAllowlists_",
              org.chromium.components.optimization_guide.proto.HintsProto.OptimizationFilter.class,
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0003\u0000\u0001\u001b\u0002\u001b" +
                "\u0003\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.Configuration> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.Configuration.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.Configuration>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.Configuration)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.Configuration DEFAULT_INSTANCE;
    static {
      Configuration defaultInstance = new Configuration();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Configuration.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Configuration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Configuration> PARSER;

    public static com.google.protobuf.Parser<Configuration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimestampOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.Timestamp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     * @return Whether the seconds field is set.
     */
    boolean hasSeconds();
    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     * @return The seconds.
     */
    long getSeconds();

    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     * @return Whether the nanos field is set.
     */
    boolean hasNanos();
    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     * @return The nanos.
     */
    int getNanos();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.Timestamp}
   */
  public  static final class Timestamp extends
      com.google.protobuf.GeneratedMessageLite<
          Timestamp, Timestamp.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.Timestamp)
      TimestampOrBuilder {
    private Timestamp() {
    }
    private int bitField0_;
    public static final int SECONDS_FIELD_NUMBER = 1;
    private long seconds_;
    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     * @return Whether the seconds field is set.
     */
    @java.lang.Override
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     * @return The seconds.
     */
    @java.lang.Override
    public long getSeconds() {
      return seconds_;
    }
    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     * @param value The seconds to set.
     */
    private void setSeconds(long value) {
      bitField0_ |= 0x00000001;
      seconds_ = value;
    }
    /**
     * <pre>
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     * </pre>
     *
     * <code>optional int64 seconds = 1;</code>
     */
    private void clearSeconds() {
      bitField0_ = (bitField0_ & ~0x00000001);
      seconds_ = 0L;
    }

    public static final int NANOS_FIELD_NUMBER = 2;
    private int nanos_;
    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     * @return Whether the nanos field is set.
     */
    @java.lang.Override
    public boolean hasNanos() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     * @return The nanos.
     */
    @java.lang.Override
    public int getNanos() {
      return nanos_;
    }
    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     * @param value The nanos to set.
     */
    private void setNanos(int value) {
      bitField0_ |= 0x00000002;
      nanos_ = value;
    }
    /**
     * <pre>
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     * </pre>
     *
     * <code>optional int32 nanos = 2;</code>
     */
    private void clearNanos() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nanos_ = 0;
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.Timestamp prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.Timestamp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.Timestamp, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.Timestamp)
        org.chromium.components.optimization_guide.proto.HintsProto.TimestampOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Represents seconds of UTC time since Unix epoch
       * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
       * 9999-12-31T23:59:59Z inclusive.
       * </pre>
       *
       * <code>optional int64 seconds = 1;</code>
       * @return Whether the seconds field is set.
       */
      @java.lang.Override
      public boolean hasSeconds() {
        return instance.hasSeconds();
      }
      /**
       * <pre>
       * Represents seconds of UTC time since Unix epoch
       * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
       * 9999-12-31T23:59:59Z inclusive.
       * </pre>
       *
       * <code>optional int64 seconds = 1;</code>
       * @return The seconds.
       */
      @java.lang.Override
      public long getSeconds() {
        return instance.getSeconds();
      }
      /**
       * <pre>
       * Represents seconds of UTC time since Unix epoch
       * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
       * 9999-12-31T23:59:59Z inclusive.
       * </pre>
       *
       * <code>optional int64 seconds = 1;</code>
       * @param value The seconds to set.
       * @return This builder for chaining.
       */
      public Builder setSeconds(long value) {
        copyOnWrite();
        instance.setSeconds(value);
        return this;
      }
      /**
       * <pre>
       * Represents seconds of UTC time since Unix epoch
       * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
       * 9999-12-31T23:59:59Z inclusive.
       * </pre>
       *
       * <code>optional int64 seconds = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeconds() {
        copyOnWrite();
        instance.clearSeconds();
        return this;
      }

      /**
       * <pre>
       * Non-negative fractions of a second at nanosecond resolution. Negative
       * second values with fractions must still have non-negative nanos values
       * that count forward in time. Must be from 0 to 999,999,999
       * inclusive.
       * </pre>
       *
       * <code>optional int32 nanos = 2;</code>
       * @return Whether the nanos field is set.
       */
      @java.lang.Override
      public boolean hasNanos() {
        return instance.hasNanos();
      }
      /**
       * <pre>
       * Non-negative fractions of a second at nanosecond resolution. Negative
       * second values with fractions must still have non-negative nanos values
       * that count forward in time. Must be from 0 to 999,999,999
       * inclusive.
       * </pre>
       *
       * <code>optional int32 nanos = 2;</code>
       * @return The nanos.
       */
      @java.lang.Override
      public int getNanos() {
        return instance.getNanos();
      }
      /**
       * <pre>
       * Non-negative fractions of a second at nanosecond resolution. Negative
       * second values with fractions must still have non-negative nanos values
       * that count forward in time. Must be from 0 to 999,999,999
       * inclusive.
       * </pre>
       *
       * <code>optional int32 nanos = 2;</code>
       * @param value The nanos to set.
       * @return This builder for chaining.
       */
      public Builder setNanos(int value) {
        copyOnWrite();
        instance.setNanos(value);
        return this;
      }
      /**
       * <pre>
       * Non-negative fractions of a second at nanosecond resolution. Negative
       * second values with fractions must still have non-negative nanos values
       * that count forward in time. Must be from 0 to 999,999,999
       * inclusive.
       * </pre>
       *
       * <code>optional int32 nanos = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNanos() {
        copyOnWrite();
        instance.clearNanos();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.Timestamp)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.Timestamp();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "seconds_",
              "nanos_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1002\u0000\u0002" +
                "\u1004\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.Timestamp> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.Timestamp>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.Timestamp)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.Timestamp DEFAULT_INSTANCE;
    static {
      Timestamp defaultInstance = new Timestamp();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Timestamp.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Timestamp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Timestamp> PARSER;

    public static com.google.protobuf.Parser<Timestamp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VersionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:optimization_guide.proto.Version)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     * @return Whether the generationTimestamp field is set.
     */
    boolean hasGenerationTimestamp();
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     * @return The generationTimestamp.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.Timestamp getGenerationTimestamp();

    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     * @return Whether the hintSource field is set.
     */
    boolean hasHintSource();
    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     * @return The hintSource.
     */
    org.chromium.components.optimization_guide.proto.HintsProto.HintSource getHintSource();
  }
  /**
   * Protobuf type {@code optimization_guide.proto.Version}
   */
  public  static final class Version extends
      com.google.protobuf.GeneratedMessageLite<
          Version, Version.Builder> implements
      // @@protoc_insertion_point(message_implements:optimization_guide.proto.Version)
      VersionOrBuilder {
    private Version() {
    }
    private int bitField0_;
    public static final int GENERATION_TIMESTAMP_FIELD_NUMBER = 1;
    private org.chromium.components.optimization_guide.proto.HintsProto.Timestamp generationTimestamp_;
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     */
    @java.lang.Override
    public boolean hasGenerationTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.Timestamp getGenerationTimestamp() {
      return generationTimestamp_ == null ? org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.getDefaultInstance() : generationTimestamp_;
    }
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     */
    private void setGenerationTimestamp(org.chromium.components.optimization_guide.proto.HintsProto.Timestamp value) {
      value.getClass();
  generationTimestamp_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGenerationTimestamp(org.chromium.components.optimization_guide.proto.HintsProto.Timestamp value) {
      value.getClass();
  if (generationTimestamp_ != null &&
          generationTimestamp_ != org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.getDefaultInstance()) {
        generationTimestamp_ =
          org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.newBuilder(generationTimestamp_).mergeFrom(value).buildPartial();
      } else {
        generationTimestamp_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The time the hint was generated.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
     */
    private void clearGenerationTimestamp() {  generationTimestamp_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int HINT_SOURCE_FIELD_NUMBER = 3;
    private int hintSource_;
    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     * @return Whether the hintSource field is set.
     */
    @java.lang.Override
    public boolean hasHintSource() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     * @return The hintSource.
     */
    @java.lang.Override
    public org.chromium.components.optimization_guide.proto.HintsProto.HintSource getHintSource() {
      org.chromium.components.optimization_guide.proto.HintsProto.HintSource result = org.chromium.components.optimization_guide.proto.HintsProto.HintSource.forNumber(hintSource_);
      return result == null ? org.chromium.components.optimization_guide.proto.HintsProto.HintSource.HINT_SOURCE_UNKNOWN : result;
    }
    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     * @param value The hintSource to set.
     */
    private void setHintSource(org.chromium.components.optimization_guide.proto.HintsProto.HintSource value) {
      hintSource_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The source from which the hint was served from.
     * </pre>
     *
     * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
     */
    private void clearHintSource() {
      bitField0_ = (bitField0_ & ~0x00000002);
      hintSource_ = 0;
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.optimization_guide.proto.HintsProto.Version parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.optimization_guide.proto.HintsProto.Version prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code optimization_guide.proto.Version}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.optimization_guide.proto.HintsProto.Version, Builder> implements
        // @@protoc_insertion_point(builder_implements:optimization_guide.proto.Version)
        org.chromium.components.optimization_guide.proto.HintsProto.VersionOrBuilder {
      // Construct using org.chromium.components.optimization_guide.proto.HintsProto.Version.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      @java.lang.Override
      public boolean hasGenerationTimestamp() {
        return instance.hasGenerationTimestamp();
      }
      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.Timestamp getGenerationTimestamp() {
        return instance.getGenerationTimestamp();
      }
      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      public Builder setGenerationTimestamp(org.chromium.components.optimization_guide.proto.HintsProto.Timestamp value) {
        copyOnWrite();
        instance.setGenerationTimestamp(value);
        return this;
        }
      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      public Builder setGenerationTimestamp(
          org.chromium.components.optimization_guide.proto.HintsProto.Timestamp.Builder builderForValue) {
        copyOnWrite();
        instance.setGenerationTimestamp(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      public Builder mergeGenerationTimestamp(org.chromium.components.optimization_guide.proto.HintsProto.Timestamp value) {
        copyOnWrite();
        instance.mergeGenerationTimestamp(value);
        return this;
      }
      /**
       * <pre>
       * The time the hint was generated.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.Timestamp generation_timestamp = 1;</code>
       */
      public Builder clearGenerationTimestamp() {  copyOnWrite();
        instance.clearGenerationTimestamp();
        return this;
      }

      /**
       * <pre>
       * The source from which the hint was served from.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
       * @return Whether the hintSource field is set.
       */
      @java.lang.Override
      public boolean hasHintSource() {
        return instance.hasHintSource();
      }
      /**
       * <pre>
       * The source from which the hint was served from.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
       * @return The hintSource.
       */
      @java.lang.Override
      public org.chromium.components.optimization_guide.proto.HintsProto.HintSource getHintSource() {
        return instance.getHintSource();
      }
      /**
       * <pre>
       * The source from which the hint was served from.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
       * @param value The enum numeric value on the wire for hintSource to set.
       * @return This builder for chaining.
       */
      public Builder setHintSource(org.chromium.components.optimization_guide.proto.HintsProto.HintSource value) {
        copyOnWrite();
        instance.setHintSource(value);
        return this;
      }
      /**
       * <pre>
       * The source from which the hint was served from.
       * </pre>
       *
       * <code>optional .optimization_guide.proto.HintSource hint_source = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHintSource() {
        copyOnWrite();
        instance.clearHintSource();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:optimization_guide.proto.Version)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.optimization_guide.proto.HintsProto.Version();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "generationTimestamp_",
              "hintSource_",
              org.chromium.components.optimization_guide.proto.HintsProto.HintSource.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0003\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0003" +
                "\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.optimization_guide.proto.HintsProto.Version> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.optimization_guide.proto.HintsProto.Version.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.optimization_guide.proto.HintsProto.Version>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:optimization_guide.proto.Version)
    private static final org.chromium.components.optimization_guide.proto.HintsProto.Version DEFAULT_INSTANCE;
    static {
      Version defaultInstance = new Version();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Version.class, defaultInstance);
    }

    public static org.chromium.components.optimization_guide.proto.HintsProto.Version getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Version> PARSER;

    public static com.google.protobuf.Parser<Version> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
