// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync.proto

package org.chromium.components.sync.protocol;

public interface ClientToServerResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.ClientToServerResponse)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   * @return Whether the commit field is set.
   */
  boolean hasCommit();
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   * @return The commit.
   */
  org.chromium.components.sync.protocol.CommitResponse getCommit();

  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   * @return Whether the getUpdates field is set.
   */
  boolean hasGetUpdates();
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   * @return The getUpdates.
   */
  org.chromium.components.sync.protocol.GetUpdatesResponse getGetUpdates();

  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   * @return Whether the errorCode field is set.
   */
  boolean hasErrorCode();
  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   * @return The errorCode.
   */
  org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorCode();

  /**
   * <code>optional string error_message = 5;</code>
   * @return Whether the errorMessage field is set.
   */
  boolean hasErrorMessage();
  /**
   * <code>optional string error_message = 5;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <code>optional string error_message = 5;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   * @return Whether the storeBirthday field is set.
   */
  boolean hasStoreBirthday();
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   * @return The storeBirthday.
   */
  java.lang.String getStoreBirthday();
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   * @return The bytes for storeBirthday.
   */
  com.google.protobuf.ByteString
      getStoreBirthdayBytes();

  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   * @return Whether the clientCommand field is set.
   */
  boolean hasClientCommand();
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   * @return The clientCommand.
   */
  org.chromium.components.sync.protocol.ClientCommand getClientCommand();

  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   * @return Whether the profilingData field is set.
   */
  boolean hasProfilingData();
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   * @return The profilingData.
   */
  org.chromium.components.sync.protocol.ProfilingData getProfilingData();

  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   * @return A list containing the migratedDataTypeId.
   */
  java.util.List<java.lang.Integer> getMigratedDataTypeIdList();
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   * @return The count of migratedDataTypeId.
   */
  int getMigratedDataTypeIdCount();
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   * @param index The index of the element to return.
   * @return The migratedDataTypeId at the given index.
   */
  int getMigratedDataTypeId(int index);

  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   * @return The error.
   */
  org.chromium.components.sync.protocol.ClientToServerResponse.Error getError();

  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   * @return Whether the newBagOfChips field is set.
   */
  boolean hasNewBagOfChips();
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   * @return The newBagOfChips.
   */
  org.chromium.components.sync.protocol.ChipBag getNewBagOfChips();

  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   * @return Whether the clearServerData field is set.
   */
  boolean hasClearServerData();
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   * @return The clearServerData.
   */
  org.chromium.components.sync.protocol.ClearServerDataResponse getClearServerData();
}
