// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/bookmark_model_metadata.proto

package org.chromium.components.sync.protocol;

public interface BookmarkModelMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.BookmarkModelMetadata)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Bookmark global metadata.
   * </pre>
   *
   * <code>optional .sync_pb.ModelTypeState model_type_state = 1;</code>
   * @return Whether the modelTypeState field is set.
   */
  boolean hasModelTypeState();
  /**
   * <pre>
   * Bookmark global metadata.
   * </pre>
   *
   * <code>optional .sync_pb.ModelTypeState model_type_state = 1;</code>
   * @return The modelTypeState.
   */
  org.chromium.components.sync.protocol.ModelTypeState getModelTypeState();

  /**
   * <pre>
   * A set of all bookmarks metadata.
   * </pre>
   *
   * <code>repeated .sync_pb.BookmarkMetadata bookmarks_metadata = 2;</code>
   */
  java.util.List<org.chromium.components.sync.protocol.BookmarkMetadata> 
      getBookmarksMetadataList();
  /**
   * <pre>
   * A set of all bookmarks metadata.
   * </pre>
   *
   * <code>repeated .sync_pb.BookmarkMetadata bookmarks_metadata = 2;</code>
   */
  org.chromium.components.sync.protocol.BookmarkMetadata getBookmarksMetadata(int index);
  /**
   * <pre>
   * A set of all bookmarks metadata.
   * </pre>
   *
   * <code>repeated .sync_pb.BookmarkMetadata bookmarks_metadata = 2;</code>
   */
  int getBookmarksMetadataCount();

  /**
   * <pre>
   * Indicates whether the reupload of bookmarks has been triggered such that
   * they include the full title, which means that their sequence number has
   * been increased (independently of whether the commit has succeeded or even
   * started).
   * TODO(crbug.com/1066962): remove this code when most of bookmarks are
   * reuploaded.
   * </pre>
   *
   * <code>optional bool bookmarks_full_title_reuploaded = 3;</code>
   * @return Whether the bookmarksFullTitleReuploaded field is set.
   */
  boolean hasBookmarksFullTitleReuploaded();
  /**
   * <pre>
   * Indicates whether the reupload of bookmarks has been triggered such that
   * they include the full title, which means that their sequence number has
   * been increased (independently of whether the commit has succeeded or even
   * started).
   * TODO(crbug.com/1066962): remove this code when most of bookmarks are
   * reuploaded.
   * </pre>
   *
   * <code>optional bool bookmarks_full_title_reuploaded = 3;</code>
   * @return The bookmarksFullTitleReuploaded.
   */
  boolean getBookmarksFullTitleReuploaded();

  /**
   * <pre>
   * The local timestamp corresponding to the last time remote updates were
   * received, in milliseconds since Unix epoch. Introduced in M86.
   * TODO(crbug.com/1032052): Remove this code once all local sync metadata
   * is required to populate the client tag (and be considered invalid
   * otherwise).
   * </pre>
   *
   * <code>optional int64 last_sync_time = 4;</code>
   * @return Whether the lastSyncTime field is set.
   */
  boolean hasLastSyncTime();
  /**
   * <pre>
   * The local timestamp corresponding to the last time remote updates were
   * received, in milliseconds since Unix epoch. Introduced in M86.
   * TODO(crbug.com/1032052): Remove this code once all local sync metadata
   * is required to populate the client tag (and be considered invalid
   * otherwise).
   * </pre>
   *
   * <code>optional int64 last_sync_time = 4;</code>
   * @return The lastSyncTime.
   */
  long getLastSyncTime();

  /**
   * <pre>
   * Represents whether bookmark commits sent to the server (most importantly
   * creations) populate client tags. This is a layer on top of the usual
   * FeatureList to avoid risky transitions during startup, to guard against
   * in-flight commits.
   * TODO(crbug.com/1032052): remove this code when the logic is enabled by
   * default and enforced to true upon startup.
   * </pre>
   *
   * <code>optional bool bookmark_client_tags_in_protocol_enabled = 5;</code>
   * @return Whether the bookmarkClientTagsInProtocolEnabled field is set.
   */
  boolean hasBookmarkClientTagsInProtocolEnabled();
  /**
   * <pre>
   * Represents whether bookmark commits sent to the server (most importantly
   * creations) populate client tags. This is a layer on top of the usual
   * FeatureList to avoid risky transitions during startup, to guard against
   * in-flight commits.
   * TODO(crbug.com/1032052): remove this code when the logic is enabled by
   * default and enforced to true upon startup.
   * </pre>
   *
   * <code>optional bool bookmark_client_tags_in_protocol_enabled = 5;</code>
   * @return The bookmarkClientTagsInProtocolEnabled.
   */
  boolean getBookmarkClientTagsInProtocolEnabled();
}
