
// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     java_cpp_enum.py
// From
//     ../../components/sync/driver/sync_service_utils.h

package org.chromium.components.sync;

import androidx.annotation.IntDef;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@IntDef({
    UploadState.INITIALIZING, UploadState.NOT_ACTIVE, UploadState.ACTIVE, UploadState.MAX_VALUE
})
@Retention(RetentionPolicy.SOURCE)
public @interface UploadState {
  /**
   * Syncing is enabled in principle, but the sync service is not actually active yet. Either it's
   * still initializing (in which case we e.g. don't know about any auth errors yet), or it's in a
   * transient auth error state.
   */
  int INITIALIZING = 0;
  /**
   * We are not syncing to Google, and the caller should assume that we do not have consent to do
   * so. This can have a number of reasons, e.g.: sync as a whole is disabled, or the given model
   * type is disabled, or we're in "local sync" mode, or this data type is encrypted with a custom
   * passphrase (in which case we're technically still uploading, but Google can't inspect the
   * data), or we're in a persistent auth error state. As one special case of an auth error, sync
   * may be "paused" because the user signed out of the content area.
   */
  int NOT_ACTIVE = 1;
  /**
   * We're actively syncing data to Google servers, in a form that is readable by Google.
   */
  int ACTIVE = 2;
  /**
   * Used when logging histograms. Must have this exact name.
   */
  int MAX_VALUE = 2;
}
