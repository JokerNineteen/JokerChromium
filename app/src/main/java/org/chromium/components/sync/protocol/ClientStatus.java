// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Information about the syncer's state.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ClientStatus}
 */
public  final class ClientStatus extends
    com.google.protobuf.GeneratedMessageLite<
        ClientStatus, ClientStatus.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ClientStatus)
    ClientStatusOrBuilder {
  private ClientStatus() {
  }
  private int bitField0_;
  public static final int HIERARCHY_CONFLICT_DETECTED_FIELD_NUMBER = 1;
  private boolean hierarchyConflictDetected_;
  /**
   * <pre>
   * Flag to indicate if the client has detected hierarchy conflcits.  The flag
   * is left unset if update application has not been attempted yet.
   * The server should attempt to resolve any hierarchy conflicts when this flag
   * is set.  The client may not assume that any particular action will be
   * taken.  There is no guarantee the problem will be addressed in a reasonable
   * amount of time.
   * </pre>
   *
   * <code>optional bool hierarchy_conflict_detected = 1;</code>
   * @return Whether the hierarchyConflictDetected field is set.
   */
  @java.lang.Override
  public boolean hasHierarchyConflictDetected() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Flag to indicate if the client has detected hierarchy conflcits.  The flag
   * is left unset if update application has not been attempted yet.
   * The server should attempt to resolve any hierarchy conflicts when this flag
   * is set.  The client may not assume that any particular action will be
   * taken.  There is no guarantee the problem will be addressed in a reasonable
   * amount of time.
   * </pre>
   *
   * <code>optional bool hierarchy_conflict_detected = 1;</code>
   * @return The hierarchyConflictDetected.
   */
  @java.lang.Override
  public boolean getHierarchyConflictDetected() {
    return hierarchyConflictDetected_;
  }
  /**
   * <pre>
   * Flag to indicate if the client has detected hierarchy conflcits.  The flag
   * is left unset if update application has not been attempted yet.
   * The server should attempt to resolve any hierarchy conflicts when this flag
   * is set.  The client may not assume that any particular action will be
   * taken.  There is no guarantee the problem will be addressed in a reasonable
   * amount of time.
   * </pre>
   *
   * <code>optional bool hierarchy_conflict_detected = 1;</code>
   * @param value The hierarchyConflictDetected to set.
   */
  private void setHierarchyConflictDetected(boolean value) {
    bitField0_ |= 0x00000001;
    hierarchyConflictDetected_ = value;
  }
  /**
   * <pre>
   * Flag to indicate if the client has detected hierarchy conflcits.  The flag
   * is left unset if update application has not been attempted yet.
   * The server should attempt to resolve any hierarchy conflicts when this flag
   * is set.  The client may not assume that any particular action will be
   * taken.  There is no guarantee the problem will be addressed in a reasonable
   * amount of time.
   * </pre>
   *
   * <code>optional bool hierarchy_conflict_detected = 1;</code>
   */
  private void clearHierarchyConflictDetected() {
    bitField0_ = (bitField0_ & ~0x00000001);
    hierarchyConflictDetected_ = false;
  }

  public static final int IS_SYNC_FEATURE_ENABLED_FIELD_NUMBER = 2;
  private boolean isSyncFeatureEnabled_;
  /**
   * <pre>
   * Whether the client has full sync (or, sync the feature) enabled or not.
   * </pre>
   *
   * <code>optional bool is_sync_feature_enabled = 2;</code>
   * @return Whether the isSyncFeatureEnabled field is set.
   */
  @java.lang.Override
  public boolean hasIsSyncFeatureEnabled() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Whether the client has full sync (or, sync the feature) enabled or not.
   * </pre>
   *
   * <code>optional bool is_sync_feature_enabled = 2;</code>
   * @return The isSyncFeatureEnabled.
   */
  @java.lang.Override
  public boolean getIsSyncFeatureEnabled() {
    return isSyncFeatureEnabled_;
  }
  /**
   * <pre>
   * Whether the client has full sync (or, sync the feature) enabled or not.
   * </pre>
   *
   * <code>optional bool is_sync_feature_enabled = 2;</code>
   * @param value The isSyncFeatureEnabled to set.
   */
  private void setIsSyncFeatureEnabled(boolean value) {
    bitField0_ |= 0x00000002;
    isSyncFeatureEnabled_ = value;
  }
  /**
   * <pre>
   * Whether the client has full sync (or, sync the feature) enabled or not.
   * </pre>
   *
   * <code>optional bool is_sync_feature_enabled = 2;</code>
   */
  private void clearIsSyncFeatureEnabled() {
    bitField0_ = (bitField0_ & ~0x00000002);
    isSyncFeatureEnabled_ = false;
  }

  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientStatus parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ClientStatus prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Information about the syncer's state.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ClientStatus}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ClientStatus, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ClientStatus)
      org.chromium.components.sync.protocol.ClientStatusOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ClientStatus.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Flag to indicate if the client has detected hierarchy conflcits.  The flag
     * is left unset if update application has not been attempted yet.
     * The server should attempt to resolve any hierarchy conflicts when this flag
     * is set.  The client may not assume that any particular action will be
     * taken.  There is no guarantee the problem will be addressed in a reasonable
     * amount of time.
     * </pre>
     *
     * <code>optional bool hierarchy_conflict_detected = 1;</code>
     * @return Whether the hierarchyConflictDetected field is set.
     */
    @java.lang.Override
    public boolean hasHierarchyConflictDetected() {
      return instance.hasHierarchyConflictDetected();
    }
    /**
     * <pre>
     * Flag to indicate if the client has detected hierarchy conflcits.  The flag
     * is left unset if update application has not been attempted yet.
     * The server should attempt to resolve any hierarchy conflicts when this flag
     * is set.  The client may not assume that any particular action will be
     * taken.  There is no guarantee the problem will be addressed in a reasonable
     * amount of time.
     * </pre>
     *
     * <code>optional bool hierarchy_conflict_detected = 1;</code>
     * @return The hierarchyConflictDetected.
     */
    @java.lang.Override
    public boolean getHierarchyConflictDetected() {
      return instance.getHierarchyConflictDetected();
    }
    /**
     * <pre>
     * Flag to indicate if the client has detected hierarchy conflcits.  The flag
     * is left unset if update application has not been attempted yet.
     * The server should attempt to resolve any hierarchy conflicts when this flag
     * is set.  The client may not assume that any particular action will be
     * taken.  There is no guarantee the problem will be addressed in a reasonable
     * amount of time.
     * </pre>
     *
     * <code>optional bool hierarchy_conflict_detected = 1;</code>
     * @param value The hierarchyConflictDetected to set.
     * @return This builder for chaining.
     */
    public Builder setHierarchyConflictDetected(boolean value) {
      copyOnWrite();
      instance.setHierarchyConflictDetected(value);
      return this;
    }
    /**
     * <pre>
     * Flag to indicate if the client has detected hierarchy conflcits.  The flag
     * is left unset if update application has not been attempted yet.
     * The server should attempt to resolve any hierarchy conflicts when this flag
     * is set.  The client may not assume that any particular action will be
     * taken.  There is no guarantee the problem will be addressed in a reasonable
     * amount of time.
     * </pre>
     *
     * <code>optional bool hierarchy_conflict_detected = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearHierarchyConflictDetected() {
      copyOnWrite();
      instance.clearHierarchyConflictDetected();
      return this;
    }

    /**
     * <pre>
     * Whether the client has full sync (or, sync the feature) enabled or not.
     * </pre>
     *
     * <code>optional bool is_sync_feature_enabled = 2;</code>
     * @return Whether the isSyncFeatureEnabled field is set.
     */
    @java.lang.Override
    public boolean hasIsSyncFeatureEnabled() {
      return instance.hasIsSyncFeatureEnabled();
    }
    /**
     * <pre>
     * Whether the client has full sync (or, sync the feature) enabled or not.
     * </pre>
     *
     * <code>optional bool is_sync_feature_enabled = 2;</code>
     * @return The isSyncFeatureEnabled.
     */
    @java.lang.Override
    public boolean getIsSyncFeatureEnabled() {
      return instance.getIsSyncFeatureEnabled();
    }
    /**
     * <pre>
     * Whether the client has full sync (or, sync the feature) enabled or not.
     * </pre>
     *
     * <code>optional bool is_sync_feature_enabled = 2;</code>
     * @param value The isSyncFeatureEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setIsSyncFeatureEnabled(boolean value) {
      copyOnWrite();
      instance.setIsSyncFeatureEnabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether the client has full sync (or, sync the feature) enabled or not.
     * </pre>
     *
     * <code>optional bool is_sync_feature_enabled = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsSyncFeatureEnabled() {
      copyOnWrite();
      instance.clearIsSyncFeatureEnabled();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ClientStatus)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ClientStatus();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "hierarchyConflictDetected_",
            "isSyncFeatureEnabled_",
          };
          java.lang.String info =
              "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1007\u0000\u0002" +
              "\u1007\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.ClientStatus> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.ClientStatus.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ClientStatus>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ClientStatus)
  private static final org.chromium.components.sync.protocol.ClientStatus DEFAULT_INSTANCE;
  static {
    ClientStatus defaultInstance = new ClientStatus();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ClientStatus.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.ClientStatus getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientStatus> PARSER;

  public static com.google.protobuf.Parser<ClientStatus> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

