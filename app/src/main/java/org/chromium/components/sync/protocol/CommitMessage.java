// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.CommitMessage}
 */
public  final class CommitMessage extends
    com.google.protobuf.GeneratedMessageLite<
        CommitMessage, CommitMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.CommitMessage)
    CommitMessageOrBuilder {
  private CommitMessage() {
    entries_ = emptyProtobufList();
    cacheGuid_ = "";
    extensionsActivity_ = emptyProtobufList();
    clientContexts_ = emptyProtobufList();
    padding_ = "";
  }
  private int bitField0_;
  public static final int ENTRIES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.SyncEntity> entries_;
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.components.sync.protocol.SyncEntity> getEntriesList() {
    return entries_;
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.SyncEntityOrBuilder> 
      getEntriesOrBuilderList() {
    return entries_;
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  @java.lang.Override
  public int getEntriesCount() {
    return entries_.size();
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SyncEntity getEntries(int index) {
    return entries_.get(index);
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  public org.chromium.components.sync.protocol.SyncEntityOrBuilder getEntriesOrBuilder(
      int index) {
    return entries_.get(index);
  }
  private void ensureEntriesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.SyncEntity> tmp = entries_;
    if (!tmp.isModifiable()) {
      entries_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void setEntries(
      int index, org.chromium.components.sync.protocol.SyncEntity value) {
    value.getClass();
  ensureEntriesIsMutable();
    entries_.set(index, value);
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void addEntries(org.chromium.components.sync.protocol.SyncEntity value) {
    value.getClass();
  ensureEntriesIsMutable();
    entries_.add(value);
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void addEntries(
      int index, org.chromium.components.sync.protocol.SyncEntity value) {
    value.getClass();
  ensureEntriesIsMutable();
    entries_.add(index, value);
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void addAllEntries(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.SyncEntity> values) {
    ensureEntriesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, entries_);
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void clearEntries() {
    entries_ = emptyProtobufList();
  }
  /**
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  private void removeEntries(int index) {
    ensureEntriesIsMutable();
    entries_.remove(index);
  }

  public static final int CACHE_GUID_FIELD_NUMBER = 2;
  private java.lang.String cacheGuid_;
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   * @return Whether the cacheGuid field is set.
   */
  @java.lang.Override
  public boolean hasCacheGuid() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   * @return The cacheGuid.
   */
  @java.lang.Override
  public java.lang.String getCacheGuid() {
    return cacheGuid_;
  }
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   * @return The bytes for cacheGuid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCacheGuidBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(cacheGuid_);
  }
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   * @param value The cacheGuid to set.
   */
  private void setCacheGuid(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    cacheGuid_ = value;
  }
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   */
  private void clearCacheGuid() {
    bitField0_ = (bitField0_ & ~0x00000001);
    cacheGuid_ = getDefaultInstance().getCacheGuid();
  }
  /**
   * <pre>
   * A GUID that identifies the committing sync client.  This value will be
   * returned as originator_cache_guid for any new items.
   * </pre>
   *
   * <code>optional string cache_guid = 2;</code>
   * @param value The bytes for cacheGuid to set.
   */
  private void setCacheGuidBytes(
      com.google.protobuf.ByteString value) {
    cacheGuid_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int EXTENSIONS_ACTIVITY_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.ChromiumExtensionsActivity> extensionsActivity_;
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.components.sync.protocol.ChromiumExtensionsActivity> getExtensionsActivityList() {
    return extensionsActivity_;
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.ChromiumExtensionsActivityOrBuilder> 
      getExtensionsActivityOrBuilderList() {
    return extensionsActivity_;
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  @java.lang.Override
  public int getExtensionsActivityCount() {
    return extensionsActivity_.size();
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ChromiumExtensionsActivity getExtensionsActivity(int index) {
    return extensionsActivity_.get(index);
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  public org.chromium.components.sync.protocol.ChromiumExtensionsActivityOrBuilder getExtensionsActivityOrBuilder(
      int index) {
    return extensionsActivity_.get(index);
  }
  private void ensureExtensionsActivityIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.ChromiumExtensionsActivity> tmp = extensionsActivity_;
    if (!tmp.isModifiable()) {
      extensionsActivity_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void setExtensionsActivity(
      int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
    value.getClass();
  ensureExtensionsActivityIsMutable();
    extensionsActivity_.set(index, value);
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void addExtensionsActivity(org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
    value.getClass();
  ensureExtensionsActivityIsMutable();
    extensionsActivity_.add(value);
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void addExtensionsActivity(
      int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
    value.getClass();
  ensureExtensionsActivityIsMutable();
    extensionsActivity_.add(index, value);
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void addAllExtensionsActivity(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.ChromiumExtensionsActivity> values) {
    ensureExtensionsActivityIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, extensionsActivity_);
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void clearExtensionsActivity() {
    extensionsActivity_ = emptyProtobufList();
  }
  /**
   * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
   */
  private void removeExtensionsActivity(int index) {
    ensureExtensionsActivityIsMutable();
    extensionsActivity_.remove(index);
  }

  public static final int CONFIG_PARAMS_FIELD_NUMBER = 4;
  private org.chromium.components.sync.protocol.ClientConfigParams configParams_;
  /**
   * <pre>
   * The configuration of this client at commit time. Used by the server to
   * make commit-time decisions about how to process datatypes that might
   * involve server-side interaction, and e.g require explicit user intent for
   * syncing a particular data type regardless of whether a commit for that
   * datatype is currently being sent up.
   * </pre>
   *
   * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
   */
  @java.lang.Override
  public boolean hasConfigParams() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The configuration of this client at commit time. Used by the server to
   * make commit-time decisions about how to process datatypes that might
   * involve server-side interaction, and e.g require explicit user intent for
   * syncing a particular data type regardless of whether a commit for that
   * datatype is currently being sent up.
   * </pre>
   *
   * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ClientConfigParams getConfigParams() {
    return configParams_ == null ? org.chromium.components.sync.protocol.ClientConfigParams.getDefaultInstance() : configParams_;
  }
  /**
   * <pre>
   * The configuration of this client at commit time. Used by the server to
   * make commit-time decisions about how to process datatypes that might
   * involve server-side interaction, and e.g require explicit user intent for
   * syncing a particular data type regardless of whether a commit for that
   * datatype is currently being sent up.
   * </pre>
   *
   * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
   */
  private void setConfigParams(org.chromium.components.sync.protocol.ClientConfigParams value) {
    value.getClass();
  configParams_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * The configuration of this client at commit time. Used by the server to
   * make commit-time decisions about how to process datatypes that might
   * involve server-side interaction, and e.g require explicit user intent for
   * syncing a particular data type regardless of whether a commit for that
   * datatype is currently being sent up.
   * </pre>
   *
   * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeConfigParams(org.chromium.components.sync.protocol.ClientConfigParams value) {
    value.getClass();
  if (configParams_ != null &&
        configParams_ != org.chromium.components.sync.protocol.ClientConfigParams.getDefaultInstance()) {
      configParams_ =
        org.chromium.components.sync.protocol.ClientConfigParams.newBuilder(configParams_).mergeFrom(value).buildPartial();
    } else {
      configParams_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * The configuration of this client at commit time. Used by the server to
   * make commit-time decisions about how to process datatypes that might
   * involve server-side interaction, and e.g require explicit user intent for
   * syncing a particular data type regardless of whether a commit for that
   * datatype is currently being sent up.
   * </pre>
   *
   * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
   */
  private void clearConfigParams() {  configParams_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int CLIENT_CONTEXTS_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.DataTypeContext> clientContexts_;
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.components.sync.protocol.DataTypeContext> getClientContextsList() {
    return clientContexts_;
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.DataTypeContextOrBuilder> 
      getClientContextsOrBuilderList() {
    return clientContexts_;
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  @java.lang.Override
  public int getClientContextsCount() {
    return clientContexts_.size();
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.DataTypeContext getClientContexts(int index) {
    return clientContexts_.get(index);
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  public org.chromium.components.sync.protocol.DataTypeContextOrBuilder getClientContextsOrBuilder(
      int index) {
    return clientContexts_.get(index);
  }
  private void ensureClientContextsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.DataTypeContext> tmp = clientContexts_;
    if (!tmp.isModifiable()) {
      clientContexts_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void setClientContexts(
      int index, org.chromium.components.sync.protocol.DataTypeContext value) {
    value.getClass();
  ensureClientContextsIsMutable();
    clientContexts_.set(index, value);
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void addClientContexts(org.chromium.components.sync.protocol.DataTypeContext value) {
    value.getClass();
  ensureClientContextsIsMutable();
    clientContexts_.add(value);
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void addClientContexts(
      int index, org.chromium.components.sync.protocol.DataTypeContext value) {
    value.getClass();
  ensureClientContextsIsMutable();
    clientContexts_.add(index, value);
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void addAllClientContexts(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.DataTypeContext> values) {
    ensureClientContextsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, clientContexts_);
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void clearClientContexts() {
    clientContexts_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Set of optional per-client datatype contexts.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
   */
  private void removeClientContexts(int index) {
    ensureClientContextsIsMutable();
    clientContexts_.remove(index);
  }

  public static final int PADDING_FIELD_NUMBER = 6;
  private java.lang.String padding_;
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   * @return Whether the padding field is set.
   */
  @java.lang.Override
  public boolean hasPadding() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   * @return The padding.
   */
  @java.lang.Override
  public java.lang.String getPadding() {
    return padding_;
  }
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   * @return The bytes for padding.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPaddingBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(padding_);
  }
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   * @param value The padding to set.
   */
  private void setPadding(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    padding_ = value;
  }
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   */
  private void clearPadding() {
    bitField0_ = (bitField0_ & ~0x00000004);
    padding_ = getDefaultInstance().getPadding();
  }
  /**
   * <pre>
   * This field need to be 256 bytes if set. This attempts to mitigate CRIME
   * attacks when sync communicate from client to server with compression. So if
   * compression is used, this need to set a 256 random ASCII bytes. If no
   * compression, this field should not be set. The server can ignore the
   * padding.
   * </pre>
   *
   * <code>optional string padding = 6;</code>
   * @param value The bytes for padding to set.
   */
  private void setPaddingBytes(
      com.google.protobuf.ByteString value) {
    padding_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.CommitMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.CommitMessage prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.CommitMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.CommitMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.CommitMessage)
      org.chromium.components.sync.protocol.CommitMessageOrBuilder {
    // Construct using org.chromium.components.sync.protocol.CommitMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.sync.protocol.SyncEntity> getEntriesList() {
      return java.util.Collections.unmodifiableList(
          instance.getEntriesList());
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    @java.lang.Override
    public int getEntriesCount() {
      return instance.getEntriesCount();
    }/**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SyncEntity getEntries(int index) {
      return instance.getEntries(index);
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder setEntries(
        int index, org.chromium.components.sync.protocol.SyncEntity value) {
      copyOnWrite();
      instance.setEntries(index, value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder setEntries(
        int index, org.chromium.components.sync.protocol.SyncEntity.Builder builderForValue) {
      copyOnWrite();
      instance.setEntries(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder addEntries(org.chromium.components.sync.protocol.SyncEntity value) {
      copyOnWrite();
      instance.addEntries(value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder addEntries(
        int index, org.chromium.components.sync.protocol.SyncEntity value) {
      copyOnWrite();
      instance.addEntries(index, value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder addEntries(
        org.chromium.components.sync.protocol.SyncEntity.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder addEntries(
        int index, org.chromium.components.sync.protocol.SyncEntity.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder addAllEntries(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.SyncEntity> values) {
      copyOnWrite();
      instance.addAllEntries(values);
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder clearEntries() {
      copyOnWrite();
      instance.clearEntries();
      return this;
    }
    /**
     * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
     */
    public Builder removeEntries(int index) {
      copyOnWrite();
      instance.removeEntries(index);
      return this;
    }

    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @return Whether the cacheGuid field is set.
     */
    @java.lang.Override
    public boolean hasCacheGuid() {
      return instance.hasCacheGuid();
    }
    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @return The cacheGuid.
     */
    @java.lang.Override
    public java.lang.String getCacheGuid() {
      return instance.getCacheGuid();
    }
    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @return The bytes for cacheGuid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCacheGuidBytes() {
      return instance.getCacheGuidBytes();
    }
    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @param value The cacheGuid to set.
     * @return This builder for chaining.
     */
    public Builder setCacheGuid(
        java.lang.String value) {
      copyOnWrite();
      instance.setCacheGuid(value);
      return this;
    }
    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheGuid() {
      copyOnWrite();
      instance.clearCacheGuid();
      return this;
    }
    /**
     * <pre>
     * A GUID that identifies the committing sync client.  This value will be
     * returned as originator_cache_guid for any new items.
     * </pre>
     *
     * <code>optional string cache_guid = 2;</code>
     * @param value The bytes for cacheGuid to set.
     * @return This builder for chaining.
     */
    public Builder setCacheGuidBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCacheGuidBytes(value);
      return this;
    }

    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.sync.protocol.ChromiumExtensionsActivity> getExtensionsActivityList() {
      return java.util.Collections.unmodifiableList(
          instance.getExtensionsActivityList());
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    @java.lang.Override
    public int getExtensionsActivityCount() {
      return instance.getExtensionsActivityCount();
    }/**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ChromiumExtensionsActivity getExtensionsActivity(int index) {
      return instance.getExtensionsActivity(index);
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder setExtensionsActivity(
        int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
      copyOnWrite();
      instance.setExtensionsActivity(index, value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder setExtensionsActivity(
        int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity.Builder builderForValue) {
      copyOnWrite();
      instance.setExtensionsActivity(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder addExtensionsActivity(org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
      copyOnWrite();
      instance.addExtensionsActivity(value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder addExtensionsActivity(
        int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity value) {
      copyOnWrite();
      instance.addExtensionsActivity(index, value);
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder addExtensionsActivity(
        org.chromium.components.sync.protocol.ChromiumExtensionsActivity.Builder builderForValue) {
      copyOnWrite();
      instance.addExtensionsActivity(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder addExtensionsActivity(
        int index, org.chromium.components.sync.protocol.ChromiumExtensionsActivity.Builder builderForValue) {
      copyOnWrite();
      instance.addExtensionsActivity(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder addAllExtensionsActivity(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.ChromiumExtensionsActivity> values) {
      copyOnWrite();
      instance.addAllExtensionsActivity(values);
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder clearExtensionsActivity() {
      copyOnWrite();
      instance.clearExtensionsActivity();
      return this;
    }
    /**
     * <code>repeated .sync_pb.ChromiumExtensionsActivity extensions_activity = 3;</code>
     */
    public Builder removeExtensionsActivity(int index) {
      copyOnWrite();
      instance.removeExtensionsActivity(index);
      return this;
    }

    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    @java.lang.Override
    public boolean hasConfigParams() {
      return instance.hasConfigParams();
    }
    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ClientConfigParams getConfigParams() {
      return instance.getConfigParams();
    }
    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    public Builder setConfigParams(org.chromium.components.sync.protocol.ClientConfigParams value) {
      copyOnWrite();
      instance.setConfigParams(value);
      return this;
      }
    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    public Builder setConfigParams(
        org.chromium.components.sync.protocol.ClientConfigParams.Builder builderForValue) {
      copyOnWrite();
      instance.setConfigParams(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    public Builder mergeConfigParams(org.chromium.components.sync.protocol.ClientConfigParams value) {
      copyOnWrite();
      instance.mergeConfigParams(value);
      return this;
    }
    /**
     * <pre>
     * The configuration of this client at commit time. Used by the server to
     * make commit-time decisions about how to process datatypes that might
     * involve server-side interaction, and e.g require explicit user intent for
     * syncing a particular data type regardless of whether a commit for that
     * datatype is currently being sent up.
     * </pre>
     *
     * <code>optional .sync_pb.ClientConfigParams config_params = 4;</code>
     */
    public Builder clearConfigParams() {  copyOnWrite();
      instance.clearConfigParams();
      return this;
    }

    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.sync.protocol.DataTypeContext> getClientContextsList() {
      return java.util.Collections.unmodifiableList(
          instance.getClientContextsList());
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    @java.lang.Override
    public int getClientContextsCount() {
      return instance.getClientContextsCount();
    }/**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.DataTypeContext getClientContexts(int index) {
      return instance.getClientContexts(index);
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder setClientContexts(
        int index, org.chromium.components.sync.protocol.DataTypeContext value) {
      copyOnWrite();
      instance.setClientContexts(index, value);
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder setClientContexts(
        int index, org.chromium.components.sync.protocol.DataTypeContext.Builder builderForValue) {
      copyOnWrite();
      instance.setClientContexts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder addClientContexts(org.chromium.components.sync.protocol.DataTypeContext value) {
      copyOnWrite();
      instance.addClientContexts(value);
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder addClientContexts(
        int index, org.chromium.components.sync.protocol.DataTypeContext value) {
      copyOnWrite();
      instance.addClientContexts(index, value);
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder addClientContexts(
        org.chromium.components.sync.protocol.DataTypeContext.Builder builderForValue) {
      copyOnWrite();
      instance.addClientContexts(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder addClientContexts(
        int index, org.chromium.components.sync.protocol.DataTypeContext.Builder builderForValue) {
      copyOnWrite();
      instance.addClientContexts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder addAllClientContexts(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.DataTypeContext> values) {
      copyOnWrite();
      instance.addAllClientContexts(values);
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder clearClientContexts() {
      copyOnWrite();
      instance.clearClientContexts();
      return this;
    }
    /**
     * <pre>
     * Set of optional per-client datatype contexts.
     * </pre>
     *
     * <code>repeated .sync_pb.DataTypeContext client_contexts = 5;</code>
     */
    public Builder removeClientContexts(int index) {
      copyOnWrite();
      instance.removeClientContexts(index);
      return this;
    }

    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @return Whether the padding field is set.
     */
    @java.lang.Override
    public boolean hasPadding() {
      return instance.hasPadding();
    }
    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @return The padding.
     */
    @java.lang.Override
    public java.lang.String getPadding() {
      return instance.getPadding();
    }
    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @return The bytes for padding.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPaddingBytes() {
      return instance.getPaddingBytes();
    }
    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @param value The padding to set.
     * @return This builder for chaining.
     */
    public Builder setPadding(
        java.lang.String value) {
      copyOnWrite();
      instance.setPadding(value);
      return this;
    }
    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPadding() {
      copyOnWrite();
      instance.clearPadding();
      return this;
    }
    /**
     * <pre>
     * This field need to be 256 bytes if set. This attempts to mitigate CRIME
     * attacks when sync communicate from client to server with compression. So if
     * compression is used, this need to set a 256 random ASCII bytes. If no
     * compression, this field should not be set. The server can ignore the
     * padding.
     * </pre>
     *
     * <code>optional string padding = 6;</code>
     * @param value The bytes for padding to set.
     * @return This builder for chaining.
     */
    public Builder setPaddingBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPaddingBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.CommitMessage)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.CommitMessage();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "entries_",
            org.chromium.components.sync.protocol.SyncEntity.class,
            "cacheGuid_",
            "extensionsActivity_",
            org.chromium.components.sync.protocol.ChromiumExtensionsActivity.class,
            "configParams_",
            "clientContexts_",
            org.chromium.components.sync.protocol.DataTypeContext.class,
            "padding_",
          };
          java.lang.String info =
              "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0003\u0000\u0001\u001b\u0002\u1008" +
              "\u0000\u0003\u001b\u0004\u1009\u0001\u0005\u001b\u0006\u1008\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.CommitMessage> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.CommitMessage.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.CommitMessage>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.CommitMessage)
  private static final org.chromium.components.sync.protocol.CommitMessage DEFAULT_INSTANCE;
  static {
    CommitMessage defaultInstance = new CommitMessage();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      CommitMessage.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.CommitMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CommitMessage> PARSER;

  public static com.google.protobuf.Parser<CommitMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

