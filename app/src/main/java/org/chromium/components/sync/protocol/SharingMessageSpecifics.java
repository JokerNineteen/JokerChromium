// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sharing_message_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.SharingMessageSpecifics}
 */
public  final class SharingMessageSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        SharingMessageSpecifics, SharingMessageSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SharingMessageSpecifics)
    SharingMessageSpecificsOrBuilder {
  private SharingMessageSpecifics() {
    messageId_ = "";
    payload_ = com.google.protobuf.ByteString.EMPTY;
  }
  public interface ChannelConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.SharingMessageSpecifics.ChannelConfiguration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     * @return Whether the fcm field is set.
     */
    boolean hasFcm();
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     * @return The fcm.
     */
    org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration getFcm();

    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     * @return Whether the server field is set.
     */
    boolean hasServer();
    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     * @return The server.
     */
    com.google.protobuf.ByteString getServer();

    public org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.ChannelConfigurationCase getChannelConfigurationCase();
  }
  /**
   * Protobuf type {@code sync_pb.SharingMessageSpecifics.ChannelConfiguration}
   */
  public  static final class ChannelConfiguration extends
      com.google.protobuf.GeneratedMessageLite<
          ChannelConfiguration, ChannelConfiguration.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.SharingMessageSpecifics.ChannelConfiguration)
      ChannelConfigurationOrBuilder {
    private ChannelConfiguration() {
    }
    public interface FCMChannelConfigurationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return Whether the token field is set.
       */
      boolean hasToken();
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return The token.
       */
      java.lang.String getToken();
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return The bytes for token.
       */
      com.google.protobuf.ByteString
          getTokenBytes();

      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       * @return Whether the ttl field is set.
       */
      boolean hasTtl();
      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       * @return The ttl.
       */
      int getTtl();

      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       * @return Whether the priority field is set.
       */
      boolean hasPriority();
      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       * @return The priority.
       */
      int getPriority();
    }
    /**
     * Protobuf type {@code sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration}
     */
    public  static final class FCMChannelConfiguration extends
        com.google.protobuf.GeneratedMessageLite<
            FCMChannelConfiguration, FCMChannelConfiguration.Builder> implements
        // @@protoc_insertion_point(message_implements:sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration)
        FCMChannelConfigurationOrBuilder {
      private FCMChannelConfiguration() {
        token_ = "";
      }
      private int bitField0_;
      public static final int TOKEN_FIELD_NUMBER = 1;
      private java.lang.String token_;
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        return token_;
      }
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(token_);
      }
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @param value The token to set.
       */
      private void setToken(
          java.lang.String value) {
        value.getClass();
  bitField0_ |= 0x00000001;
        token_ = value;
      }
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       */
      private void clearToken() {
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = getDefaultInstance().getToken();
      }
      /**
       * <pre>
       * FCM registration token of target device.
       * </pre>
       *
       * <code>optional string token = 1;</code>
       * @param value The bytes for token to set.
       */
      private void setTokenBytes(
          com.google.protobuf.ByteString value) {
        token_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
      }

      public static final int TTL_FIELD_NUMBER = 2;
      private int ttl_;
      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       * @return Whether the ttl field is set.
       */
      @java.lang.Override
      public boolean hasTtl() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public int getTtl() {
        return ttl_;
      }
      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       * @param value The ttl to set.
       */
      private void setTtl(int value) {
        bitField0_ |= 0x00000002;
        ttl_ = value;
      }
      /**
       * <pre>
       * Time to live for a FCM message (in seconds) - if specified, the message
       * will expire based on the TTL.
       * </pre>
       *
       * <code>optional int32 ttl = 2;</code>
       */
      private void clearTtl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ttl_ = 0;
      }

      public static final int PRIORITY_FIELD_NUMBER = 3;
      private int priority_;
      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       * @return Whether the priority field is set.
       */
      @java.lang.Override
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       * @return The priority.
       */
      @java.lang.Override
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       * @param value The priority to set.
       */
      private void setPriority(int value) {
        bitField0_ |= 0x00000004;
        priority_ = value;
      }
      /**
       * <pre>
       * Priority level of a FCM message. 5 = normal, 10 = high.
       * </pre>
       *
       * <code>optional int32 priority = 3;</code>
       */
      private void clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000004);
        priority_ = 0;
      }

      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration, Builder> implements
          // @@protoc_insertion_point(builder_implements:sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration)
          org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfigurationOrBuilder {
        // Construct using org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @return Whether the token field is set.
         */
        @java.lang.Override
        public boolean hasToken() {
          return instance.hasToken();
        }
        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @return The token.
         */
        @java.lang.Override
        public java.lang.String getToken() {
          return instance.getToken();
        }
        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @return The bytes for token.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTokenBytes() {
          return instance.getTokenBytes();
        }
        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(
            java.lang.String value) {
          copyOnWrite();
          instance.setToken(value);
          return this;
        }
        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          copyOnWrite();
          instance.clearToken();
          return this;
        }
        /**
         * <pre>
         * FCM registration token of target device.
         * </pre>
         *
         * <code>optional string token = 1;</code>
         * @param value The bytes for token to set.
         * @return This builder for chaining.
         */
        public Builder setTokenBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setTokenBytes(value);
          return this;
        }

        /**
         * <pre>
         * Time to live for a FCM message (in seconds) - if specified, the message
         * will expire based on the TTL.
         * </pre>
         *
         * <code>optional int32 ttl = 2;</code>
         * @return Whether the ttl field is set.
         */
        @java.lang.Override
        public boolean hasTtl() {
          return instance.hasTtl();
        }
        /**
         * <pre>
         * Time to live for a FCM message (in seconds) - if specified, the message
         * will expire based on the TTL.
         * </pre>
         *
         * <code>optional int32 ttl = 2;</code>
         * @return The ttl.
         */
        @java.lang.Override
        public int getTtl() {
          return instance.getTtl();
        }
        /**
         * <pre>
         * Time to live for a FCM message (in seconds) - if specified, the message
         * will expire based on the TTL.
         * </pre>
         *
         * <code>optional int32 ttl = 2;</code>
         * @param value The ttl to set.
         * @return This builder for chaining.
         */
        public Builder setTtl(int value) {
          copyOnWrite();
          instance.setTtl(value);
          return this;
        }
        /**
         * <pre>
         * Time to live for a FCM message (in seconds) - if specified, the message
         * will expire based on the TTL.
         * </pre>
         *
         * <code>optional int32 ttl = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTtl() {
          copyOnWrite();
          instance.clearTtl();
          return this;
        }

        /**
         * <pre>
         * Priority level of a FCM message. 5 = normal, 10 = high.
         * </pre>
         *
         * <code>optional int32 priority = 3;</code>
         * @return Whether the priority field is set.
         */
        @java.lang.Override
        public boolean hasPriority() {
          return instance.hasPriority();
        }
        /**
         * <pre>
         * Priority level of a FCM message. 5 = normal, 10 = high.
         * </pre>
         *
         * <code>optional int32 priority = 3;</code>
         * @return The priority.
         */
        @java.lang.Override
        public int getPriority() {
          return instance.getPriority();
        }
        /**
         * <pre>
         * Priority level of a FCM message. 5 = normal, 10 = high.
         * </pre>
         *
         * <code>optional int32 priority = 3;</code>
         * @param value The priority to set.
         * @return This builder for chaining.
         */
        public Builder setPriority(int value) {
          copyOnWrite();
          instance.setPriority(value);
          return this;
        }
        /**
         * <pre>
         * Priority level of a FCM message. 5 = normal, 10 = high.
         * </pre>
         *
         * <code>optional int32 priority = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPriority() {
          copyOnWrite();
          instance.clearPriority();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "token_",
                "ttl_",
                "priority_",
              };
              java.lang.String info =
                  "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
                  "\u1004\u0001\u0003\u1004\u0002";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration)
      private static final org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration DEFAULT_INSTANCE;
      static {
        FCMChannelConfiguration defaultInstance = new FCMChannelConfiguration();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          FCMChannelConfiguration.class, defaultInstance);
      }

      public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<FCMChannelConfiguration> PARSER;

      public static com.google.protobuf.Parser<FCMChannelConfiguration> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    private int channelConfigurationCase_ = 0;
    private java.lang.Object channelConfiguration_;
    public enum ChannelConfigurationCase {
      FCM(1),
      SERVER(2),
      CHANNELCONFIGURATION_NOT_SET(0);
      private final int value;
      private ChannelConfigurationCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ChannelConfigurationCase valueOf(int value) {
        return forNumber(value);
      }

      public static ChannelConfigurationCase forNumber(int value) {
        switch (value) {
          case 1: return FCM;
          case 2: return SERVER;
          case 0: return CHANNELCONFIGURATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public ChannelConfigurationCase
    getChannelConfigurationCase() {
      return ChannelConfigurationCase.forNumber(
          channelConfigurationCase_);
    }

    private void clearChannelConfiguration() {
      channelConfigurationCase_ = 0;
      channelConfiguration_ = null;
    }

    public static final int FCM_FIELD_NUMBER = 1;
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     */
    @java.lang.Override
    public boolean hasFcm() {
      return channelConfigurationCase_ == 1;
    }
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration getFcm() {
      if (channelConfigurationCase_ == 1) {
         return (org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration) channelConfiguration_;
      }
      return org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.getDefaultInstance();
    }
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     */
    private void setFcm(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration value) {
      value.getClass();
  channelConfiguration_ = value;
      channelConfigurationCase_ = 1;
    }
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     */
    private void mergeFcm(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration value) {
      value.getClass();
  if (channelConfigurationCase_ == 1 &&
          channelConfiguration_ != org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.getDefaultInstance()) {
        channelConfiguration_ = org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.newBuilder((org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration) channelConfiguration_)
            .mergeFrom(value).buildPartial();
      } else {
        channelConfiguration_ = value;
      }
      channelConfigurationCase_ = 1;
    }
    /**
     * <pre>
     * FCM channel configuration. Message will be delivered as a FCM message.
     * </pre>
     *
     * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
     */
    private void clearFcm() {
      if (channelConfigurationCase_ == 1) {
        channelConfigurationCase_ = 0;
        channelConfiguration_ = null;
      }
    }

    public static final int SERVER_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     * @return Whether the server field is set.
     */
    @java.lang.Override
    public boolean hasServer() {
      return channelConfigurationCase_ == 2;
    }
    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     * @return The server.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServer() {
      if (channelConfigurationCase_ == 2) {
        return (com.google.protobuf.ByteString) channelConfiguration_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     * @param value The server to set.
     */
    private void setServer(com.google.protobuf.ByteString value) {
      value.getClass();
  channelConfigurationCase_ = 2;
      channelConfiguration_ = value;
    }
    /**
     * <pre>
     * Opaque server channel configuration. Message will be delivered through
     * server channel.
     * </pre>
     *
     * <code>bytes server = 2;</code>
     */
    private void clearServer() {
      if (channelConfigurationCase_ == 2) {
        channelConfigurationCase_ = 0;
        channelConfiguration_ = null;
      }
    }

    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code sync_pb.SharingMessageSpecifics.ChannelConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.SharingMessageSpecifics.ChannelConfiguration)
        org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfigurationOrBuilder {
      // Construct using org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public ChannelConfigurationCase
          getChannelConfigurationCase() {
        return instance.getChannelConfigurationCase();
      }

      public Builder clearChannelConfiguration() {
        copyOnWrite();
        instance.clearChannelConfiguration();
        return this;
      }


      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      @java.lang.Override
      public boolean hasFcm() {
        return instance.hasFcm();
      }
      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration getFcm() {
        return instance.getFcm();
      }
      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      public Builder setFcm(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration value) {
        copyOnWrite();
        instance.setFcm(value);
        return this;
      }
      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      public Builder setFcm(
          org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.Builder builderForValue) {
        copyOnWrite();
        instance.setFcm(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      public Builder mergeFcm(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration value) {
        copyOnWrite();
        instance.mergeFcm(value);
        return this;
      }
      /**
       * <pre>
       * FCM channel configuration. Message will be delivered as a FCM message.
       * </pre>
       *
       * <code>.sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration fcm = 1;</code>
       */
      public Builder clearFcm() {
        copyOnWrite();
        instance.clearFcm();
        return this;
      }

      /**
       * <pre>
       * Opaque server channel configuration. Message will be delivered through
       * server channel.
       * </pre>
       *
       * <code>bytes server = 2;</code>
       * @return Whether the server field is set.
       */
      @java.lang.Override
      public boolean hasServer() {
        return instance.hasServer();
      }
      /**
       * <pre>
       * Opaque server channel configuration. Message will be delivered through
       * server channel.
       * </pre>
       *
       * <code>bytes server = 2;</code>
       * @return The server.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getServer() {
        return instance.getServer();
      }
      /**
       * <pre>
       * Opaque server channel configuration. Message will be delivered through
       * server channel.
       * </pre>
       *
       * <code>bytes server = 2;</code>
       * @param value The server to set.
       * @return This builder for chaining.
       */
      public Builder setServer(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServer(value);
        return this;
      }
      /**
       * <pre>
       * Opaque server channel configuration. Message will be delivered through
       * server channel.
       * </pre>
       *
       * <code>bytes server = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearServer() {
        copyOnWrite();
        instance.clearServer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.SharingMessageSpecifics.ChannelConfiguration)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channelConfiguration_",
              "channelConfigurationCase_",
              "bitField0_",
              org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0001\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u103c\u0000\u0002" +
                "\u103d\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.SharingMessageSpecifics.ChannelConfiguration)
    private static final org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration DEFAULT_INSTANCE;
    static {
      ChannelConfiguration defaultInstance = new ChannelConfiguration();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChannelConfiguration.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChannelConfiguration> PARSER;

    public static com.google.protobuf.Parser<ChannelConfiguration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int MESSAGE_ID_FIELD_NUMBER = 1;
  private java.lang.String messageId_;
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   * @return Whether the messageId field is set.
   */
  @java.lang.Override
  public boolean hasMessageId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   * @return The messageId.
   */
  @java.lang.Override
  public java.lang.String getMessageId() {
    return messageId_;
  }
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   * @return The bytes for messageId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(messageId_);
  }
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   * @param value The messageId to set.
   */
  private void setMessageId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    messageId_ = value;
  }
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   */
  private void clearMessageId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    messageId_ = getDefaultInstance().getMessageId();
  }
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   * @param value The bytes for messageId to set.
   */
  private void setMessageIdBytes(
      com.google.protobuf.ByteString value) {
    messageId_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int CHANNEL_CONFIGURATION_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration channelConfiguration_;
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  @java.lang.Override
  public boolean hasChannelConfiguration() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration getChannelConfiguration() {
    return channelConfiguration_ == null ? org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.getDefaultInstance() : channelConfiguration_;
  }
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  private void setChannelConfiguration(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration value) {
    value.getClass();
  channelConfiguration_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeChannelConfiguration(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration value) {
    value.getClass();
  if (channelConfiguration_ != null &&
        channelConfiguration_ != org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.getDefaultInstance()) {
      channelConfiguration_ =
        org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.newBuilder(channelConfiguration_).mergeFrom(value).buildPartial();
    } else {
      channelConfiguration_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  private void clearChannelConfiguration() {  channelConfiguration_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int PAYLOAD_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString payload_;
  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   * @return Whether the payload field is set.
   */
  @java.lang.Override
  public boolean hasPayload() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   * @return The payload.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPayload() {
    return payload_;
  }
  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   * @param value The payload to set.
   */
  private void setPayload(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    payload_ = value;
  }
  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   */
  private void clearPayload() {
    bitField0_ = (bitField0_ & ~0x00000004);
    payload_ = getDefaultInstance().getPayload();
  }

  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SharingMessageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SharingMessageSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.SharingMessageSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SharingMessageSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SharingMessageSpecifics)
      org.chromium.components.sync.protocol.SharingMessageSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SharingMessageSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @return Whether the messageId field is set.
     */
    @java.lang.Override
    public boolean hasMessageId() {
      return instance.hasMessageId();
    }
    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @return The messageId.
     */
    @java.lang.Override
    public java.lang.String getMessageId() {
      return instance.getMessageId();
    }
    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @return The bytes for messageId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageIdBytes() {
      return instance.getMessageIdBytes();
    }
    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @param value The messageId to set.
     * @return This builder for chaining.
     */
    public Builder setMessageId(
        java.lang.String value) {
      copyOnWrite();
      instance.setMessageId(value);
      return this;
    }
    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessageId() {
      copyOnWrite();
      instance.clearMessageId();
      return this;
    }
    /**
     * <pre>
     * Unique identifier of message.
     * </pre>
     *
     * <code>optional string message_id = 1;</code>
     * @param value The bytes for messageId to set.
     * @return This builder for chaining.
     */
    public Builder setMessageIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMessageIdBytes(value);
      return this;
    }

    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    @java.lang.Override
    public boolean hasChannelConfiguration() {
      return instance.hasChannelConfiguration();
    }
    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration getChannelConfiguration() {
      return instance.getChannelConfiguration();
    }
    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    public Builder setChannelConfiguration(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration value) {
      copyOnWrite();
      instance.setChannelConfiguration(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    public Builder setChannelConfiguration(
        org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration.Builder builderForValue) {
      copyOnWrite();
      instance.setChannelConfiguration(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    public Builder mergeChannelConfiguration(org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration value) {
      copyOnWrite();
      instance.mergeChannelConfiguration(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
     */
    public Builder clearChannelConfiguration() {  copyOnWrite();
      instance.clearChannelConfiguration();
      return this;
    }

    /**
     * <pre>
     * Payload encrypted using the target user keys according to WebPush
     * encryption scheme. The payload has to be a valid
     * chrome/browser/sharing/proto/sharing_message.proto serialized using
     * SerializeToString.
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return instance.hasPayload();
    }
    /**
     * <pre>
     * Payload encrypted using the target user keys according to WebPush
     * encryption scheme. The payload has to be a valid
     * chrome/browser/sharing/proto/sharing_message.proto serialized using
     * SerializeToString.
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return instance.getPayload();
    }
    /**
     * <pre>
     * Payload encrypted using the target user keys according to WebPush
     * encryption scheme. The payload has to be a valid
     * chrome/browser/sharing/proto/sharing_message.proto serialized using
     * SerializeToString.
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     * @param value The payload to set.
     * @return This builder for chaining.
     */
    public Builder setPayload(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPayload(value);
      return this;
    }
    /**
     * <pre>
     * Payload encrypted using the target user keys according to WebPush
     * encryption scheme. The payload has to be a valid
     * chrome/browser/sharing/proto/sharing_message.proto serialized using
     * SerializeToString.
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPayload() {
      copyOnWrite();
      instance.clearPayload();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.SharingMessageSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SharingMessageSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "messageId_",
            "channelConfiguration_",
            "payload_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1009\u0001\u0003\u100a\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.SharingMessageSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.SharingMessageSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.SharingMessageSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SharingMessageSpecifics)
  private static final org.chromium.components.sync.protocol.SharingMessageSpecifics DEFAULT_INSTANCE;
  static {
    SharingMessageSpecifics defaultInstance = new SharingMessageSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SharingMessageSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.SharingMessageSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SharingMessageSpecifics> PARSER;

  public static com.google.protobuf.Parser<SharingMessageSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

