// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/session_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of session sync objects.
 * </pre>
 *
 * Protobuf type {@code sync_pb.SessionHeader}
 */
public  final class SessionHeader extends
    com.google.protobuf.GeneratedMessageLite<
        SessionHeader, SessionHeader.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SessionHeader)
    SessionHeaderOrBuilder {
  private SessionHeader() {
    window_ = emptyProtobufList();
    clientName_ = "";
  }
  private int bitField0_;
  public static final int WINDOW_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.SessionWindow> window_;
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.components.sync.protocol.SessionWindow> getWindowList() {
    return window_;
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.SessionWindowOrBuilder> 
      getWindowOrBuilderList() {
    return window_;
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  @java.lang.Override
  public int getWindowCount() {
    return window_.size();
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SessionWindow getWindow(int index) {
    return window_.get(index);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public org.chromium.components.sync.protocol.SessionWindowOrBuilder getWindowOrBuilder(
      int index) {
    return window_.get(index);
  }
  private void ensureWindowIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.SessionWindow> tmp = window_;
    if (!tmp.isModifiable()) {
      window_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void setWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow value) {
    value.getClass();
  ensureWindowIsMutable();
    window_.set(index, value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(org.chromium.components.sync.protocol.SessionWindow value) {
    value.getClass();
  ensureWindowIsMutable();
    window_.add(value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow value) {
    value.getClass();
  ensureWindowIsMutable();
    window_.add(index, value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addAllWindow(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.SessionWindow> values) {
    ensureWindowIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, window_);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void clearWindow() {
    window_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void removeWindow(int index) {
    ensureWindowIsMutable();
    window_.remove(index);
  }

  public static final int CLIENT_NAME_FIELD_NUMBER = 3;
  private java.lang.String clientName_;
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   * @return Whether the clientName field is set.
   */
  @java.lang.Override
  public boolean hasClientName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   * @return The clientName.
   */
  @java.lang.Override
  public java.lang.String getClientName() {
    return clientName_;
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   * @return The bytes for clientName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientName_);
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   * @param value The clientName to set.
   */
  private void setClientName(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    clientName_ = value;
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  private void clearClientName() {
    bitField0_ = (bitField0_ & ~0x00000001);
    clientName_ = getDefaultInstance().getClientName();
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   * @param value The bytes for clientName to set.
   */
  private void setClientNameBytes(
      com.google.protobuf.ByteString value) {
    clientName_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int DEVICE_TYPE_FIELD_NUMBER = 4;
  private int deviceType_;
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   * @return Whether the deviceType field is set.
   */
  @java.lang.Override
  public boolean hasDeviceType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   * @return The deviceType.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
    org.chromium.components.sync.protocol.SyncEnums.DeviceType result = org.chromium.components.sync.protocol.SyncEnums.DeviceType.forNumber(deviceType_);
    return result == null ? org.chromium.components.sync.protocol.SyncEnums.DeviceType.TYPE_UNSET : result;
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   * @param value The deviceType to set.
   */
  private void setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
    deviceType_ = value.getNumber();
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   */
  private void clearDeviceType() {
    bitField0_ = (bitField0_ & ~0x00000002);
    deviceType_ = 0;
  }

  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SessionHeader prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Properties of session sync objects.
   * </pre>
   *
   * Protobuf type {@code sync_pb.SessionHeader}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SessionHeader, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SessionHeader)
      org.chromium.components.sync.protocol.SessionHeaderOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SessionHeader.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.sync.protocol.SessionWindow> getWindowList() {
      return java.util.Collections.unmodifiableList(
          instance.getWindowList());
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    @java.lang.Override
    public int getWindowCount() {
      return instance.getWindowCount();
    }/**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SessionWindow getWindow(int index) {
      return instance.getWindow(index);
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder setWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.setWindow(index, value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder setWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.setWindow(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.addWindow(value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.addWindow(index, value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.addWindow(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.addWindow(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addAllWindow(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.SessionWindow> values) {
      copyOnWrite();
      instance.addAllWindow(values);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder clearWindow() {
      copyOnWrite();
      instance.clearWindow();
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder removeWindow(int index) {
      copyOnWrite();
      instance.removeWindow(index);
      return this;
    }

    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @return Whether the clientName field is set.
     */
    @java.lang.Override
    public boolean hasClientName() {
      return instance.hasClientName();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @return The clientName.
     */
    @java.lang.Override
    public java.lang.String getClientName() {
      return instance.getClientName();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @return The bytes for clientName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientNameBytes() {
      return instance.getClientNameBytes();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @param value The clientName to set.
     * @return This builder for chaining.
     */
    public Builder setClientName(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientName(value);
      return this;
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientName() {
      copyOnWrite();
      instance.clearClientName();
      return this;
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     * @param value The bytes for clientName to set.
     * @return This builder for chaining.
     */
    public Builder setClientNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     * @return Whether the deviceType field is set.
     */
    @java.lang.Override
    public boolean hasDeviceType() {
      return instance.hasDeviceType();
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     * @return The deviceType.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
      return instance.getDeviceType();
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     * @param value The enum numeric value on the wire for deviceType to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
      copyOnWrite();
      instance.setDeviceType(value);
      return this;
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeviceType() {
      copyOnWrite();
      instance.clearDeviceType();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.SessionHeader)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SessionHeader();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "window_",
            org.chromium.components.sync.protocol.SessionWindow.class,
            "clientName_",
            "deviceType_",
            org.chromium.components.sync.protocol.SyncEnums.DeviceType.internalGetVerifier(),
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0002\u0004\u0003\u0000\u0001\u0000\u0002\u001b\u0003\u1008" +
              "\u0000\u0004\u100c\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.SessionHeader> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.SessionHeader.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.SessionHeader>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SessionHeader)
  private static final org.chromium.components.sync.protocol.SessionHeader DEFAULT_INSTANCE;
  static {
    SessionHeader defaultInstance = new SessionHeader();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SessionHeader.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.SessionHeader getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SessionHeader> PARSER;

  public static com.google.protobuf.Parser<SessionHeader> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

