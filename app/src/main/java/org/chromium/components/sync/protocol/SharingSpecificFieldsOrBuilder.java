// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/device_info_specifics.proto

package org.chromium.components.sync.protocol;

public interface SharingSpecificFieldsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.SharingSpecificFields)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * FCM registration token of device subscribed using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional string vapid_fcm_token = 1;</code>
   * @return Whether the vapidFcmToken field is set.
   */
  boolean hasVapidFcmToken();
  /**
   * <pre>
   * FCM registration token of device subscribed using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional string vapid_fcm_token = 1;</code>
   * @return The vapidFcmToken.
   */
  java.lang.String getVapidFcmToken();
  /**
   * <pre>
   * FCM registration token of device subscribed using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional string vapid_fcm_token = 1;</code>
   * @return The bytes for vapidFcmToken.
   */
  com.google.protobuf.ByteString
      getVapidFcmTokenBytes();

  /**
   * <pre>
   * Public key for message encryption [RFC8291] using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional bytes vapid_p256dh = 2;</code>
   * @return Whether the vapidP256dh field is set.
   */
  boolean hasVapidP256Dh();
  /**
   * <pre>
   * Public key for message encryption [RFC8291] using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional bytes vapid_p256dh = 2;</code>
   * @return The vapidP256dh.
   */
  com.google.protobuf.ByteString getVapidP256Dh();

  /**
   * <pre>
   * Auth secret for message encryption [RFC8291] using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional bytes vapid_auth_secret = 3;</code>
   * @return Whether the vapidAuthSecret field is set.
   */
  boolean hasVapidAuthSecret();
  /**
   * <pre>
   * Auth secret for message encryption [RFC8291] using VAPID key.
   * TODO(crbug.com/1012226): Deprecate when VAPID migration is over.
   * </pre>
   *
   * <code>optional bytes vapid_auth_secret = 3;</code>
   * @return The vapidAuthSecret.
   */
  com.google.protobuf.ByteString getVapidAuthSecret();

  /**
   * <pre>
   * A list of enabled Sharing features.
   * </pre>
   *
   * <code>repeated .sync_pb.SharingSpecificFields.EnabledFeatures enabled_features = 4;</code>
   * @return A list containing the enabledFeatures.
   */
  java.util.List<org.chromium.components.sync.protocol.SharingSpecificFields.EnabledFeatures> getEnabledFeaturesList();
  /**
   * <pre>
   * A list of enabled Sharing features.
   * </pre>
   *
   * <code>repeated .sync_pb.SharingSpecificFields.EnabledFeatures enabled_features = 4;</code>
   * @return The count of enabledFeatures.
   */
  int getEnabledFeaturesCount();
  /**
   * <pre>
   * A list of enabled Sharing features.
   * </pre>
   *
   * <code>repeated .sync_pb.SharingSpecificFields.EnabledFeatures enabled_features = 4;</code>
   * @param index The index of the element to return.
   * @return The enabledFeatures at the given index.
   */
  org.chromium.components.sync.protocol.SharingSpecificFields.EnabledFeatures getEnabledFeatures(int index);

  /**
   * <pre>
   * Deprecated. Use sender_id_fcm_token_v2 for new clients.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_deprecated = 5 [deprecated = true];</code>
   * @return Whether the senderIdFcmTokenDeprecated field is set.
   */
  @java.lang.Deprecated boolean hasSenderIdFcmTokenDeprecated();
  /**
   * <pre>
   * Deprecated. Use sender_id_fcm_token_v2 for new clients.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_deprecated = 5 [deprecated = true];</code>
   * @return The senderIdFcmTokenDeprecated.
   */
  @java.lang.Deprecated java.lang.String getSenderIdFcmTokenDeprecated();
  /**
   * <pre>
   * Deprecated. Use sender_id_fcm_token_v2 for new clients.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_deprecated = 5 [deprecated = true];</code>
   * @return The bytes for senderIdFcmTokenDeprecated.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getSenderIdFcmTokenDeprecatedBytes();

  /**
   * <pre>
   * Deprecated. Use sender_id_p256dh_v2 for new clients.
   * </pre>
   *
   * <code>optional bytes sender_id_p256dh_deprecated = 6 [deprecated = true];</code>
   * @return Whether the senderIdP256dhDeprecated field is set.
   */
  @java.lang.Deprecated boolean hasSenderIdP256DhDeprecated();
  /**
   * <pre>
   * Deprecated. Use sender_id_p256dh_v2 for new clients.
   * </pre>
   *
   * <code>optional bytes sender_id_p256dh_deprecated = 6 [deprecated = true];</code>
   * @return The senderIdP256dhDeprecated.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString getSenderIdP256DhDeprecated();

  /**
   * <pre>
   * Deprecated. Use sender_id_auth_secret_v2 for new clients.
   * </pre>
   *
   * <code>optional bytes sender_id_auth_secret_deprecated = 7 [deprecated = true];</code>
   * @return Whether the senderIdAuthSecretDeprecated field is set.
   */
  @java.lang.Deprecated boolean hasSenderIdAuthSecretDeprecated();
  /**
   * <pre>
   * Deprecated. Use sender_id_auth_secret_v2 for new clients.
   * </pre>
   *
   * <code>optional bytes sender_id_auth_secret_deprecated = 7 [deprecated = true];</code>
   * @return The senderIdAuthSecretDeprecated.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString getSenderIdAuthSecretDeprecated();

  /**
   * <pre>
   * FCM registration token of device subscribed using Sharing sender ID.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_v2 = 8;</code>
   * @return Whether the senderIdFcmTokenV2 field is set.
   */
  boolean hasSenderIdFcmTokenV2();
  /**
   * <pre>
   * FCM registration token of device subscribed using Sharing sender ID.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_v2 = 8;</code>
   * @return The senderIdFcmTokenV2.
   */
  java.lang.String getSenderIdFcmTokenV2();
  /**
   * <pre>
   * FCM registration token of device subscribed using Sharing sender ID.
   * </pre>
   *
   * <code>optional string sender_id_fcm_token_v2 = 8;</code>
   * @return The bytes for senderIdFcmTokenV2.
   */
  com.google.protobuf.ByteString
      getSenderIdFcmTokenV2Bytes();

  /**
   * <pre>
   * Public key for message encryption [RFC8291] using Sharing sender ID.
   * </pre>
   *
   * <code>optional bytes sender_id_p256dh_v2 = 9;</code>
   * @return Whether the senderIdP256dhV2 field is set.
   */
  boolean hasSenderIdP256DhV2();
  /**
   * <pre>
   * Public key for message encryption [RFC8291] using Sharing sender ID.
   * </pre>
   *
   * <code>optional bytes sender_id_p256dh_v2 = 9;</code>
   * @return The senderIdP256dhV2.
   */
  com.google.protobuf.ByteString getSenderIdP256DhV2();

  /**
   * <pre>
   * Auth secret for message encryption [RFC8291] using Sharing sender ID.
   * </pre>
   *
   * <code>optional bytes sender_id_auth_secret_v2 = 10;</code>
   * @return Whether the senderIdAuthSecretV2 field is set.
   */
  boolean hasSenderIdAuthSecretV2();
  /**
   * <pre>
   * Auth secret for message encryption [RFC8291] using Sharing sender ID.
   * </pre>
   *
   * <code>optional bytes sender_id_auth_secret_v2 = 10;</code>
   * @return The senderIdAuthSecretV2.
   */
  com.google.protobuf.ByteString getSenderIdAuthSecretV2();
}
