// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/encryption.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Encrypted sync data consists of two parts: a key name and a blob. Key name is
 * the name of the key that was used to encrypt blob and blob is encrypted data
 * itself.
 * The reason we need to keep track of the key name is that a sync user can
 * change their passphrase (and thus their encryption key) at any time. When
 * that happens, we make a best effort to reencrypt all nodes with the new
 * passphrase, but since we don't have transactions on the server-side, we
 * cannot guarantee that every node will be reencrypted. As a workaround, we
 * keep track of all keys, assign each key a name (by using that key to encrypt
 * a well known string) and keep track of which key was used to encrypt each
 * node.
 * </pre>
 *
 * Protobuf type {@code sync_pb.EncryptedData}
 */
public  final class EncryptedData extends
    com.google.protobuf.GeneratedMessageLite<
        EncryptedData, EncryptedData.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.EncryptedData)
    EncryptedDataOrBuilder {
  private EncryptedData() {
    keyName_ = "";
    blob_ = "";
  }
  private int bitField0_;
  public static final int KEY_NAME_FIELD_NUMBER = 1;
  private java.lang.String keyName_;
  /**
   * <code>optional string key_name = 1;</code>
   * @return Whether the keyName field is set.
   */
  @java.lang.Override
  public boolean hasKeyName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional string key_name = 1;</code>
   * @return The keyName.
   */
  @java.lang.Override
  public java.lang.String getKeyName() {
    return keyName_;
  }
  /**
   * <code>optional string key_name = 1;</code>
   * @return The bytes for keyName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(keyName_);
  }
  /**
   * <code>optional string key_name = 1;</code>
   * @param value The keyName to set.
   */
  private void setKeyName(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    keyName_ = value;
  }
  /**
   * <code>optional string key_name = 1;</code>
   */
  private void clearKeyName() {
    bitField0_ = (bitField0_ & ~0x00000001);
    keyName_ = getDefaultInstance().getKeyName();
  }
  /**
   * <code>optional string key_name = 1;</code>
   * @param value The bytes for keyName to set.
   */
  private void setKeyNameBytes(
      com.google.protobuf.ByteString value) {
    keyName_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int BLOB_FIELD_NUMBER = 2;
  private java.lang.String blob_;
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   * @return Whether the blob field is set.
   */
  @java.lang.Override
  public boolean hasBlob() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   * @return The blob.
   */
  @java.lang.Override
  public java.lang.String getBlob() {
    return blob_;
  }
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   * @return The bytes for blob.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBlobBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(blob_);
  }
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   * @param value The blob to set.
   */
  private void setBlob(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    blob_ = value;
  }
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   */
  private void clearBlob() {
    bitField0_ = (bitField0_ & ~0x00000002);
    blob_ = getDefaultInstance().getBlob();
  }
  /**
   * <pre>
   * base64-encoded.
   * </pre>
   *
   * <code>optional string blob = 2;</code>
   * @param value The bytes for blob to set.
   */
  private void setBlobBytes(
      com.google.protobuf.ByteString value) {
    blob_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.EncryptedData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.EncryptedData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Encrypted sync data consists of two parts: a key name and a blob. Key name is
   * the name of the key that was used to encrypt blob and blob is encrypted data
   * itself.
   * The reason we need to keep track of the key name is that a sync user can
   * change their passphrase (and thus their encryption key) at any time. When
   * that happens, we make a best effort to reencrypt all nodes with the new
   * passphrase, but since we don't have transactions on the server-side, we
   * cannot guarantee that every node will be reencrypted. As a workaround, we
   * keep track of all keys, assign each key a name (by using that key to encrypt
   * a well known string) and keep track of which key was used to encrypt each
   * node.
   * </pre>
   *
   * Protobuf type {@code sync_pb.EncryptedData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.EncryptedData, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.EncryptedData)
      org.chromium.components.sync.protocol.EncryptedDataOrBuilder {
    // Construct using org.chromium.components.sync.protocol.EncryptedData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional string key_name = 1;</code>
     * @return Whether the keyName field is set.
     */
    @java.lang.Override
    public boolean hasKeyName() {
      return instance.hasKeyName();
    }
    /**
     * <code>optional string key_name = 1;</code>
     * @return The keyName.
     */
    @java.lang.Override
    public java.lang.String getKeyName() {
      return instance.getKeyName();
    }
    /**
     * <code>optional string key_name = 1;</code>
     * @return The bytes for keyName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyNameBytes() {
      return instance.getKeyNameBytes();
    }
    /**
     * <code>optional string key_name = 1;</code>
     * @param value The keyName to set.
     * @return This builder for chaining.
     */
    public Builder setKeyName(
        java.lang.String value) {
      copyOnWrite();
      instance.setKeyName(value);
      return this;
    }
    /**
     * <code>optional string key_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyName() {
      copyOnWrite();
      instance.clearKeyName();
      return this;
    }
    /**
     * <code>optional string key_name = 1;</code>
     * @param value The bytes for keyName to set.
     * @return This builder for chaining.
     */
    public Builder setKeyNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setKeyNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @return Whether the blob field is set.
     */
    @java.lang.Override
    public boolean hasBlob() {
      return instance.hasBlob();
    }
    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @return The blob.
     */
    @java.lang.Override
    public java.lang.String getBlob() {
      return instance.getBlob();
    }
    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @return The bytes for blob.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBlobBytes() {
      return instance.getBlobBytes();
    }
    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @param value The blob to set.
     * @return This builder for chaining.
     */
    public Builder setBlob(
        java.lang.String value) {
      copyOnWrite();
      instance.setBlob(value);
      return this;
    }
    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlob() {
      copyOnWrite();
      instance.clearBlob();
      return this;
    }
    /**
     * <pre>
     * base64-encoded.
     * </pre>
     *
     * <code>optional string blob = 2;</code>
     * @param value The bytes for blob to set.
     * @return This builder for chaining.
     */
    public Builder setBlobBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBlobBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.EncryptedData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.EncryptedData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "keyName_",
            "blob_",
          };
          java.lang.String info =
              "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1008\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.EncryptedData> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.EncryptedData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.EncryptedData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.EncryptedData)
  private static final org.chromium.components.sync.protocol.EncryptedData DEFAULT_INSTANCE;
  static {
    EncryptedData defaultInstance = new EncryptedData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      EncryptedData.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.EncryptedData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<EncryptedData> PARSER;

  public static com.google.protobuf.Parser<EncryptedData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

