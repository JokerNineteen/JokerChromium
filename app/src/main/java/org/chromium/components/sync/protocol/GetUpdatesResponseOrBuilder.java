// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync.proto

package org.chromium.components.sync.protocol;

public interface GetUpdatesResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.GetUpdatesResponse)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * New sync entries that the client should apply.
   * </pre>
   *
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  java.util.List<org.chromium.components.sync.protocol.SyncEntity> 
      getEntriesList();
  /**
   * <pre>
   * New sync entries that the client should apply.
   * </pre>
   *
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  org.chromium.components.sync.protocol.SyncEntity getEntries(int index);
  /**
   * <pre>
   * New sync entries that the client should apply.
   * </pre>
   *
   * <code>repeated .sync_pb.SyncEntity entries = 1;</code>
   */
  int getEntriesCount();

  /**
   * <pre>
   * Approximate count of changes remaining - use this for UI feedback.
   * If present and zero, this estimate is firm: the server has no changes
   * after the current batch.
   * </pre>
   *
   * <code>optional int64 changes_remaining = 4;</code>
   * @return Whether the changesRemaining field is set.
   */
  boolean hasChangesRemaining();
  /**
   * <pre>
   * Approximate count of changes remaining - use this for UI feedback.
   * If present and zero, this estimate is firm: the server has no changes
   * after the current batch.
   * </pre>
   *
   * <code>optional int64 changes_remaining = 4;</code>
   * @return The changesRemaining.
   */
  long getChangesRemaining();

  /**
   * <pre>
   * Opaque, per-datatype timestamp-like tokens.  Clients should retain and
   * persist the values returned in this field, and present them back to the
   * server to indicate the starting point for future update requests.
   * This will be sent only if the client provided |from_progress_marker|
   * in the update request.
   * The server may provide a new progress marker even if this is the end of
   * the batch, or if there were no new updates on the server; and the client
   * must save these.  If the server does not provide a |new_progress_marker|
   * value for a particular datatype, when the request provided a
   * |from_progress_marker| value for that datatype, the client should
   * interpret this to mean "no change from the previous state" and retain its
   * previous progress-marker value for that datatype.
   * Progress markers in the context of a response will never have the
   * |timestamp_token_for_migration| field set.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeProgressMarker new_progress_marker = 5;</code>
   */
  java.util.List<org.chromium.components.sync.protocol.DataTypeProgressMarker> 
      getNewProgressMarkerList();
  /**
   * <pre>
   * Opaque, per-datatype timestamp-like tokens.  Clients should retain and
   * persist the values returned in this field, and present them back to the
   * server to indicate the starting point for future update requests.
   * This will be sent only if the client provided |from_progress_marker|
   * in the update request.
   * The server may provide a new progress marker even if this is the end of
   * the batch, or if there were no new updates on the server; and the client
   * must save these.  If the server does not provide a |new_progress_marker|
   * value for a particular datatype, when the request provided a
   * |from_progress_marker| value for that datatype, the client should
   * interpret this to mean "no change from the previous state" and retain its
   * previous progress-marker value for that datatype.
   * Progress markers in the context of a response will never have the
   * |timestamp_token_for_migration| field set.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeProgressMarker new_progress_marker = 5;</code>
   */
  org.chromium.components.sync.protocol.DataTypeProgressMarker getNewProgressMarker(int index);
  /**
   * <pre>
   * Opaque, per-datatype timestamp-like tokens.  Clients should retain and
   * persist the values returned in this field, and present them back to the
   * server to indicate the starting point for future update requests.
   * This will be sent only if the client provided |from_progress_marker|
   * in the update request.
   * The server may provide a new progress marker even if this is the end of
   * the batch, or if there were no new updates on the server; and the client
   * must save these.  If the server does not provide a |new_progress_marker|
   * value for a particular datatype, when the request provided a
   * |from_progress_marker| value for that datatype, the client should
   * interpret this to mean "no change from the previous state" and retain its
   * previous progress-marker value for that datatype.
   * Progress markers in the context of a response will never have the
   * |timestamp_token_for_migration| field set.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeProgressMarker new_progress_marker = 5;</code>
   */
  int getNewProgressMarkerCount();

  /**
   * <pre>
   * The current encryption keys associated with this account. Will be set if
   * the GetUpdatesMessage in the request had need_encryption_key == true or
   * the server has updated the set of encryption keys (e.g. due to a key
   * rotation).
   * </pre>
   *
   * <code>repeated bytes encryption_keys = 6;</code>
   * @return A list containing the encryptionKeys.
   */
  java.util.List<com.google.protobuf.ByteString> getEncryptionKeysList();
  /**
   * <pre>
   * The current encryption keys associated with this account. Will be set if
   * the GetUpdatesMessage in the request had need_encryption_key == true or
   * the server has updated the set of encryption keys (e.g. due to a key
   * rotation).
   * </pre>
   *
   * <code>repeated bytes encryption_keys = 6;</code>
   * @return The count of encryptionKeys.
   */
  int getEncryptionKeysCount();
  /**
   * <pre>
   * The current encryption keys associated with this account. Will be set if
   * the GetUpdatesMessage in the request had need_encryption_key == true or
   * the server has updated the set of encryption keys (e.g. due to a key
   * rotation).
   * </pre>
   *
   * <code>repeated bytes encryption_keys = 6;</code>
   * @param index The index of the element to return.
   * @return The encryptionKeys at the given index.
   */
  com.google.protobuf.ByteString getEncryptionKeys(int index);

  /**
   * <pre>
   * Set of optional datatype contexts server mutations.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext context_mutations = 7;</code>
   */
  java.util.List<org.chromium.components.sync.protocol.DataTypeContext> 
      getContextMutationsList();
  /**
   * <pre>
   * Set of optional datatype contexts server mutations.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext context_mutations = 7;</code>
   */
  org.chromium.components.sync.protocol.DataTypeContext getContextMutations(int index);
  /**
   * <pre>
   * Set of optional datatype contexts server mutations.
   * </pre>
   *
   * <code>repeated .sync_pb.DataTypeContext context_mutations = 7;</code>
   */
  int getContextMutationsCount();
}
