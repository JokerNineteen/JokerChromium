// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Client specific configuration information.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ClientConfigParams}
 */
public  final class ClientConfigParams extends
    com.google.protobuf.GeneratedMessageLite<
        ClientConfigParams, ClientConfigParams.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ClientConfigParams)
    ClientConfigParamsOrBuilder {
  private ClientConfigParams() {
    enabledTypeIds_ = emptyIntList();
    devicesFcmRegistrationTokens_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  private int bitField0_;
  public static final int ENABLED_TYPE_IDS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList enabledTypeIds_;
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @return A list containing the enabledTypeIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getEnabledTypeIdsList() {
    return enabledTypeIds_;
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @return The count of enabledTypeIds.
   */
  @java.lang.Override
  public int getEnabledTypeIdsCount() {
    return enabledTypeIds_.size();
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @param index The index of the element to return.
   * @return The enabledTypeIds at the given index.
   */
  @java.lang.Override
  public int getEnabledTypeIds(int index) {
    return enabledTypeIds_.getInt(index);
  }
  private void ensureEnabledTypeIdsIsMutable() {
    com.google.protobuf.Internal.IntList tmp = enabledTypeIds_;
    if (!tmp.isModifiable()) {
      enabledTypeIds_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @param index The index to set the value at.
   * @param value The enabledTypeIds to set.
   */
  private void setEnabledTypeIds(
      int index, int value) {
    ensureEnabledTypeIdsIsMutable();
    enabledTypeIds_.setInt(index, value);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @param value The enabledTypeIds to add.
   */
  private void addEnabledTypeIds(int value) {
    ensureEnabledTypeIdsIsMutable();
    enabledTypeIds_.addInt(value);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   * @param values The enabledTypeIds to add.
   */
  private void addAllEnabledTypeIds(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureEnabledTypeIdsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, enabledTypeIds_);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  private void clearEnabledTypeIds() {
    enabledTypeIds_ = emptyIntList();
  }

  public static final int TABS_DATATYPE_ENABLED_FIELD_NUMBER = 2;
  private boolean tabsDatatypeEnabled_;
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   * @return Whether the tabsDatatypeEnabled field is set.
   */
  @java.lang.Override
  public boolean hasTabsDatatypeEnabled() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   * @return The tabsDatatypeEnabled.
   */
  @java.lang.Override
  public boolean getTabsDatatypeEnabled() {
    return tabsDatatypeEnabled_;
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   * @param value The tabsDatatypeEnabled to set.
   */
  private void setTabsDatatypeEnabled(boolean value) {
    bitField0_ |= 0x00000001;
    tabsDatatypeEnabled_ = value;
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  private void clearTabsDatatypeEnabled() {
    bitField0_ = (bitField0_ & ~0x00000001);
    tabsDatatypeEnabled_ = false;
  }

  public static final int COOKIE_JAR_MISMATCH_FIELD_NUMBER = 3;
  private boolean cookieJarMismatch_;
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   * @return Whether the cookieJarMismatch field is set.
   */
  @java.lang.Override
  public boolean hasCookieJarMismatch() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   * @return The cookieJarMismatch.
   */
  @java.lang.Override
  public boolean getCookieJarMismatch() {
    return cookieJarMismatch_;
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   * @param value The cookieJarMismatch to set.
   */
  private void setCookieJarMismatch(boolean value) {
    bitField0_ |= 0x00000002;
    cookieJarMismatch_ = value;
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  private void clearCookieJarMismatch() {
    bitField0_ = (bitField0_ & ~0x00000002);
    cookieJarMismatch_ = false;
  }

  public static final int SINGLE_CLIENT_FIELD_NUMBER = 4;
  private boolean singleClient_;
  /**
   * <pre>
   * Indicates that the client is not aware of any other active clients for the
   * user. This flag shows that it is not necessary to send invalidations for
   * the committed data. The client is considered active if it's DeviceInfo has
   * updated recent enough.
   * </pre>
   *
   * <code>optional bool single_client = 4;</code>
   * @return Whether the singleClient field is set.
   */
  @java.lang.Override
  public boolean hasSingleClient() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Indicates that the client is not aware of any other active clients for the
   * user. This flag shows that it is not necessary to send invalidations for
   * the committed data. The client is considered active if it's DeviceInfo has
   * updated recent enough.
   * </pre>
   *
   * <code>optional bool single_client = 4;</code>
   * @return The singleClient.
   */
  @java.lang.Override
  public boolean getSingleClient() {
    return singleClient_;
  }
  /**
   * <pre>
   * Indicates that the client is not aware of any other active clients for the
   * user. This flag shows that it is not necessary to send invalidations for
   * the committed data. The client is considered active if it's DeviceInfo has
   * updated recent enough.
   * </pre>
   *
   * <code>optional bool single_client = 4;</code>
   * @param value The singleClient to set.
   */
  private void setSingleClient(boolean value) {
    bitField0_ |= 0x00000004;
    singleClient_ = value;
  }
  /**
   * <pre>
   * Indicates that the client is not aware of any other active clients for the
   * user. This flag shows that it is not necessary to send invalidations for
   * the committed data. The client is considered active if it's DeviceInfo has
   * updated recent enough.
   * </pre>
   *
   * <code>optional bool single_client = 4;</code>
   */
  private void clearSingleClient() {
    bitField0_ = (bitField0_ & ~0x00000004);
    singleClient_ = false;
  }

  public static final int DEVICES_FCM_REGISTRATION_TOKENS_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> devicesFcmRegistrationTokens_;
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @return A list containing the devicesFcmRegistrationTokens.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getDevicesFcmRegistrationTokensList() {
    return devicesFcmRegistrationTokens_;
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @return The count of devicesFcmRegistrationTokens.
   */
  @java.lang.Override
  public int getDevicesFcmRegistrationTokensCount() {
    return devicesFcmRegistrationTokens_.size();
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param index The index of the element to return.
   * @return The devicesFcmRegistrationTokens at the given index.
   */
  @java.lang.Override
  public java.lang.String getDevicesFcmRegistrationTokens(int index) {
    return devicesFcmRegistrationTokens_.get(index);
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the devicesFcmRegistrationTokens at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDevicesFcmRegistrationTokensBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        devicesFcmRegistrationTokens_.get(index));
  }
  private void ensureDevicesFcmRegistrationTokensIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        devicesFcmRegistrationTokens_;  if (!tmp.isModifiable()) {
      devicesFcmRegistrationTokens_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param index The index to set the value at.
   * @param value The devicesFcmRegistrationTokens to set.
   */
  private void setDevicesFcmRegistrationTokens(
      int index, java.lang.String value) {
    value.getClass();
  ensureDevicesFcmRegistrationTokensIsMutable();
    devicesFcmRegistrationTokens_.set(index, value);
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param value The devicesFcmRegistrationTokens to add.
   */
  private void addDevicesFcmRegistrationTokens(
      java.lang.String value) {
    value.getClass();
  ensureDevicesFcmRegistrationTokensIsMutable();
    devicesFcmRegistrationTokens_.add(value);
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param values The devicesFcmRegistrationTokens to add.
   */
  private void addAllDevicesFcmRegistrationTokens(
      java.lang.Iterable<java.lang.String> values) {
    ensureDevicesFcmRegistrationTokensIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, devicesFcmRegistrationTokens_);
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   */
  private void clearDevicesFcmRegistrationTokens() {
    devicesFcmRegistrationTokens_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of FCM registration tokens which are obtained from other clients.
   * This list is used by the server to send invalidations to all other clients.
   * If the list is empty, the server should treat this as "there is no
   * information about other clients". In practice, this happens by the next
   * causes:
   * 1. This is the old client which doesn't set this field.
   * 2. There are too many active devices and the list would have too many
   * items.
   * 3. An empty list could also mean that the current client is the only
   * client. This case should be covered by the |single_client| field instead
   * (otherwise it could be mixed up with older clients). The server doesn't
   * have to use this field and can ignore it.
   * </pre>
   *
   * <code>repeated string devices_fcm_registration_tokens = 5;</code>
   * @param value The bytes of the devicesFcmRegistrationTokens to add.
   */
  private void addDevicesFcmRegistrationTokensBytes(
      com.google.protobuf.ByteString value) {
    ensureDevicesFcmRegistrationTokensIsMutable();
    devicesFcmRegistrationTokens_.add(value.toStringUtf8());
  }

  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ClientConfigParams prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Client specific configuration information.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ClientConfigParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ClientConfigParams, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ClientConfigParams)
      org.chromium.components.sync.protocol.ClientConfigParamsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ClientConfigParams.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @return A list containing the enabledTypeIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getEnabledTypeIdsList() {
      return java.util.Collections.unmodifiableList(
          instance.getEnabledTypeIdsList());
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @return The count of enabledTypeIds.
     */
    @java.lang.Override
    public int getEnabledTypeIdsCount() {
      return instance.getEnabledTypeIdsCount();
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The enabledTypeIds at the given index.
     */
    @java.lang.Override
    public int getEnabledTypeIds(int index) {
      return instance.getEnabledTypeIds(index);
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @param value The enabledTypeIds to set.
     * @return This builder for chaining.
     */
    public Builder setEnabledTypeIds(
        int index, int value) {
      copyOnWrite();
      instance.setEnabledTypeIds(index, value);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @param value The enabledTypeIds to add.
     * @return This builder for chaining.
     */
    public Builder addEnabledTypeIds(int value) {
      copyOnWrite();
      instance.addEnabledTypeIds(value);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @param values The enabledTypeIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllEnabledTypeIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllEnabledTypeIds(values);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnabledTypeIds() {
      copyOnWrite();
      instance.clearEnabledTypeIds();
      return this;
    }

    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     * @return Whether the tabsDatatypeEnabled field is set.
     */
    @java.lang.Override
    public boolean hasTabsDatatypeEnabled() {
      return instance.hasTabsDatatypeEnabled();
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     * @return The tabsDatatypeEnabled.
     */
    @java.lang.Override
    public boolean getTabsDatatypeEnabled() {
      return instance.getTabsDatatypeEnabled();
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     * @param value The tabsDatatypeEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setTabsDatatypeEnabled(boolean value) {
      copyOnWrite();
      instance.setTabsDatatypeEnabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTabsDatatypeEnabled() {
      copyOnWrite();
      instance.clearTabsDatatypeEnabled();
      return this;
    }

    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     * @return Whether the cookieJarMismatch field is set.
     */
    @java.lang.Override
    public boolean hasCookieJarMismatch() {
      return instance.hasCookieJarMismatch();
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     * @return The cookieJarMismatch.
     */
    @java.lang.Override
    public boolean getCookieJarMismatch() {
      return instance.getCookieJarMismatch();
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     * @param value The cookieJarMismatch to set.
     * @return This builder for chaining.
     */
    public Builder setCookieJarMismatch(boolean value) {
      copyOnWrite();
      instance.setCookieJarMismatch(value);
      return this;
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCookieJarMismatch() {
      copyOnWrite();
      instance.clearCookieJarMismatch();
      return this;
    }

    /**
     * <pre>
     * Indicates that the client is not aware of any other active clients for the
     * user. This flag shows that it is not necessary to send invalidations for
     * the committed data. The client is considered active if it's DeviceInfo has
     * updated recent enough.
     * </pre>
     *
     * <code>optional bool single_client = 4;</code>
     * @return Whether the singleClient field is set.
     */
    @java.lang.Override
    public boolean hasSingleClient() {
      return instance.hasSingleClient();
    }
    /**
     * <pre>
     * Indicates that the client is not aware of any other active clients for the
     * user. This flag shows that it is not necessary to send invalidations for
     * the committed data. The client is considered active if it's DeviceInfo has
     * updated recent enough.
     * </pre>
     *
     * <code>optional bool single_client = 4;</code>
     * @return The singleClient.
     */
    @java.lang.Override
    public boolean getSingleClient() {
      return instance.getSingleClient();
    }
    /**
     * <pre>
     * Indicates that the client is not aware of any other active clients for the
     * user. This flag shows that it is not necessary to send invalidations for
     * the committed data. The client is considered active if it's DeviceInfo has
     * updated recent enough.
     * </pre>
     *
     * <code>optional bool single_client = 4;</code>
     * @param value The singleClient to set.
     * @return This builder for chaining.
     */
    public Builder setSingleClient(boolean value) {
      copyOnWrite();
      instance.setSingleClient(value);
      return this;
    }
    /**
     * <pre>
     * Indicates that the client is not aware of any other active clients for the
     * user. This flag shows that it is not necessary to send invalidations for
     * the committed data. The client is considered active if it's DeviceInfo has
     * updated recent enough.
     * </pre>
     *
     * <code>optional bool single_client = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSingleClient() {
      copyOnWrite();
      instance.clearSingleClient();
      return this;
    }

    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @return A list containing the devicesFcmRegistrationTokens.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getDevicesFcmRegistrationTokensList() {
      return java.util.Collections.unmodifiableList(
          instance.getDevicesFcmRegistrationTokensList());
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @return The count of devicesFcmRegistrationTokens.
     */
    @java.lang.Override
    public int getDevicesFcmRegistrationTokensCount() {
      return instance.getDevicesFcmRegistrationTokensCount();
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param index The index of the element to return.
     * @return The devicesFcmRegistrationTokens at the given index.
     */
    @java.lang.Override
    public java.lang.String getDevicesFcmRegistrationTokens(int index) {
      return instance.getDevicesFcmRegistrationTokens(index);
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the devicesFcmRegistrationTokens at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDevicesFcmRegistrationTokensBytes(int index) {
      return instance.getDevicesFcmRegistrationTokensBytes(index);
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param index The index to set the value at.
     * @param value The devicesFcmRegistrationTokens to set.
     * @return This builder for chaining.
     */
    public Builder setDevicesFcmRegistrationTokens(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setDevicesFcmRegistrationTokens(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param value The devicesFcmRegistrationTokens to add.
     * @return This builder for chaining.
     */
    public Builder addDevicesFcmRegistrationTokens(
        java.lang.String value) {
      copyOnWrite();
      instance.addDevicesFcmRegistrationTokens(value);
      return this;
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param values The devicesFcmRegistrationTokens to add.
     * @return This builder for chaining.
     */
    public Builder addAllDevicesFcmRegistrationTokens(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllDevicesFcmRegistrationTokens(values);
      return this;
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDevicesFcmRegistrationTokens() {
      copyOnWrite();
      instance.clearDevicesFcmRegistrationTokens();
      return this;
    }
    /**
     * <pre>
     * A list of FCM registration tokens which are obtained from other clients.
     * This list is used by the server to send invalidations to all other clients.
     * If the list is empty, the server should treat this as "there is no
     * information about other clients". In practice, this happens by the next
     * causes:
     * 1. This is the old client which doesn't set this field.
     * 2. There are too many active devices and the list would have too many
     * items.
     * 3. An empty list could also mean that the current client is the only
     * client. This case should be covered by the |single_client| field instead
     * (otherwise it could be mixed up with older clients). The server doesn't
     * have to use this field and can ignore it.
     * </pre>
     *
     * <code>repeated string devices_fcm_registration_tokens = 5;</code>
     * @param value The bytes of the devicesFcmRegistrationTokens to add.
     * @return This builder for chaining.
     */
    public Builder addDevicesFcmRegistrationTokensBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addDevicesFcmRegistrationTokensBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ClientConfigParams)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ClientConfigParams();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "enabledTypeIds_",
            "tabsDatatypeEnabled_",
            "cookieJarMismatch_",
            "singleClient_",
            "devicesFcmRegistrationTokens_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0002\u0000\u0001\u0016\u0002\u1007" +
              "\u0000\u0003\u1007\u0001\u0004\u1007\u0002\u0005\u001a";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.ClientConfigParams> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.ClientConfigParams.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ClientConfigParams>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ClientConfigParams)
  private static final org.chromium.components.sync.protocol.ClientConfigParams DEFAULT_INSTANCE;
  static {
    ClientConfigParams defaultInstance = new ClientConfigParams();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ClientConfigParams.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.ClientConfigParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientConfigParams> PARSER;

  public static com.google.protobuf.Parser<ClientConfigParams> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

