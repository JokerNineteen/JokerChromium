// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/user_consent_types.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.UserConsentTypes}
 */
public  final class UserConsentTypes extends
    com.google.protobuf.GeneratedMessageLite<
        UserConsentTypes, UserConsentTypes.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes)
    UserConsentTypesOrBuilder {
  private UserConsentTypes() {
  }
  /**
   * <pre>
   * The status of a particular User Consent. The status describes the state
   * of the consent as it is: given, not_given.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.UserConsentTypes.ConsentStatus}
   */
  public enum ConsentStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * The status is unspecified e.g. because the user was not asked to
     * consent yet or an error happened or the decision was delayed.
     * </pre>
     *
     * <code>CONSENT_STATUS_UNSPECIFIED = 0;</code>
     */
    CONSENT_STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * The consent is not given. This means the user either revoked the
     * consent or did not grant it in the first place.
     * </pre>
     *
     * <code>NOT_GIVEN = 1;</code>
     */
    NOT_GIVEN(1),
    /**
     * <pre>
     * The consent is given. This means the user did grant the consent.
     * </pre>
     *
     * <code>GIVEN = 2;</code>
     */
    GIVEN(2),
    ;

    /**
     * <pre>
     * The status is unspecified e.g. because the user was not asked to
     * consent yet or an error happened or the decision was delayed.
     * </pre>
     *
     * <code>CONSENT_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int CONSENT_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The consent is not given. This means the user either revoked the
     * consent or did not grant it in the first place.
     * </pre>
     *
     * <code>NOT_GIVEN = 1;</code>
     */
    public static final int NOT_GIVEN_VALUE = 1;
    /**
     * <pre>
     * The consent is given. This means the user did grant the consent.
     * </pre>
     *
     * <code>GIVEN = 2;</code>
     */
    public static final int GIVEN_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConsentStatus valueOf(int value) {
      return forNumber(value);
    }

    public static ConsentStatus forNumber(int value) {
      switch (value) {
        case 0: return CONSENT_STATUS_UNSPECIFIED;
        case 1: return NOT_GIVEN;
        case 2: return GIVEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConsentStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConsentStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConsentStatus>() {
            @java.lang.Override
            public ConsentStatus findValueByNumber(int number) {
              return ConsentStatus.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ConsentStatusVerifier.INSTANCE;
    }

    private static final class ConsentStatusVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ConsentStatusVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ConsentStatus.forNumber(number) != null;
            }
          };

    private final int value;

    private ConsentStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.UserConsentTypes.ConsentStatus)
  }

  public interface ArcBackupAndRestoreConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The user consent for the ARC Backup And Restore feature. The consent
   * status is determined by the corresponding setting on the ARC setup dialog.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent}
   */
  public  static final class ArcBackupAndRestoreConsent extends
      com.google.protobuf.GeneratedMessageLite<
          ArcBackupAndRestoreConsent, ArcBackupAndRestoreConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent)
      ArcBackupAndRestoreConsentOrBuilder {
    private ArcBackupAndRestoreConsent() {
      descriptionGrdIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 2;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000001;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The user consent for the ARC Backup And Restore feature. The consent
     * status is determined by the corresponding setting on the ARC setup dialog.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "descriptionGrdIds_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0016\u0002\u1004" +
                "\u0000\u0003\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent DEFAULT_INSTANCE;
    static {
      ArcBackupAndRestoreConsent defaultInstance = new ArcBackupAndRestoreConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ArcBackupAndRestoreConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcBackupAndRestoreConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ArcBackupAndRestoreConsent> PARSER;

    public static com.google.protobuf.Parser<ArcBackupAndRestoreConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ArcGoogleLocationServiceConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The user consent for the Google Location Service. The consent status is
   * determined by the corresponding setting on the ARC setup dialog.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent}
   */
  public  static final class ArcGoogleLocationServiceConsent extends
      com.google.protobuf.GeneratedMessageLite<
          ArcGoogleLocationServiceConsent, ArcGoogleLocationServiceConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent)
      ArcGoogleLocationServiceConsentOrBuilder {
    private ArcGoogleLocationServiceConsent() {
      descriptionGrdIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * Ids of the strings of the setting text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 2;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000001;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The user consent for the Google Location Service. The consent status is
     * determined by the corresponding setting on the ARC setup dialog.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the setting text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "descriptionGrdIds_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0016\u0002\u1004" +
                "\u0000\u0003\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent DEFAULT_INSTANCE;
    static {
      ArcGoogleLocationServiceConsent defaultInstance = new ArcGoogleLocationServiceConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ArcGoogleLocationServiceConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcGoogleLocationServiceConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ArcGoogleLocationServiceConsent> PARSER;

    public static com.google.protobuf.Parser<ArcGoogleLocationServiceConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ArcPlayTermsOfServiceConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     * @return Whether the playTermsOfServiceTextLength field is set.
     */
    boolean hasPlayTermsOfServiceTextLength();
    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     * @return The playTermsOfServiceTextLength.
     */
    int getPlayTermsOfServiceTextLength();

    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     * @return Whether the playTermsOfServiceHash field is set.
     */
    boolean hasPlayTermsOfServiceHash();
    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     * @return The playTermsOfServiceHash.
     */
    com.google.protobuf.ByteString getPlayTermsOfServiceHash();

    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();

    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     * @return Whether the consentFlow field is set.
     */
    boolean hasConsentFlow();
    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     * @return The consentFlow.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow getConsentFlow();
  }
  /**
   * <pre>
   * The user consent for the Play terms of service is determined by the user
   * action on the ARC setup dialog that presents the Play Terms of Service.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent}
   */
  public  static final class ArcPlayTermsOfServiceConsent extends
      com.google.protobuf.GeneratedMessageLite<
          ArcPlayTermsOfServiceConsent, ArcPlayTermsOfServiceConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent)
      ArcPlayTermsOfServiceConsentOrBuilder {
    private ArcPlayTermsOfServiceConsent() {
      playTermsOfServiceHash_ = com.google.protobuf.ByteString.EMPTY;
      descriptionGrdIds_ = emptyIntList();
      consentFlow_ = 1;
    }
    /**
     * <pre>
     * Enum describing different user flow during which the ARC Play Terms of
     * service consent can be recorded.
     * </pre>
     *
     * Protobuf enum {@code sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow}
     */
    public enum ConsentFlow
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * The ARC setup flow on a CROS device.
       * </pre>
       *
       * <code>SETUP = 1;</code>
       */
      SETUP(1),
      /**
       * <pre>
       * The user flow for changing the ARC setting on a CROS device.
       * </pre>
       *
       * <code>SETTING_CHANGE = 2;</code>
       */
      SETTING_CHANGE(2),
      ;

      /**
       * <pre>
       * The ARC setup flow on a CROS device.
       * </pre>
       *
       * <code>SETUP = 1;</code>
       */
      public static final int SETUP_VALUE = 1;
      /**
       * <pre>
       * The user flow for changing the ARC setting on a CROS device.
       * </pre>
       *
       * <code>SETTING_CHANGE = 2;</code>
       */
      public static final int SETTING_CHANGE_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConsentFlow valueOf(int value) {
        return forNumber(value);
      }

      public static ConsentFlow forNumber(int value) {
        switch (value) {
          case 1: return SETUP;
          case 2: return SETTING_CHANGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ConsentFlow>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ConsentFlow> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ConsentFlow>() {
              @java.lang.Override
              public ConsentFlow findValueByNumber(int number) {
                return ConsentFlow.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ConsentFlowVerifier.INSTANCE;
      }

      private static final class ConsentFlowVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ConsentFlowVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return ConsentFlow.forNumber(number) != null;
              }
            };

      private final int value;

      private ConsentFlow(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow)
    }

    private int bitField0_;
    public static final int PLAY_TERMS_OF_SERVICE_TEXT_LENGTH_FIELD_NUMBER = 1;
    private int playTermsOfServiceTextLength_;
    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     * @return Whether the playTermsOfServiceTextLength field is set.
     */
    @java.lang.Override
    public boolean hasPlayTermsOfServiceTextLength() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     * @return The playTermsOfServiceTextLength.
     */
    @java.lang.Override
    public int getPlayTermsOfServiceTextLength() {
      return playTermsOfServiceTextLength_;
    }
    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     * @param value The playTermsOfServiceTextLength to set.
     */
    private void setPlayTermsOfServiceTextLength(int value) {
      bitField0_ |= 0x00000001;
      playTermsOfServiceTextLength_ = value;
    }
    /**
     * <pre>
     * The length of the UTF-8 encoded string of the Play Terms of Service
     * text. The length is given in number of bytes.
     * </pre>
     *
     * <code>optional int32 play_terms_of_service_text_length = 1;</code>
     */
    private void clearPlayTermsOfServiceTextLength() {
      bitField0_ = (bitField0_ & ~0x00000001);
      playTermsOfServiceTextLength_ = 0;
    }

    public static final int PLAY_TERMS_OF_SERVICE_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString playTermsOfServiceHash_;
    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     * @return Whether the playTermsOfServiceHash field is set.
     */
    @java.lang.Override
    public boolean hasPlayTermsOfServiceHash() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     * @return The playTermsOfServiceHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPlayTermsOfServiceHash() {
      return playTermsOfServiceHash_;
    }
    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     * @param value The playTermsOfServiceHash to set.
     */
    private void setPlayTermsOfServiceHash(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      playTermsOfServiceHash_ = value;
    }
    /**
     * <pre>
     * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
     * displayed to the user.
     * </pre>
     *
     * <code>optional bytes play_terms_of_service_hash = 2;</code>
     */
    private void clearPlayTermsOfServiceHash() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playTermsOfServiceHash_ = getDefaultInstance().getPlayTermsOfServiceHash();
    }

    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * GRD Ids of the strings on the consent UI that was shown to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 5;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 3;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000004;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked when consenting.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 3;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * The status of the Play Terms of Service consent. This specifies whether
     * the consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000008);
      status_ = 0;
    }

    public static final int CONSENT_FLOW_FIELD_NUMBER = 6;
    private int consentFlow_;
    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     * @return Whether the consentFlow field is set.
     */
    @java.lang.Override
    public boolean hasConsentFlow() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     * @return The consentFlow.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow getConsentFlow() {
      org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow result = org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow.forNumber(consentFlow_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow.SETUP : result;
    }
    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     * @param value The consentFlow to set.
     */
    private void setConsentFlow(org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow value) {
      consentFlow_ = value.getNumber();
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * The user flow during which the consent was recorded. This is necessary in
     * order to create the correct UI context and Event for the backend.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
     */
    private void clearConsentFlow() {
      bitField0_ = (bitField0_ & ~0x00000010);
      consentFlow_ = 1;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The user consent for the Play terms of service is determined by the user
     * action on the ARC setup dialog that presents the Play Terms of Service.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The length of the UTF-8 encoded string of the Play Terms of Service
       * text. The length is given in number of bytes.
       * </pre>
       *
       * <code>optional int32 play_terms_of_service_text_length = 1;</code>
       * @return Whether the playTermsOfServiceTextLength field is set.
       */
      @java.lang.Override
      public boolean hasPlayTermsOfServiceTextLength() {
        return instance.hasPlayTermsOfServiceTextLength();
      }
      /**
       * <pre>
       * The length of the UTF-8 encoded string of the Play Terms of Service
       * text. The length is given in number of bytes.
       * </pre>
       *
       * <code>optional int32 play_terms_of_service_text_length = 1;</code>
       * @return The playTermsOfServiceTextLength.
       */
      @java.lang.Override
      public int getPlayTermsOfServiceTextLength() {
        return instance.getPlayTermsOfServiceTextLength();
      }
      /**
       * <pre>
       * The length of the UTF-8 encoded string of the Play Terms of Service
       * text. The length is given in number of bytes.
       * </pre>
       *
       * <code>optional int32 play_terms_of_service_text_length = 1;</code>
       * @param value The playTermsOfServiceTextLength to set.
       * @return This builder for chaining.
       */
      public Builder setPlayTermsOfServiceTextLength(int value) {
        copyOnWrite();
        instance.setPlayTermsOfServiceTextLength(value);
        return this;
      }
      /**
       * <pre>
       * The length of the UTF-8 encoded string of the Play Terms of Service
       * text. The length is given in number of bytes.
       * </pre>
       *
       * <code>optional int32 play_terms_of_service_text_length = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayTermsOfServiceTextLength() {
        copyOnWrite();
        instance.clearPlayTermsOfServiceTextLength();
        return this;
      }

      /**
       * <pre>
       * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
       * displayed to the user.
       * </pre>
       *
       * <code>optional bytes play_terms_of_service_hash = 2;</code>
       * @return Whether the playTermsOfServiceHash field is set.
       */
      @java.lang.Override
      public boolean hasPlayTermsOfServiceHash() {
        return instance.hasPlayTermsOfServiceHash();
      }
      /**
       * <pre>
       * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
       * displayed to the user.
       * </pre>
       *
       * <code>optional bytes play_terms_of_service_hash = 2;</code>
       * @return The playTermsOfServiceHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPlayTermsOfServiceHash() {
        return instance.getPlayTermsOfServiceHash();
      }
      /**
       * <pre>
       * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
       * displayed to the user.
       * </pre>
       *
       * <code>optional bytes play_terms_of_service_hash = 2;</code>
       * @param value The playTermsOfServiceHash to set.
       * @return This builder for chaining.
       */
      public Builder setPlayTermsOfServiceHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPlayTermsOfServiceHash(value);
        return this;
      }
      /**
       * <pre>
       * The SHA1 hash of UTF-8 encoded string of the Play Terms of Service
       * displayed to the user.
       * </pre>
       *
       * <code>optional bytes play_terms_of_service_hash = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayTermsOfServiceHash() {
        copyOnWrite();
        instance.clearPlayTermsOfServiceHash();
        return this;
      }

      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * GRD Ids of the strings on the consent UI that was shown to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 3;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 3;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 3;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked when consenting.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <pre>
       * The status of the Play Terms of Service consent. This specifies whether
       * the consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       * The status of the Play Terms of Service consent. This specifies whether
       * the consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * The status of the Play Terms of Service consent. This specifies whether
       * the consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * The status of the Play Terms of Service consent. This specifies whether
       * the consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <pre>
       * The user flow during which the consent was recorded. This is necessary in
       * order to create the correct UI context and Event for the backend.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
       * @return Whether the consentFlow field is set.
       */
      @java.lang.Override
      public boolean hasConsentFlow() {
        return instance.hasConsentFlow();
      }
      /**
       * <pre>
       * The user flow during which the consent was recorded. This is necessary in
       * order to create the correct UI context and Event for the backend.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
       * @return The consentFlow.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow getConsentFlow() {
        return instance.getConsentFlow();
      }
      /**
       * <pre>
       * The user flow during which the consent was recorded. This is necessary in
       * order to create the correct UI context and Event for the backend.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
       * @param value The enum numeric value on the wire for consentFlow to set.
       * @return This builder for chaining.
       */
      public Builder setConsentFlow(org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow value) {
        copyOnWrite();
        instance.setConsentFlow(value);
        return this;
      }
      /**
       * <pre>
       * The user flow during which the consent was recorded. This is necessary in
       * order to create the correct UI context and Event for the backend.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow consent_flow = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearConsentFlow() {
        copyOnWrite();
        instance.clearConsentFlow();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "playTermsOfServiceTextLength_",
              "playTermsOfServiceHash_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
              "descriptionGrdIds_",
              "consentFlow_",
              org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.ConsentFlow.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0001\u0000\u0001\u1004\u0000\u0002" +
                "\u100a\u0001\u0003\u1004\u0002\u0004\u100c\u0003\u0005\u0016\u0006\u100c\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent DEFAULT_INSTANCE;
    static {
      ArcPlayTermsOfServiceConsent defaultInstance = new ArcPlayTermsOfServiceConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ArcPlayTermsOfServiceConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.ArcPlayTermsOfServiceConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ArcPlayTermsOfServiceConsent> PARSER;

    public static com.google.protobuf.Parser<ArcPlayTermsOfServiceConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SyncConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.SyncConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The User Consent for Chrome Sync is determined by the user action on the
   * corresponding Sync Consent dialog.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.SyncConsent}
   */
  public  static final class SyncConsent extends
      com.google.protobuf.GeneratedMessageLite<
          SyncConsent, SyncConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.SyncConsent)
      SyncConsentOrBuilder {
    private SyncConsent() {
      descriptionGrdIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * Ids of the strings of the sync consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 2;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000001;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the sync consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The status of the sync consent. This specifies whether the consent was
     * given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The User Consent for Chrome Sync is determined by the user action on the
     * corresponding Sync Consent dialog.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.SyncConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.SyncConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.SyncConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the sync consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the sync consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the sync consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the sync consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the sync consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <pre>
       * The status of the sync consent. This specifies whether the consent was
       * given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       * The status of the sync consent. This specifies whether the consent was
       * given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * The status of the sync consent. This specifies whether the consent was
       * given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * The status of the sync consent. This specifies whether the consent was
       * given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.SyncConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "descriptionGrdIds_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0016\u0002\u1004" +
                "\u0000\u0003\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.SyncConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent DEFAULT_INSTANCE;
    static {
      SyncConsent defaultInstance = new SyncConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SyncConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.SyncConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SyncConsent> PARSER;

    public static com.google.protobuf.Parser<SyncConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnifiedConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.UnifiedConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The unified User Consent for Chrome is determined by the user action on the
   * corresponding Chrome Consent dialog.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.UnifiedConsent}
   */
  public  static final class UnifiedConsent extends
      com.google.protobuf.GeneratedMessageLite<
          UnifiedConsent, UnifiedConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.UnifiedConsent)
      UnifiedConsentOrBuilder {
    private UnifiedConsent() {
      descriptionGrdIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * Ids of the strings of the unified Chrome consent text presented to the
     * user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 2;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000001;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * and close the unified Chrome consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The status of the unified Chrome consent. This specifies whether the
     * consent was given or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The unified User Consent for Chrome is determined by the user action on the
     * corresponding Chrome Consent dialog.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.UnifiedConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.UnifiedConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the unified Chrome consent text presented to the
       * user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the unified Chrome consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the unified Chrome consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the unified Chrome consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * and close the unified Chrome consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <pre>
       * The status of the unified Chrome consent. This specifies whether the
       * consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       * The status of the unified Chrome consent. This specifies whether the
       * consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * The status of the unified Chrome consent. This specifies whether the
       * consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * The status of the unified Chrome consent. This specifies whether the
       * consent was given or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.UnifiedConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "descriptionGrdIds_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0016\u0002\u1004" +
                "\u0000\u0003\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.UnifiedConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent DEFAULT_INSTANCE;
    static {
      UnifiedConsent defaultInstance = new UnifiedConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UnifiedConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.UnifiedConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UnifiedConsent> PARSER;

    public static com.google.protobuf.Parser<UnifiedConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AssistantActivityControlConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.AssistantActivityControlConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     * @return Whether the uiAuditKey field is set.
     */
    boolean hasUiAuditKey();
    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     * @return The uiAuditKey.
     */
    com.google.protobuf.ByteString getUiAuditKey();

    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The User Consent for Assistant activity control is determined by the user
   * action on the Assistant opt-in flow.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.AssistantActivityControlConsent}
   */
  public  static final class AssistantActivityControlConsent extends
      com.google.protobuf.GeneratedMessageLite<
          AssistantActivityControlConsent, AssistantActivityControlConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.AssistantActivityControlConsent)
      AssistantActivityControlConsentOrBuilder {
    private AssistantActivityControlConsent() {
      uiAuditKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int UI_AUDIT_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString uiAuditKey_;
    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     * @return Whether the uiAuditKey field is set.
     */
    @java.lang.Override
    public boolean hasUiAuditKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     * @return The uiAuditKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getUiAuditKey() {
      return uiAuditKey_;
    }
    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     * @param value The uiAuditKey to set.
     */
    private void setUiAuditKey(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      uiAuditKey_ = value;
    }
    /**
     * <pre>
     * An opaque token to for ui auditing, which strengthens the audit trail.
     * </pre>
     *
     * <code>optional bytes ui_audit_key = 1;</code>
     */
    private void clearUiAuditKey() {
      bitField0_ = (bitField0_ & ~0x00000001);
      uiAuditKey_ = getDefaultInstance().getUiAuditKey();
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The status of the Assistant activity control consent. This specifies
     * whether the consent was given or not given.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The User Consent for Assistant activity control is determined by the user
     * action on the Assistant opt-in flow.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.AssistantActivityControlConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.AssistantActivityControlConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * An opaque token to for ui auditing, which strengthens the audit trail.
       * </pre>
       *
       * <code>optional bytes ui_audit_key = 1;</code>
       * @return Whether the uiAuditKey field is set.
       */
      @java.lang.Override
      public boolean hasUiAuditKey() {
        return instance.hasUiAuditKey();
      }
      /**
       * <pre>
       * An opaque token to for ui auditing, which strengthens the audit trail.
       * </pre>
       *
       * <code>optional bytes ui_audit_key = 1;</code>
       * @return The uiAuditKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getUiAuditKey() {
        return instance.getUiAuditKey();
      }
      /**
       * <pre>
       * An opaque token to for ui auditing, which strengthens the audit trail.
       * </pre>
       *
       * <code>optional bytes ui_audit_key = 1;</code>
       * @param value The uiAuditKey to set.
       * @return This builder for chaining.
       */
      public Builder setUiAuditKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUiAuditKey(value);
        return this;
      }
      /**
       * <pre>
       * An opaque token to for ui auditing, which strengthens the audit trail.
       * </pre>
       *
       * <code>optional bytes ui_audit_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUiAuditKey() {
        copyOnWrite();
        instance.clearUiAuditKey();
        return this;
      }

      /**
       * <pre>
       * The status of the Assistant activity control consent. This specifies
       * whether the consent was given or not given.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       * The status of the Assistant activity control consent. This specifies
       * whether the consent was given or not given.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * The status of the Assistant activity control consent. This specifies
       * whether the consent was given or not given.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * The status of the Assistant activity control consent. This specifies
       * whether the consent was given or not given.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.AssistantActivityControlConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "uiAuditKey_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u100a\u0000\u0002" +
                "\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.AssistantActivityControlConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent DEFAULT_INSTANCE;
    static {
      AssistantActivityControlConsent defaultInstance = new AssistantActivityControlConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AssistantActivityControlConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.AssistantActivityControlConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AssistantActivityControlConsent> PARSER;

    public static com.google.protobuf.Parser<AssistantActivityControlConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AccountPasswordsConsentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.UserConsentTypes.AccountPasswordsConsent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    java.util.List<java.lang.Integer> getDescriptionGrdIdsList();
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    int getDescriptionGrdIdsCount();
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    int getDescriptionGrdIds(int index);

    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    boolean hasConfirmationGrdId();
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    int getConfirmationGrdId();

    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus();
  }
  /**
   * <pre>
   * The User Consent for downloading and using passwords stored in the user's
   * Google Account. Determined during the opt-in flow for the feature.
   * </pre>
   *
   * Protobuf type {@code sync_pb.UserConsentTypes.AccountPasswordsConsent}
   */
  public  static final class AccountPasswordsConsent extends
      com.google.protobuf.GeneratedMessageLite<
          AccountPasswordsConsent, AccountPasswordsConsent.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.UserConsentTypes.AccountPasswordsConsent)
      AccountPasswordsConsentOrBuilder {
    private AccountPasswordsConsent() {
      descriptionGrdIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int DESCRIPTION_GRD_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList descriptionGrdIds_;
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return A list containing the descriptionGrdIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDescriptionGrdIdsList() {
      return descriptionGrdIds_;
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @return The count of descriptionGrdIds.
     */
    @java.lang.Override
    public int getDescriptionGrdIdsCount() {
      return descriptionGrdIds_.size();
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The descriptionGrdIds at the given index.
     */
    @java.lang.Override
    public int getDescriptionGrdIds(int index) {
      return descriptionGrdIds_.getInt(index);
    }
    private void ensureDescriptionGrdIdsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = descriptionGrdIds_;
      if (!tmp.isModifiable()) {
        descriptionGrdIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The descriptionGrdIds to set.
     */
    private void setDescriptionGrdIds(
        int index, int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param value The descriptionGrdIds to add.
     */
    private void addDescriptionGrdIds(int value) {
      ensureDescriptionGrdIdsIsMutable();
      descriptionGrdIds_.addInt(value);
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     * @param values The descriptionGrdIds to add.
     */
    private void addAllDescriptionGrdIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDescriptionGrdIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, descriptionGrdIds_);
    }
    /**
     * <pre>
     * Ids of the strings of the consent text presented to the user.
     * </pre>
     *
     * <code>repeated int32 description_grd_ids = 1;</code>
     */
    private void clearDescriptionGrdIds() {
      descriptionGrdIds_ = emptyIntList();
    }

    public static final int CONFIRMATION_GRD_ID_FIELD_NUMBER = 2;
    private int confirmationGrdId_;
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return Whether the confirmationGrdId field is set.
     */
    @java.lang.Override
    public boolean hasConfirmationGrdId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @return The confirmationGrdId.
     */
    @java.lang.Override
    public int getConfirmationGrdId() {
      return confirmationGrdId_;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     * @param value The confirmationGrdId to set.
     */
    private void setConfirmationGrdId(int value) {
      bitField0_ |= 0x00000001;
      confirmationGrdId_ = value;
    }
    /**
     * <pre>
     * Id of the string of the UI element the user clicked in order to confirm
     * the consent dialog.
     * </pre>
     *
     * <code>optional int32 confirmation_grd_id = 2;</code>
     */
    private void clearConfirmationGrdId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      confirmationGrdId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
      org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus result = org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.CONSENT_STATUS_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The status of the consent. This specifies whether the consent was given
     * or not given/revoked.
     * </pre>
     *
     * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * The User Consent for downloading and using passwords stored in the user's
     * Google Account. Determined during the opt-in flow for the feature.
     * </pre>
     *
     * Protobuf type {@code sync_pb.UserConsentTypes.AccountPasswordsConsent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes.AccountPasswordsConsent)
        org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsentOrBuilder {
      // Construct using org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return A list containing the descriptionGrdIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDescriptionGrdIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getDescriptionGrdIdsList());
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return The count of descriptionGrdIds.
       */
      @java.lang.Override
      public int getDescriptionGrdIdsCount() {
        return instance.getDescriptionGrdIdsCount();
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The descriptionGrdIds at the given index.
       */
      @java.lang.Override
      public int getDescriptionGrdIds(int index) {
        return instance.getDescriptionGrdIds(index);
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionGrdIds(
          int index, int value) {
        copyOnWrite();
        instance.setDescriptionGrdIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param value The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addDescriptionGrdIds(int value) {
        copyOnWrite();
        instance.addDescriptionGrdIds(value);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @param values The descriptionGrdIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllDescriptionGrdIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDescriptionGrdIds(values);
        return this;
      }
      /**
       * <pre>
       * Ids of the strings of the consent text presented to the user.
       * </pre>
       *
       * <code>repeated int32 description_grd_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescriptionGrdIds() {
        copyOnWrite();
        instance.clearDescriptionGrdIds();
        return this;
      }

      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * the consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return Whether the confirmationGrdId field is set.
       */
      @java.lang.Override
      public boolean hasConfirmationGrdId() {
        return instance.hasConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * the consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return The confirmationGrdId.
       */
      @java.lang.Override
      public int getConfirmationGrdId() {
        return instance.getConfirmationGrdId();
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * the consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @param value The confirmationGrdId to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationGrdId(int value) {
        copyOnWrite();
        instance.setConfirmationGrdId(value);
        return this;
      }
      /**
       * <pre>
       * Id of the string of the UI element the user clicked in order to confirm
       * the consent dialog.
       * </pre>
       *
       * <code>optional int32 confirmation_grd_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationGrdId() {
        copyOnWrite();
        instance.clearConfirmationGrdId();
        return this;
      }

      /**
       * <pre>
       * The status of the consent. This specifies whether the consent was given
       * or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       * The status of the consent. This specifies whether the consent was given
       * or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * The status of the consent. This specifies whether the consent was given
       * or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * The status of the consent. This specifies whether the consent was given
       * or not given/revoked.
       * </pre>
       *
       * <code>optional .sync_pb.UserConsentTypes.ConsentStatus status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes.AccountPasswordsConsent)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "descriptionGrdIds_",
              "confirmationGrdId_",
              "status_",
              org.chromium.components.sync.protocol.UserConsentTypes.ConsentStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0016\u0002\u1004" +
                "\u0000\u0003\u100c\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes.AccountPasswordsConsent)
    private static final org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent DEFAULT_INSTANCE;
    static {
      AccountPasswordsConsent defaultInstance = new AccountPasswordsConsent();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AccountPasswordsConsent.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.UserConsentTypes.AccountPasswordsConsent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AccountPasswordsConsent> PARSER;

    public static com.google.protobuf.Parser<AccountPasswordsConsent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.UserConsentTypes parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.UserConsentTypes prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.UserConsentTypes}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.UserConsentTypes, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.UserConsentTypes)
      org.chromium.components.sync.protocol.UserConsentTypesOrBuilder {
    // Construct using org.chromium.components.sync.protocol.UserConsentTypes.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    // @@protoc_insertion_point(builder_scope:sync_pb.UserConsentTypes)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.UserConsentTypes();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = null;java.lang.String info =
              "\u0001\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.UserConsentTypes> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.UserConsentTypes.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.UserConsentTypes>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.UserConsentTypes)
  private static final org.chromium.components.sync.protocol.UserConsentTypes DEFAULT_INSTANCE;
  static {
    UserConsentTypes defaultInstance = new UserConsentTypes();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      UserConsentTypes.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.UserConsentTypes getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UserConsentTypes> PARSER;

  public static com.google.protobuf.Parser<UserConsentTypes> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

