// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/favicon_image_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Image data for favicons. Multiple resolutions are supported.
 * </pre>
 *
 * Protobuf type {@code sync_pb.FaviconImageSpecifics}
 */
public  final class FaviconImageSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        FaviconImageSpecifics, FaviconImageSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.FaviconImageSpecifics)
    FaviconImageSpecificsOrBuilder {
  private FaviconImageSpecifics() {
    faviconUrl_ = "";
  }
  private int bitField0_;
  public static final int FAVICON_URL_FIELD_NUMBER = 1;
  private java.lang.String faviconUrl_;
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   * @return Whether the faviconUrl field is set.
   */
  @java.lang.Override
  public boolean hasFaviconUrl() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   * @return The faviconUrl.
   */
  @java.lang.Override
  public java.lang.String getFaviconUrl() {
    return faviconUrl_;
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   * @return The bytes for faviconUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFaviconUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(faviconUrl_);
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   * @param value The faviconUrl to set.
   */
  private void setFaviconUrl(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    faviconUrl_ = value;
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  private void clearFaviconUrl() {
    bitField0_ = (bitField0_ & ~0x00000001);
    faviconUrl_ = getDefaultInstance().getFaviconUrl();
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   * @param value The bytes for faviconUrl to set.
   */
  private void setFaviconUrlBytes(
      com.google.protobuf.ByteString value) {
    faviconUrl_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int FAVICON_WEB_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.FaviconData faviconWeb_;
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  @java.lang.Override
  public boolean hasFaviconWeb() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.FaviconData getFaviconWeb() {
    return faviconWeb_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconWeb_;
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void setFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  faviconWeb_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  if (faviconWeb_ != null &&
        faviconWeb_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconWeb_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconWeb_).mergeFrom(value).buildPartial();
    } else {
      faviconWeb_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void clearFaviconWeb() {  faviconWeb_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int FAVICON_WEB_32_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.FaviconData faviconWeb32_;
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  @java.lang.Override
  public boolean hasFaviconWeb32() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.FaviconData getFaviconWeb32() {
    return faviconWeb32_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconWeb32_;
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void setFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  faviconWeb32_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  if (faviconWeb32_ != null &&
        faviconWeb32_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconWeb32_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconWeb32_).mergeFrom(value).buildPartial();
    } else {
      faviconWeb32_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void clearFaviconWeb32() {  faviconWeb32_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int FAVICON_TOUCH_64_FIELD_NUMBER = 4;
  private org.chromium.components.sync.protocol.FaviconData faviconTouch64_;
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  @java.lang.Override
  public boolean hasFaviconTouch64() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.FaviconData getFaviconTouch64() {
    return faviconTouch64_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconTouch64_;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void setFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  faviconTouch64_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  if (faviconTouch64_ != null &&
        faviconTouch64_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconTouch64_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconTouch64_).mergeFrom(value).buildPartial();
    } else {
      faviconTouch64_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void clearFaviconTouch64() {  faviconTouch64_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int FAVICON_TOUCH_PRECOMPOSED_64_FIELD_NUMBER = 5;
  private org.chromium.components.sync.protocol.FaviconData faviconTouchPrecomposed64_;
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  @java.lang.Override
  public boolean hasFaviconTouchPrecomposed64() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.FaviconData getFaviconTouchPrecomposed64() {
    return faviconTouchPrecomposed64_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconTouchPrecomposed64_;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void setFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  faviconTouchPrecomposed64_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
    value.getClass();
  if (faviconTouchPrecomposed64_ != null &&
        faviconTouchPrecomposed64_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconTouchPrecomposed64_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconTouchPrecomposed64_).mergeFrom(value).buildPartial();
    } else {
      faviconTouchPrecomposed64_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void clearFaviconTouchPrecomposed64() {  faviconTouchPrecomposed64_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.FaviconImageSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Image data for favicons. Multiple resolutions are supported.
   * </pre>
   *
   * Protobuf type {@code sync_pb.FaviconImageSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.FaviconImageSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.FaviconImageSpecifics)
      org.chromium.components.sync.protocol.FaviconImageSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.FaviconImageSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @return Whether the faviconUrl field is set.
     */
    @java.lang.Override
    public boolean hasFaviconUrl() {
      return instance.hasFaviconUrl();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @return The faviconUrl.
     */
    @java.lang.Override
    public java.lang.String getFaviconUrl() {
      return instance.getFaviconUrl();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @return The bytes for faviconUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFaviconUrlBytes() {
      return instance.getFaviconUrlBytes();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @param value The faviconUrl to set.
     * @return This builder for chaining.
     */
    public Builder setFaviconUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setFaviconUrl(value);
      return this;
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFaviconUrl() {
      copyOnWrite();
      instance.clearFaviconUrl();
      return this;
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     * @param value The bytes for faviconUrl to set.
     * @return This builder for chaining.
     */
    public Builder setFaviconUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFaviconUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    @java.lang.Override
    public boolean hasFaviconWeb() {
      return instance.hasFaviconWeb();
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.FaviconData getFaviconWeb() {
      return instance.getFaviconWeb();
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder setFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconWeb(value);
      return this;
      }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder setFaviconWeb(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconWeb(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder mergeFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconWeb(value);
      return this;
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder clearFaviconWeb() {  copyOnWrite();
      instance.clearFaviconWeb();
      return this;
    }

    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    @java.lang.Override
    public boolean hasFaviconWeb32() {
      return instance.hasFaviconWeb32();
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.FaviconData getFaviconWeb32() {
      return instance.getFaviconWeb32();
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder setFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconWeb32(value);
      return this;
      }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder setFaviconWeb32(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconWeb32(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder mergeFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconWeb32(value);
      return this;
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder clearFaviconWeb32() {  copyOnWrite();
      instance.clearFaviconWeb32();
      return this;
    }

    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    @java.lang.Override
    public boolean hasFaviconTouch64() {
      return instance.hasFaviconTouch64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.FaviconData getFaviconTouch64() {
      return instance.getFaviconTouch64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder setFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconTouch64(value);
      return this;
      }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder setFaviconTouch64(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconTouch64(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder mergeFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconTouch64(value);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder clearFaviconTouch64() {  copyOnWrite();
      instance.clearFaviconTouch64();
      return this;
    }

    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    @java.lang.Override
    public boolean hasFaviconTouchPrecomposed64() {
      return instance.hasFaviconTouchPrecomposed64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.FaviconData getFaviconTouchPrecomposed64() {
      return instance.getFaviconTouchPrecomposed64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder setFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconTouchPrecomposed64(value);
      return this;
      }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder setFaviconTouchPrecomposed64(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconTouchPrecomposed64(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder mergeFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconTouchPrecomposed64(value);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder clearFaviconTouchPrecomposed64() {  copyOnWrite();
      instance.clearFaviconTouchPrecomposed64();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.FaviconImageSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.FaviconImageSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "faviconUrl_",
            "faviconWeb_",
            "faviconWeb32_",
            "faviconTouch64_",
            "faviconTouchPrecomposed64_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1009\u0001\u0003\u1009\u0002\u0004\u1009\u0003\u0005\u1009\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.FaviconImageSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.FaviconImageSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.FaviconImageSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.FaviconImageSpecifics)
  private static final org.chromium.components.sync.protocol.FaviconImageSpecifics DEFAULT_INSTANCE;
  static {
    FaviconImageSpecifics defaultInstance = new FaviconImageSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      FaviconImageSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.FaviconImageSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FaviconImageSpecifics> PARSER;

  public static com.google.protobuf.Parser<FaviconImageSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

