// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/device_info_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Information about a device that is running a sync-enabled Chrome browser.  We
 * are mapping the per-client cache guid to more specific information about the
 * device.
 * </pre>
 *
 * Protobuf type {@code sync_pb.DeviceInfoSpecifics}
 */
public  final class DeviceInfoSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        DeviceInfoSpecifics, DeviceInfoSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.DeviceInfoSpecifics)
    DeviceInfoSpecificsOrBuilder {
  private DeviceInfoSpecifics() {
    cacheGuid_ = "";
    clientName_ = "";
    syncUserAgent_ = "";
    chromeVersion_ = "";
    signinScopedDeviceId_ = "";
    model_ = "";
    manufacturer_ = "";
  }
  private int bitField0_;
  public static final int CACHE_GUID_FIELD_NUMBER = 1;
  private java.lang.String cacheGuid_;
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   * @return Whether the cacheGuid field is set.
   */
  @java.lang.Override
  public boolean hasCacheGuid() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   * @return The cacheGuid.
   */
  @java.lang.Override
  public java.lang.String getCacheGuid() {
    return cacheGuid_;
  }
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   * @return The bytes for cacheGuid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCacheGuidBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(cacheGuid_);
  }
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   * @param value The cacheGuid to set.
   */
  private void setCacheGuid(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    cacheGuid_ = value;
  }
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   */
  private void clearCacheGuid() {
    bitField0_ = (bitField0_ & ~0x00000001);
    cacheGuid_ = getDefaultInstance().getCacheGuid();
  }
  /**
   * <pre>
   * The cache_guid created to identify a sync client on this device.
   * </pre>
   *
   * <code>optional string cache_guid = 1;</code>
   * @param value The bytes for cacheGuid to set.
   */
  private void setCacheGuidBytes(
      com.google.protobuf.ByteString value) {
    cacheGuid_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int CLIENT_NAME_FIELD_NUMBER = 2;
  private java.lang.String clientName_;
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   * @return Whether the clientName field is set.
   */
  @java.lang.Override
  public boolean hasClientName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   * @return The clientName.
   */
  @java.lang.Override
  public java.lang.String getClientName() {
    return clientName_;
  }
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   * @return The bytes for clientName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientName_);
  }
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   * @param value The clientName to set.
   */
  private void setClientName(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    clientName_ = value;
  }
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   */
  private void clearClientName() {
    bitField0_ = (bitField0_ & ~0x00000002);
    clientName_ = getDefaultInstance().getClientName();
  }
  /**
   * <pre>
   * A non-unique but human readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 2;</code>
   * @param value The bytes for clientName to set.
   */
  private void setClientNameBytes(
      com.google.protobuf.ByteString value) {
    clientName_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int DEVICE_TYPE_FIELD_NUMBER = 3;
  private int deviceType_;
  /**
   * <pre>
   * The platform of the device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
   * @return Whether the deviceType field is set.
   */
  @java.lang.Override
  public boolean hasDeviceType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The platform of the device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
   * @return The deviceType.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
    org.chromium.components.sync.protocol.SyncEnums.DeviceType result = org.chromium.components.sync.protocol.SyncEnums.DeviceType.forNumber(deviceType_);
    return result == null ? org.chromium.components.sync.protocol.SyncEnums.DeviceType.TYPE_UNSET : result;
  }
  /**
   * <pre>
   * The platform of the device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
   * @param value The deviceType to set.
   */
  private void setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
    deviceType_ = value.getNumber();
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * The platform of the device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
   */
  private void clearDeviceType() {
    bitField0_ = (bitField0_ & ~0x00000004);
    deviceType_ = 0;
  }

  public static final int SYNC_USER_AGENT_FIELD_NUMBER = 4;
  private java.lang.String syncUserAgent_;
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   * @return Whether the syncUserAgent field is set.
   */
  @java.lang.Override
  public boolean hasSyncUserAgent() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   * @return The syncUserAgent.
   */
  @java.lang.Override
  public java.lang.String getSyncUserAgent() {
    return syncUserAgent_;
  }
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   * @return The bytes for syncUserAgent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSyncUserAgentBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(syncUserAgent_);
  }
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   * @param value The syncUserAgent to set.
   */
  private void setSyncUserAgent(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000008;
    syncUserAgent_ = value;
  }
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   */
  private void clearSyncUserAgent() {
    bitField0_ = (bitField0_ & ~0x00000008);
    syncUserAgent_ = getDefaultInstance().getSyncUserAgent();
  }
  /**
   * <pre>
   * The UserAgent used when contacting the Chrome Sync server.
   * </pre>
   *
   * <code>optional string sync_user_agent = 4;</code>
   * @param value The bytes for syncUserAgent to set.
   */
  private void setSyncUserAgentBytes(
      com.google.protobuf.ByteString value) {
    syncUserAgent_ = value.toStringUtf8();
    bitField0_ |= 0x00000008;
  }

  public static final int CHROME_VERSION_FIELD_NUMBER = 5;
  private java.lang.String chromeVersion_;
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   * @return Whether the chromeVersion field is set.
   */
  @java.lang.Override
  public boolean hasChromeVersion() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   * @return The chromeVersion.
   */
  @java.lang.Override
  public java.lang.String getChromeVersion() {
    return chromeVersion_;
  }
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   * @return The bytes for chromeVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getChromeVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(chromeVersion_);
  }
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   * @param value The chromeVersion to set.
   */
  private void setChromeVersion(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    chromeVersion_ = value;
  }
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   */
  private void clearChromeVersion() {
    bitField0_ = (bitField0_ & ~0x00000010);
    chromeVersion_ = getDefaultInstance().getChromeVersion();
  }
  /**
   * <pre>
   * The Chrome instance's version.  Updated (if necessary) on every startup.
   * </pre>
   *
   * <code>optional string chrome_version = 5;</code>
   * @param value The bytes for chromeVersion to set.
   */
  private void setChromeVersionBytes(
      com.google.protobuf.ByteString value) {
    chromeVersion_ = value.toStringUtf8();
    bitField0_ |= 0x00000010;
  }

  public static final int DEPRECATED_BACKUP_TIMESTAMP_FIELD_NUMBER = 6;
  private long deprecatedBackupTimestamp_;
  /**
   * <pre>
   * Last time when pre-sync data on the device was saved. The device can be
   * restored to state back to this time. In millisecond since UNIX epoch.
   * DEPRECATED in M50.
   * </pre>
   *
   * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
   * @return Whether the deprecatedBackupTimestamp field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasDeprecatedBackupTimestamp() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Last time when pre-sync data on the device was saved. The device can be
   * restored to state back to this time. In millisecond since UNIX epoch.
   * DEPRECATED in M50.
   * </pre>
   *
   * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
   * @return The deprecatedBackupTimestamp.
   */
  @java.lang.Override
  @java.lang.Deprecated public long getDeprecatedBackupTimestamp() {
    return deprecatedBackupTimestamp_;
  }
  /**
   * <pre>
   * Last time when pre-sync data on the device was saved. The device can be
   * restored to state back to this time. In millisecond since UNIX epoch.
   * DEPRECATED in M50.
   * </pre>
   *
   * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
   * @param value The deprecatedBackupTimestamp to set.
   */
  private void setDeprecatedBackupTimestamp(long value) {
    bitField0_ |= 0x00000020;
    deprecatedBackupTimestamp_ = value;
  }
  /**
   * <pre>
   * Last time when pre-sync data on the device was saved. The device can be
   * restored to state back to this time. In millisecond since UNIX epoch.
   * DEPRECATED in M50.
   * </pre>
   *
   * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
   */
  private void clearDeprecatedBackupTimestamp() {
    bitField0_ = (bitField0_ & ~0x00000020);
    deprecatedBackupTimestamp_ = 0L;
  }

  public static final int SIGNIN_SCOPED_DEVICE_ID_FIELD_NUMBER = 7;
  private java.lang.String signinScopedDeviceId_;
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   * @return Whether the signinScopedDeviceId field is set.
   */
  @java.lang.Override
  public boolean hasSigninScopedDeviceId() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   * @return The signinScopedDeviceId.
   */
  @java.lang.Override
  public java.lang.String getSigninScopedDeviceId() {
    return signinScopedDeviceId_;
  }
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   * @return The bytes for signinScopedDeviceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSigninScopedDeviceIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(signinScopedDeviceId_);
  }
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   * @param value The signinScopedDeviceId to set.
   */
  private void setSigninScopedDeviceId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000040;
    signinScopedDeviceId_ = value;
  }
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   */
  private void clearSigninScopedDeviceId() {
    bitField0_ = (bitField0_ & ~0x00000040);
    signinScopedDeviceId_ = getDefaultInstance().getSigninScopedDeviceId();
  }
  /**
   * <pre>
   * Device_id that is stable until user signs out. This device_id is used for
   * annotating login scoped refresh token.
   * </pre>
   *
   * <code>optional string signin_scoped_device_id = 7;</code>
   * @param value The bytes for signinScopedDeviceId to set.
   */
  private void setSigninScopedDeviceIdBytes(
      com.google.protobuf.ByteString value) {
    signinScopedDeviceId_ = value.toStringUtf8();
    bitField0_ |= 0x00000040;
  }

  public static final int LAST_UPDATED_TIMESTAMP_FIELD_NUMBER = 8;
  private long lastUpdatedTimestamp_;
  /**
   * <pre>
   * This field is updated to be the current time periodically, and is also set
   * to the current time whenever another field changes. By examining the
   * difference between this field and the current time, it should be possible
   * to reason about the inactivity of any device that was syncing at one time.
   * </pre>
   *
   * <code>optional int64 last_updated_timestamp = 8;</code>
   * @return Whether the lastUpdatedTimestamp field is set.
   */
  @java.lang.Override
  public boolean hasLastUpdatedTimestamp() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * This field is updated to be the current time periodically, and is also set
   * to the current time whenever another field changes. By examining the
   * difference between this field and the current time, it should be possible
   * to reason about the inactivity of any device that was syncing at one time.
   * </pre>
   *
   * <code>optional int64 last_updated_timestamp = 8;</code>
   * @return The lastUpdatedTimestamp.
   */
  @java.lang.Override
  public long getLastUpdatedTimestamp() {
    return lastUpdatedTimestamp_;
  }
  /**
   * <pre>
   * This field is updated to be the current time periodically, and is also set
   * to the current time whenever another field changes. By examining the
   * difference between this field and the current time, it should be possible
   * to reason about the inactivity of any device that was syncing at one time.
   * </pre>
   *
   * <code>optional int64 last_updated_timestamp = 8;</code>
   * @param value The lastUpdatedTimestamp to set.
   */
  private void setLastUpdatedTimestamp(long value) {
    bitField0_ |= 0x00000080;
    lastUpdatedTimestamp_ = value;
  }
  /**
   * <pre>
   * This field is updated to be the current time periodically, and is also set
   * to the current time whenever another field changes. By examining the
   * difference between this field and the current time, it should be possible
   * to reason about the inactivity of any device that was syncing at one time.
   * </pre>
   *
   * <code>optional int64 last_updated_timestamp = 8;</code>
   */
  private void clearLastUpdatedTimestamp() {
    bitField0_ = (bitField0_ & ~0x00000080);
    lastUpdatedTimestamp_ = 0L;
  }

  public static final int FEATURE_FIELDS_FIELD_NUMBER = 9;
  private org.chromium.components.sync.protocol.FeatureSpecificFields featureFields_;
  /**
   * <pre>
   * Device info fields that are specific to a feature. This is information that
   * can not be derived from the other fields in the proto and are not general
   * enough to be used by another feature.
   * </pre>
   *
   * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
   */
  @java.lang.Override
  public boolean hasFeatureFields() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Device info fields that are specific to a feature. This is information that
   * can not be derived from the other fields in the proto and are not general
   * enough to be used by another feature.
   * </pre>
   *
   * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.FeatureSpecificFields getFeatureFields() {
    return featureFields_ == null ? org.chromium.components.sync.protocol.FeatureSpecificFields.getDefaultInstance() : featureFields_;
  }
  /**
   * <pre>
   * Device info fields that are specific to a feature. This is information that
   * can not be derived from the other fields in the proto and are not general
   * enough to be used by another feature.
   * </pre>
   *
   * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
   */
  private void setFeatureFields(org.chromium.components.sync.protocol.FeatureSpecificFields value) {
    value.getClass();
  featureFields_ = value;
    bitField0_ |= 0x00000100;
    }
  /**
   * <pre>
   * Device info fields that are specific to a feature. This is information that
   * can not be derived from the other fields in the proto and are not general
   * enough to be used by another feature.
   * </pre>
   *
   * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFeatureFields(org.chromium.components.sync.protocol.FeatureSpecificFields value) {
    value.getClass();
  if (featureFields_ != null &&
        featureFields_ != org.chromium.components.sync.protocol.FeatureSpecificFields.getDefaultInstance()) {
      featureFields_ =
        org.chromium.components.sync.protocol.FeatureSpecificFields.newBuilder(featureFields_).mergeFrom(value).buildPartial();
    } else {
      featureFields_ = value;
    }
    bitField0_ |= 0x00000100;
  }
  /**
   * <pre>
   * Device info fields that are specific to a feature. This is information that
   * can not be derived from the other fields in the proto and are not general
   * enough to be used by another feature.
   * </pre>
   *
   * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
   */
  private void clearFeatureFields() {  featureFields_ = null;
    bitField0_ = (bitField0_ & ~0x00000100);
  }

  public static final int SHARING_FIELDS_FIELD_NUMBER = 10;
  private org.chromium.components.sync.protocol.SharingSpecificFields sharingFields_;
  /**
   * <pre>
   * Device specific information for Sharing feature.
   * </pre>
   *
   * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
   */
  @java.lang.Override
  public boolean hasSharingFields() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Device specific information for Sharing feature.
   * </pre>
   *
   * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SharingSpecificFields getSharingFields() {
    return sharingFields_ == null ? org.chromium.components.sync.protocol.SharingSpecificFields.getDefaultInstance() : sharingFields_;
  }
  /**
   * <pre>
   * Device specific information for Sharing feature.
   * </pre>
   *
   * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
   */
  private void setSharingFields(org.chromium.components.sync.protocol.SharingSpecificFields value) {
    value.getClass();
  sharingFields_ = value;
    bitField0_ |= 0x00000200;
    }
  /**
   * <pre>
   * Device specific information for Sharing feature.
   * </pre>
   *
   * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeSharingFields(org.chromium.components.sync.protocol.SharingSpecificFields value) {
    value.getClass();
  if (sharingFields_ != null &&
        sharingFields_ != org.chromium.components.sync.protocol.SharingSpecificFields.getDefaultInstance()) {
      sharingFields_ =
        org.chromium.components.sync.protocol.SharingSpecificFields.newBuilder(sharingFields_).mergeFrom(value).buildPartial();
    } else {
      sharingFields_ = value;
    }
    bitField0_ |= 0x00000200;
  }
  /**
   * <pre>
   * Device specific information for Sharing feature.
   * </pre>
   *
   * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
   */
  private void clearSharingFields() {  sharingFields_ = null;
    bitField0_ = (bitField0_ & ~0x00000200);
  }

  public static final int MODEL_FIELD_NUMBER = 11;
  private java.lang.String model_;
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   * @return Whether the model field is set.
   */
  @java.lang.Override
  public boolean hasModel() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   * @return The model.
   */
  @java.lang.Override
  public java.lang.String getModel() {
    return model_;
  }
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   * @return The bytes for model.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(model_);
  }
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   * @param value The model to set.
   */
  private void setModel(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000400;
    model_ = value;
  }
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   */
  private void clearModel() {
    bitField0_ = (bitField0_ & ~0x00000400);
    model_ = getDefaultInstance().getModel();
  }
  /**
   * <pre>
   * Model of device.
   * </pre>
   *
   * <code>optional string model = 11;</code>
   * @param value The bytes for model to set.
   */
  private void setModelBytes(
      com.google.protobuf.ByteString value) {
    model_ = value.toStringUtf8();
    bitField0_ |= 0x00000400;
  }

  public static final int MANUFACTURER_FIELD_NUMBER = 12;
  private java.lang.String manufacturer_;
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   * @return Whether the manufacturer field is set.
   */
  @java.lang.Override
  public boolean hasManufacturer() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   * @return The manufacturer.
   */
  @java.lang.Override
  public java.lang.String getManufacturer() {
    return manufacturer_;
  }
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   * @return The bytes for manufacturer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getManufacturerBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(manufacturer_);
  }
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   * @param value The manufacturer to set.
   */
  private void setManufacturer(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000800;
    manufacturer_ = value;
  }
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   */
  private void clearManufacturer() {
    bitField0_ = (bitField0_ & ~0x00000800);
    manufacturer_ = getDefaultInstance().getManufacturer();
  }
  /**
   * <pre>
   * Name of device manufacturer.
   * </pre>
   *
   * <code>optional string manufacturer = 12;</code>
   * @param value The bytes for manufacturer to set.
   */
  private void setManufacturerBytes(
      com.google.protobuf.ByteString value) {
    manufacturer_ = value.toStringUtf8();
    bitField0_ |= 0x00000800;
  }

  public static final int PULSE_INTERVAL_IN_MINUTES_FIELD_NUMBER = 13;
  private int pulseIntervalInMinutes_;
  /**
   * <pre>
   * The interval in minutes with which |last_updated_timestamp| is updated to
   * the sync servers if online and while sync is actively running (e.g.
   * excludes backgrounded apps on Android). Introduced in M81. The legacy
   * default was 1 day.
   * </pre>
   *
   * <code>optional int32 pulse_interval_in_minutes = 13;</code>
   * @return Whether the pulseIntervalInMinutes field is set.
   */
  @java.lang.Override
  public boolean hasPulseIntervalInMinutes() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * The interval in minutes with which |last_updated_timestamp| is updated to
   * the sync servers if online and while sync is actively running (e.g.
   * excludes backgrounded apps on Android). Introduced in M81. The legacy
   * default was 1 day.
   * </pre>
   *
   * <code>optional int32 pulse_interval_in_minutes = 13;</code>
   * @return The pulseIntervalInMinutes.
   */
  @java.lang.Override
  public int getPulseIntervalInMinutes() {
    return pulseIntervalInMinutes_;
  }
  /**
   * <pre>
   * The interval in minutes with which |last_updated_timestamp| is updated to
   * the sync servers if online and while sync is actively running (e.g.
   * excludes backgrounded apps on Android). Introduced in M81. The legacy
   * default was 1 day.
   * </pre>
   *
   * <code>optional int32 pulse_interval_in_minutes = 13;</code>
   * @param value The pulseIntervalInMinutes to set.
   */
  private void setPulseIntervalInMinutes(int value) {
    bitField0_ |= 0x00001000;
    pulseIntervalInMinutes_ = value;
  }
  /**
   * <pre>
   * The interval in minutes with which |last_updated_timestamp| is updated to
   * the sync servers if online and while sync is actively running (e.g.
   * excludes backgrounded apps on Android). Introduced in M81. The legacy
   * default was 1 day.
   * </pre>
   *
   * <code>optional int32 pulse_interval_in_minutes = 13;</code>
   */
  private void clearPulseIntervalInMinutes() {
    bitField0_ = (bitField0_ & ~0x00001000);
    pulseIntervalInMinutes_ = 0;
  }

  public static final int INVALIDATION_FIELDS_FIELD_NUMBER = 14;
  private org.chromium.components.sync.protocol.InvalidationSpecificFields invalidationFields_;
  /**
   * <pre>
   * Device specific information for Sync invalidations.
   * </pre>
   *
   * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
   */
  @java.lang.Override
  public boolean hasInvalidationFields() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * Device specific information for Sync invalidations.
   * </pre>
   *
   * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.InvalidationSpecificFields getInvalidationFields() {
    return invalidationFields_ == null ? org.chromium.components.sync.protocol.InvalidationSpecificFields.getDefaultInstance() : invalidationFields_;
  }
  /**
   * <pre>
   * Device specific information for Sync invalidations.
   * </pre>
   *
   * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
   */
  private void setInvalidationFields(org.chromium.components.sync.protocol.InvalidationSpecificFields value) {
    value.getClass();
  invalidationFields_ = value;
    bitField0_ |= 0x00002000;
    }
  /**
   * <pre>
   * Device specific information for Sync invalidations.
   * </pre>
   *
   * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeInvalidationFields(org.chromium.components.sync.protocol.InvalidationSpecificFields value) {
    value.getClass();
  if (invalidationFields_ != null &&
        invalidationFields_ != org.chromium.components.sync.protocol.InvalidationSpecificFields.getDefaultInstance()) {
      invalidationFields_ =
        org.chromium.components.sync.protocol.InvalidationSpecificFields.newBuilder(invalidationFields_).mergeFrom(value).buildPartial();
    } else {
      invalidationFields_ = value;
    }
    bitField0_ |= 0x00002000;
  }
  /**
   * <pre>
   * Device specific information for Sync invalidations.
   * </pre>
   *
   * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
   */
  private void clearInvalidationFields() {  invalidationFields_ = null;
    bitField0_ = (bitField0_ & ~0x00002000);
  }

  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.DeviceInfoSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Information about a device that is running a sync-enabled Chrome browser.  We
   * are mapping the per-client cache guid to more specific information about the
   * device.
   * </pre>
   *
   * Protobuf type {@code sync_pb.DeviceInfoSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.DeviceInfoSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.DeviceInfoSpecifics)
      org.chromium.components.sync.protocol.DeviceInfoSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.DeviceInfoSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @return Whether the cacheGuid field is set.
     */
    @java.lang.Override
    public boolean hasCacheGuid() {
      return instance.hasCacheGuid();
    }
    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @return The cacheGuid.
     */
    @java.lang.Override
    public java.lang.String getCacheGuid() {
      return instance.getCacheGuid();
    }
    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @return The bytes for cacheGuid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCacheGuidBytes() {
      return instance.getCacheGuidBytes();
    }
    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @param value The cacheGuid to set.
     * @return This builder for chaining.
     */
    public Builder setCacheGuid(
        java.lang.String value) {
      copyOnWrite();
      instance.setCacheGuid(value);
      return this;
    }
    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheGuid() {
      copyOnWrite();
      instance.clearCacheGuid();
      return this;
    }
    /**
     * <pre>
     * The cache_guid created to identify a sync client on this device.
     * </pre>
     *
     * <code>optional string cache_guid = 1;</code>
     * @param value The bytes for cacheGuid to set.
     * @return This builder for chaining.
     */
    public Builder setCacheGuidBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCacheGuidBytes(value);
      return this;
    }

    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @return Whether the clientName field is set.
     */
    @java.lang.Override
    public boolean hasClientName() {
      return instance.hasClientName();
    }
    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @return The clientName.
     */
    @java.lang.Override
    public java.lang.String getClientName() {
      return instance.getClientName();
    }
    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @return The bytes for clientName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientNameBytes() {
      return instance.getClientNameBytes();
    }
    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @param value The clientName to set.
     * @return This builder for chaining.
     */
    public Builder setClientName(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientName(value);
      return this;
    }
    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientName() {
      copyOnWrite();
      instance.clearClientName();
      return this;
    }
    /**
     * <pre>
     * A non-unique but human readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @param value The bytes for clientName to set.
     * @return This builder for chaining.
     */
    public Builder setClientNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
     * @return Whether the deviceType field is set.
     */
    @java.lang.Override
    public boolean hasDeviceType() {
      return instance.hasDeviceType();
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
     * @return The deviceType.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
      return instance.getDeviceType();
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
     * @param value The enum numeric value on the wire for deviceType to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
      copyOnWrite();
      instance.setDeviceType(value);
      return this;
    }
    /**
     * <pre>
     * The platform of the device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeviceType() {
      copyOnWrite();
      instance.clearDeviceType();
      return this;
    }

    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @return Whether the syncUserAgent field is set.
     */
    @java.lang.Override
    public boolean hasSyncUserAgent() {
      return instance.hasSyncUserAgent();
    }
    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @return The syncUserAgent.
     */
    @java.lang.Override
    public java.lang.String getSyncUserAgent() {
      return instance.getSyncUserAgent();
    }
    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @return The bytes for syncUserAgent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSyncUserAgentBytes() {
      return instance.getSyncUserAgentBytes();
    }
    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @param value The syncUserAgent to set.
     * @return This builder for chaining.
     */
    public Builder setSyncUserAgent(
        java.lang.String value) {
      copyOnWrite();
      instance.setSyncUserAgent(value);
      return this;
    }
    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSyncUserAgent() {
      copyOnWrite();
      instance.clearSyncUserAgent();
      return this;
    }
    /**
     * <pre>
     * The UserAgent used when contacting the Chrome Sync server.
     * </pre>
     *
     * <code>optional string sync_user_agent = 4;</code>
     * @param value The bytes for syncUserAgent to set.
     * @return This builder for chaining.
     */
    public Builder setSyncUserAgentBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSyncUserAgentBytes(value);
      return this;
    }

    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @return Whether the chromeVersion field is set.
     */
    @java.lang.Override
    public boolean hasChromeVersion() {
      return instance.hasChromeVersion();
    }
    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @return The chromeVersion.
     */
    @java.lang.Override
    public java.lang.String getChromeVersion() {
      return instance.getChromeVersion();
    }
    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @return The bytes for chromeVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChromeVersionBytes() {
      return instance.getChromeVersionBytes();
    }
    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @param value The chromeVersion to set.
     * @return This builder for chaining.
     */
    public Builder setChromeVersion(
        java.lang.String value) {
      copyOnWrite();
      instance.setChromeVersion(value);
      return this;
    }
    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearChromeVersion() {
      copyOnWrite();
      instance.clearChromeVersion();
      return this;
    }
    /**
     * <pre>
     * The Chrome instance's version.  Updated (if necessary) on every startup.
     * </pre>
     *
     * <code>optional string chrome_version = 5;</code>
     * @param value The bytes for chromeVersion to set.
     * @return This builder for chaining.
     */
    public Builder setChromeVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setChromeVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Last time when pre-sync data on the device was saved. The device can be
     * restored to state back to this time. In millisecond since UNIX epoch.
     * DEPRECATED in M50.
     * </pre>
     *
     * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
     * @return Whether the deprecatedBackupTimestamp field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasDeprecatedBackupTimestamp() {
      return instance.hasDeprecatedBackupTimestamp();
    }
    /**
     * <pre>
     * Last time when pre-sync data on the device was saved. The device can be
     * restored to state back to this time. In millisecond since UNIX epoch.
     * DEPRECATED in M50.
     * </pre>
     *
     * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
     * @return The deprecatedBackupTimestamp.
     */
    @java.lang.Override
    @java.lang.Deprecated public long getDeprecatedBackupTimestamp() {
      return instance.getDeprecatedBackupTimestamp();
    }
    /**
     * <pre>
     * Last time when pre-sync data on the device was saved. The device can be
     * restored to state back to this time. In millisecond since UNIX epoch.
     * DEPRECATED in M50.
     * </pre>
     *
     * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
     * @param value The deprecatedBackupTimestamp to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setDeprecatedBackupTimestamp(long value) {
      copyOnWrite();
      instance.setDeprecatedBackupTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * Last time when pre-sync data on the device was saved. The device can be
     * restored to state back to this time. In millisecond since UNIX epoch.
     * DEPRECATED in M50.
     * </pre>
     *
     * <code>optional int64 deprecated_backup_timestamp = 6 [deprecated = true];</code>
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearDeprecatedBackupTimestamp() {
      copyOnWrite();
      instance.clearDeprecatedBackupTimestamp();
      return this;
    }

    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @return Whether the signinScopedDeviceId field is set.
     */
    @java.lang.Override
    public boolean hasSigninScopedDeviceId() {
      return instance.hasSigninScopedDeviceId();
    }
    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @return The signinScopedDeviceId.
     */
    @java.lang.Override
    public java.lang.String getSigninScopedDeviceId() {
      return instance.getSigninScopedDeviceId();
    }
    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @return The bytes for signinScopedDeviceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSigninScopedDeviceIdBytes() {
      return instance.getSigninScopedDeviceIdBytes();
    }
    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @param value The signinScopedDeviceId to set.
     * @return This builder for chaining.
     */
    public Builder setSigninScopedDeviceId(
        java.lang.String value) {
      copyOnWrite();
      instance.setSigninScopedDeviceId(value);
      return this;
    }
    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSigninScopedDeviceId() {
      copyOnWrite();
      instance.clearSigninScopedDeviceId();
      return this;
    }
    /**
     * <pre>
     * Device_id that is stable until user signs out. This device_id is used for
     * annotating login scoped refresh token.
     * </pre>
     *
     * <code>optional string signin_scoped_device_id = 7;</code>
     * @param value The bytes for signinScopedDeviceId to set.
     * @return This builder for chaining.
     */
    public Builder setSigninScopedDeviceIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSigninScopedDeviceIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * This field is updated to be the current time periodically, and is also set
     * to the current time whenever another field changes. By examining the
     * difference between this field and the current time, it should be possible
     * to reason about the inactivity of any device that was syncing at one time.
     * </pre>
     *
     * <code>optional int64 last_updated_timestamp = 8;</code>
     * @return Whether the lastUpdatedTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasLastUpdatedTimestamp() {
      return instance.hasLastUpdatedTimestamp();
    }
    /**
     * <pre>
     * This field is updated to be the current time periodically, and is also set
     * to the current time whenever another field changes. By examining the
     * difference between this field and the current time, it should be possible
     * to reason about the inactivity of any device that was syncing at one time.
     * </pre>
     *
     * <code>optional int64 last_updated_timestamp = 8;</code>
     * @return The lastUpdatedTimestamp.
     */
    @java.lang.Override
    public long getLastUpdatedTimestamp() {
      return instance.getLastUpdatedTimestamp();
    }
    /**
     * <pre>
     * This field is updated to be the current time periodically, and is also set
     * to the current time whenever another field changes. By examining the
     * difference between this field and the current time, it should be possible
     * to reason about the inactivity of any device that was syncing at one time.
     * </pre>
     *
     * <code>optional int64 last_updated_timestamp = 8;</code>
     * @param value The lastUpdatedTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setLastUpdatedTimestamp(long value) {
      copyOnWrite();
      instance.setLastUpdatedTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * This field is updated to be the current time periodically, and is also set
     * to the current time whenever another field changes. By examining the
     * difference between this field and the current time, it should be possible
     * to reason about the inactivity of any device that was syncing at one time.
     * </pre>
     *
     * <code>optional int64 last_updated_timestamp = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastUpdatedTimestamp() {
      copyOnWrite();
      instance.clearLastUpdatedTimestamp();
      return this;
    }

    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    @java.lang.Override
    public boolean hasFeatureFields() {
      return instance.hasFeatureFields();
    }
    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.FeatureSpecificFields getFeatureFields() {
      return instance.getFeatureFields();
    }
    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    public Builder setFeatureFields(org.chromium.components.sync.protocol.FeatureSpecificFields value) {
      copyOnWrite();
      instance.setFeatureFields(value);
      return this;
      }
    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    public Builder setFeatureFields(
        org.chromium.components.sync.protocol.FeatureSpecificFields.Builder builderForValue) {
      copyOnWrite();
      instance.setFeatureFields(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    public Builder mergeFeatureFields(org.chromium.components.sync.protocol.FeatureSpecificFields value) {
      copyOnWrite();
      instance.mergeFeatureFields(value);
      return this;
    }
    /**
     * <pre>
     * Device info fields that are specific to a feature. This is information that
     * can not be derived from the other fields in the proto and are not general
     * enough to be used by another feature.
     * </pre>
     *
     * <code>optional .sync_pb.FeatureSpecificFields feature_fields = 9;</code>
     */
    public Builder clearFeatureFields() {  copyOnWrite();
      instance.clearFeatureFields();
      return this;
    }

    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    @java.lang.Override
    public boolean hasSharingFields() {
      return instance.hasSharingFields();
    }
    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SharingSpecificFields getSharingFields() {
      return instance.getSharingFields();
    }
    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    public Builder setSharingFields(org.chromium.components.sync.protocol.SharingSpecificFields value) {
      copyOnWrite();
      instance.setSharingFields(value);
      return this;
      }
    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    public Builder setSharingFields(
        org.chromium.components.sync.protocol.SharingSpecificFields.Builder builderForValue) {
      copyOnWrite();
      instance.setSharingFields(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    public Builder mergeSharingFields(org.chromium.components.sync.protocol.SharingSpecificFields value) {
      copyOnWrite();
      instance.mergeSharingFields(value);
      return this;
    }
    /**
     * <pre>
     * Device specific information for Sharing feature.
     * </pre>
     *
     * <code>optional .sync_pb.SharingSpecificFields sharing_fields = 10;</code>
     */
    public Builder clearSharingFields() {  copyOnWrite();
      instance.clearSharingFields();
      return this;
    }

    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @return Whether the model field is set.
     */
    @java.lang.Override
    public boolean hasModel() {
      return instance.hasModel();
    }
    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @return The model.
     */
    @java.lang.Override
    public java.lang.String getModel() {
      return instance.getModel();
    }
    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @return The bytes for model.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelBytes() {
      return instance.getModelBytes();
    }
    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @param value The model to set.
     * @return This builder for chaining.
     */
    public Builder setModel(
        java.lang.String value) {
      copyOnWrite();
      instance.setModel(value);
      return this;
    }
    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearModel() {
      copyOnWrite();
      instance.clearModel();
      return this;
    }
    /**
     * <pre>
     * Model of device.
     * </pre>
     *
     * <code>optional string model = 11;</code>
     * @param value The bytes for model to set.
     * @return This builder for chaining.
     */
    public Builder setModelBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setModelBytes(value);
      return this;
    }

    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @return Whether the manufacturer field is set.
     */
    @java.lang.Override
    public boolean hasManufacturer() {
      return instance.hasManufacturer();
    }
    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @return The manufacturer.
     */
    @java.lang.Override
    public java.lang.String getManufacturer() {
      return instance.getManufacturer();
    }
    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @return The bytes for manufacturer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getManufacturerBytes() {
      return instance.getManufacturerBytes();
    }
    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @param value The manufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setManufacturer(
        java.lang.String value) {
      copyOnWrite();
      instance.setManufacturer(value);
      return this;
    }
    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearManufacturer() {
      copyOnWrite();
      instance.clearManufacturer();
      return this;
    }
    /**
     * <pre>
     * Name of device manufacturer.
     * </pre>
     *
     * <code>optional string manufacturer = 12;</code>
     * @param value The bytes for manufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setManufacturerBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setManufacturerBytes(value);
      return this;
    }

    /**
     * <pre>
     * The interval in minutes with which |last_updated_timestamp| is updated to
     * the sync servers if online and while sync is actively running (e.g.
     * excludes backgrounded apps on Android). Introduced in M81. The legacy
     * default was 1 day.
     * </pre>
     *
     * <code>optional int32 pulse_interval_in_minutes = 13;</code>
     * @return Whether the pulseIntervalInMinutes field is set.
     */
    @java.lang.Override
    public boolean hasPulseIntervalInMinutes() {
      return instance.hasPulseIntervalInMinutes();
    }
    /**
     * <pre>
     * The interval in minutes with which |last_updated_timestamp| is updated to
     * the sync servers if online and while sync is actively running (e.g.
     * excludes backgrounded apps on Android). Introduced in M81. The legacy
     * default was 1 day.
     * </pre>
     *
     * <code>optional int32 pulse_interval_in_minutes = 13;</code>
     * @return The pulseIntervalInMinutes.
     */
    @java.lang.Override
    public int getPulseIntervalInMinutes() {
      return instance.getPulseIntervalInMinutes();
    }
    /**
     * <pre>
     * The interval in minutes with which |last_updated_timestamp| is updated to
     * the sync servers if online and while sync is actively running (e.g.
     * excludes backgrounded apps on Android). Introduced in M81. The legacy
     * default was 1 day.
     * </pre>
     *
     * <code>optional int32 pulse_interval_in_minutes = 13;</code>
     * @param value The pulseIntervalInMinutes to set.
     * @return This builder for chaining.
     */
    public Builder setPulseIntervalInMinutes(int value) {
      copyOnWrite();
      instance.setPulseIntervalInMinutes(value);
      return this;
    }
    /**
     * <pre>
     * The interval in minutes with which |last_updated_timestamp| is updated to
     * the sync servers if online and while sync is actively running (e.g.
     * excludes backgrounded apps on Android). Introduced in M81. The legacy
     * default was 1 day.
     * </pre>
     *
     * <code>optional int32 pulse_interval_in_minutes = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearPulseIntervalInMinutes() {
      copyOnWrite();
      instance.clearPulseIntervalInMinutes();
      return this;
    }

    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    @java.lang.Override
    public boolean hasInvalidationFields() {
      return instance.hasInvalidationFields();
    }
    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.InvalidationSpecificFields getInvalidationFields() {
      return instance.getInvalidationFields();
    }
    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    public Builder setInvalidationFields(org.chromium.components.sync.protocol.InvalidationSpecificFields value) {
      copyOnWrite();
      instance.setInvalidationFields(value);
      return this;
      }
    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    public Builder setInvalidationFields(
        org.chromium.components.sync.protocol.InvalidationSpecificFields.Builder builderForValue) {
      copyOnWrite();
      instance.setInvalidationFields(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    public Builder mergeInvalidationFields(org.chromium.components.sync.protocol.InvalidationSpecificFields value) {
      copyOnWrite();
      instance.mergeInvalidationFields(value);
      return this;
    }
    /**
     * <pre>
     * Device specific information for Sync invalidations.
     * </pre>
     *
     * <code>optional .sync_pb.InvalidationSpecificFields invalidation_fields = 14;</code>
     */
    public Builder clearInvalidationFields() {  copyOnWrite();
      instance.clearInvalidationFields();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.DeviceInfoSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.DeviceInfoSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "cacheGuid_",
            "clientName_",
            "deviceType_",
            org.chromium.components.sync.protocol.SyncEnums.DeviceType.internalGetVerifier(),
            "syncUserAgent_",
            "chromeVersion_",
            "deprecatedBackupTimestamp_",
            "signinScopedDeviceId_",
            "lastUpdatedTimestamp_",
            "featureFields_",
            "sharingFields_",
            "model_",
            "manufacturer_",
            "pulseIntervalInMinutes_",
            "invalidationFields_",
          };
          java.lang.String info =
              "\u0001\u000e\u0000\u0001\u0001\u000e\u000e\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1008\u0001\u0003\u100c\u0002\u0004\u1008\u0003\u0005\u1008\u0004\u0006\u1002\u0005" +
              "\u0007\u1008\u0006\b\u1002\u0007\t\u1009\b\n\u1009\t\u000b\u1008\n\f\u1008\u000b" +
              "\r\u1004\f\u000e\u1009\r";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.DeviceInfoSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.DeviceInfoSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.DeviceInfoSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.DeviceInfoSpecifics)
  private static final org.chromium.components.sync.protocol.DeviceInfoSpecifics DEFAULT_INSTANCE;
  static {
    DeviceInfoSpecifics defaultInstance = new DeviceInfoSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DeviceInfoSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.DeviceInfoSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DeviceInfoSpecifics> PARSER;

  public static com.google.protobuf.Parser<DeviceInfoSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

