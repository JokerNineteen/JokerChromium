// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/autofill_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.AutofillWalletSpecifics}
 */
public  final class AutofillWalletSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        AutofillWalletSpecifics, AutofillWalletSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.AutofillWalletSpecifics)
    AutofillWalletSpecificsOrBuilder {
  private AutofillWalletSpecifics() {
  }
  /**
   * Protobuf enum {@code sync_pb.AutofillWalletSpecifics.WalletInfoType}
   */
  public enum WalletInfoType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>MASKED_CREDIT_CARD = 1;</code>
     */
    MASKED_CREDIT_CARD(1),
    /**
     * <code>POSTAL_ADDRESS = 2;</code>
     */
    POSTAL_ADDRESS(2),
    /**
     * <code>CUSTOMER_DATA = 3;</code>
     */
    CUSTOMER_DATA(3),
    /**
     * <code>CREDIT_CARD_CLOUD_TOKEN_DATA = 4;</code>
     */
    CREDIT_CARD_CLOUD_TOKEN_DATA(4),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>MASKED_CREDIT_CARD = 1;</code>
     */
    public static final int MASKED_CREDIT_CARD_VALUE = 1;
    /**
     * <code>POSTAL_ADDRESS = 2;</code>
     */
    public static final int POSTAL_ADDRESS_VALUE = 2;
    /**
     * <code>CUSTOMER_DATA = 3;</code>
     */
    public static final int CUSTOMER_DATA_VALUE = 3;
    /**
     * <code>CREDIT_CARD_CLOUD_TOKEN_DATA = 4;</code>
     */
    public static final int CREDIT_CARD_CLOUD_TOKEN_DATA_VALUE = 4;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WalletInfoType valueOf(int value) {
      return forNumber(value);
    }

    public static WalletInfoType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return MASKED_CREDIT_CARD;
        case 2: return POSTAL_ADDRESS;
        case 3: return CUSTOMER_DATA;
        case 4: return CREDIT_CARD_CLOUD_TOKEN_DATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WalletInfoType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WalletInfoType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WalletInfoType>() {
            @java.lang.Override
            public WalletInfoType findValueByNumber(int number) {
              return WalletInfoType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return WalletInfoTypeVerifier.INSTANCE;
    }

    private static final class WalletInfoTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new WalletInfoTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return WalletInfoType.forNumber(number) != null;
            }
          };

    private final int value;

    private WalletInfoType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.AutofillWalletSpecifics.WalletInfoType)
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType getType() {
    org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType result = org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType.forNumber(type_);
    return result == null ? org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType.UNKNOWN : result;
  }
  /**
   * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
   * @param value The type to set.
   */
  private void setType(org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType value) {
    type_ = value.getNumber();
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
   */
  private void clearType() {
    bitField0_ = (bitField0_ & ~0x00000001);
    type_ = 0;
  }

  public static final int MASKED_CARD_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.WalletMaskedCreditCard maskedCard_;
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * MASKED_CREDIT_CARD.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
   */
  @java.lang.Override
  public boolean hasMaskedCard() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * MASKED_CREDIT_CARD.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.WalletMaskedCreditCard getMaskedCard() {
    return maskedCard_ == null ? org.chromium.components.sync.protocol.WalletMaskedCreditCard.getDefaultInstance() : maskedCard_;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * MASKED_CREDIT_CARD.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
   */
  private void setMaskedCard(org.chromium.components.sync.protocol.WalletMaskedCreditCard value) {
    value.getClass();
  maskedCard_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * MASKED_CREDIT_CARD.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeMaskedCard(org.chromium.components.sync.protocol.WalletMaskedCreditCard value) {
    value.getClass();
  if (maskedCard_ != null &&
        maskedCard_ != org.chromium.components.sync.protocol.WalletMaskedCreditCard.getDefaultInstance()) {
      maskedCard_ =
        org.chromium.components.sync.protocol.WalletMaskedCreditCard.newBuilder(maskedCard_).mergeFrom(value).buildPartial();
    } else {
      maskedCard_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * MASKED_CREDIT_CARD.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
   */
  private void clearMaskedCard() {  maskedCard_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int ADDRESS_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.WalletPostalAddress address_;
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to ADDRESS.
   * </pre>
   *
   * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
   */
  @java.lang.Override
  public boolean hasAddress() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to ADDRESS.
   * </pre>
   *
   * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.WalletPostalAddress getAddress() {
    return address_ == null ? org.chromium.components.sync.protocol.WalletPostalAddress.getDefaultInstance() : address_;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to ADDRESS.
   * </pre>
   *
   * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
   */
  private void setAddress(org.chromium.components.sync.protocol.WalletPostalAddress value) {
    value.getClass();
  address_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to ADDRESS.
   * </pre>
   *
   * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddress(org.chromium.components.sync.protocol.WalletPostalAddress value) {
    value.getClass();
  if (address_ != null &&
        address_ != org.chromium.components.sync.protocol.WalletPostalAddress.getDefaultInstance()) {
      address_ =
        org.chromium.components.sync.protocol.WalletPostalAddress.newBuilder(address_).mergeFrom(value).buildPartial();
    } else {
      address_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to ADDRESS.
   * </pre>
   *
   * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
   */
  private void clearAddress() {  address_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int CUSTOMER_DATA_FIELD_NUMBER = 4;
  private org.chromium.components.sync.protocol.PaymentsCustomerData customerData_;
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
   */
  @java.lang.Override
  public boolean hasCustomerData() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.PaymentsCustomerData getCustomerData() {
    return customerData_ == null ? org.chromium.components.sync.protocol.PaymentsCustomerData.getDefaultInstance() : customerData_;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
   */
  private void setCustomerData(org.chromium.components.sync.protocol.PaymentsCustomerData value) {
    value.getClass();
  customerData_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCustomerData(org.chromium.components.sync.protocol.PaymentsCustomerData value) {
    value.getClass();
  if (customerData_ != null &&
        customerData_ != org.chromium.components.sync.protocol.PaymentsCustomerData.getDefaultInstance()) {
      customerData_ =
        org.chromium.components.sync.protocol.PaymentsCustomerData.newBuilder(customerData_).mergeFrom(value).buildPartial();
    } else {
      customerData_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
   */
  private void clearCustomerData() {  customerData_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int CLOUD_TOKEN_DATA_FIELD_NUMBER = 5;
  private org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData cloudTokenData_;
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * CREDIT_CARD_CLOUD_TOKEN_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
   */
  @java.lang.Override
  public boolean hasCloudTokenData() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * CREDIT_CARD_CLOUD_TOKEN_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData getCloudTokenData() {
    return cloudTokenData_ == null ? org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.getDefaultInstance() : cloudTokenData_;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * CREDIT_CARD_CLOUD_TOKEN_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
   */
  private void setCloudTokenData(org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData value) {
    value.getClass();
  cloudTokenData_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * CREDIT_CARD_CLOUD_TOKEN_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCloudTokenData(org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData value) {
    value.getClass();
  if (cloudTokenData_ != null &&
        cloudTokenData_ != org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.getDefaultInstance()) {
      cloudTokenData_ =
        org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.newBuilder(cloudTokenData_).mergeFrom(value).buildPartial();
    } else {
      cloudTokenData_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * This field exists if and only if the "type" field equals to
   * CREDIT_CARD_CLOUD_TOKEN_DATA.
   * </pre>
   *
   * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
   */
  private void clearCloudTokenData() {  cloudTokenData_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.AutofillWalletSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.AutofillWalletSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.AutofillWalletSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.AutofillWalletSpecifics)
      org.chromium.components.sync.protocol.AutofillWalletSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.AutofillWalletSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return instance.hasType();
    }
    /**
     * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType getType() {
      return instance.getType();
    }
    /**
     * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    @java.lang.Override
    public boolean hasMaskedCard() {
      return instance.hasMaskedCard();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.WalletMaskedCreditCard getMaskedCard() {
      return instance.getMaskedCard();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    public Builder setMaskedCard(org.chromium.components.sync.protocol.WalletMaskedCreditCard value) {
      copyOnWrite();
      instance.setMaskedCard(value);
      return this;
      }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    public Builder setMaskedCard(
        org.chromium.components.sync.protocol.WalletMaskedCreditCard.Builder builderForValue) {
      copyOnWrite();
      instance.setMaskedCard(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    public Builder mergeMaskedCard(org.chromium.components.sync.protocol.WalletMaskedCreditCard value) {
      copyOnWrite();
      instance.mergeMaskedCard(value);
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * MASKED_CREDIT_CARD.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMaskedCreditCard masked_card = 2;</code>
     */
    public Builder clearMaskedCard() {  copyOnWrite();
      instance.clearMaskedCard();
      return this;
    }

    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    @java.lang.Override
    public boolean hasAddress() {
      return instance.hasAddress();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.WalletPostalAddress getAddress() {
      return instance.getAddress();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    public Builder setAddress(org.chromium.components.sync.protocol.WalletPostalAddress value) {
      copyOnWrite();
      instance.setAddress(value);
      return this;
      }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    public Builder setAddress(
        org.chromium.components.sync.protocol.WalletPostalAddress.Builder builderForValue) {
      copyOnWrite();
      instance.setAddress(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    public Builder mergeAddress(org.chromium.components.sync.protocol.WalletPostalAddress value) {
      copyOnWrite();
      instance.mergeAddress(value);
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to ADDRESS.
     * </pre>
     *
     * <code>optional .sync_pb.WalletPostalAddress address = 3;</code>
     */
    public Builder clearAddress() {  copyOnWrite();
      instance.clearAddress();
      return this;
    }

    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    @java.lang.Override
    public boolean hasCustomerData() {
      return instance.hasCustomerData();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.PaymentsCustomerData getCustomerData() {
      return instance.getCustomerData();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    public Builder setCustomerData(org.chromium.components.sync.protocol.PaymentsCustomerData value) {
      copyOnWrite();
      instance.setCustomerData(value);
      return this;
      }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    public Builder setCustomerData(
        org.chromium.components.sync.protocol.PaymentsCustomerData.Builder builderForValue) {
      copyOnWrite();
      instance.setCustomerData(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    public Builder mergeCustomerData(org.chromium.components.sync.protocol.PaymentsCustomerData value) {
      copyOnWrite();
      instance.mergeCustomerData(value);
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to CUSTOMER_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.PaymentsCustomerData customer_data = 4;</code>
     */
    public Builder clearCustomerData() {  copyOnWrite();
      instance.clearCustomerData();
      return this;
    }

    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    @java.lang.Override
    public boolean hasCloudTokenData() {
      return instance.hasCloudTokenData();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData getCloudTokenData() {
      return instance.getCloudTokenData();
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    public Builder setCloudTokenData(org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData value) {
      copyOnWrite();
      instance.setCloudTokenData(value);
      return this;
      }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    public Builder setCloudTokenData(
        org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.Builder builderForValue) {
      copyOnWrite();
      instance.setCloudTokenData(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    public Builder mergeCloudTokenData(org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData value) {
      copyOnWrite();
      instance.mergeCloudTokenData(value);
      return this;
    }
    /**
     * <pre>
     * This field exists if and only if the "type" field equals to
     * CREDIT_CARD_CLOUD_TOKEN_DATA.
     * </pre>
     *
     * <code>optional .sync_pb.WalletCreditCardCloudTokenData cloud_token_data = 5;</code>
     */
    public Builder clearCloudTokenData() {  copyOnWrite();
      instance.clearCloudTokenData();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.AutofillWalletSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.AutofillWalletSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "type_",
            org.chromium.components.sync.protocol.AutofillWalletSpecifics.WalletInfoType.internalGetVerifier(),
            "maskedCard_",
            "address_",
            "customerData_",
            "cloudTokenData_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u100c\u0000\u0002" +
              "\u1009\u0001\u0003\u1009\u0002\u0004\u1009\u0003\u0005\u1009\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.AutofillWalletSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.AutofillWalletSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.AutofillWalletSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.AutofillWalletSpecifics)
  private static final org.chromium.components.sync.protocol.AutofillWalletSpecifics DEFAULT_INSTANCE;
  static {
    AutofillWalletSpecifics defaultInstance = new AutofillWalletSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AutofillWalletSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.AutofillWalletSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AutofillWalletSpecifics> PARSER;

  public static com.google.protobuf.Parser<AutofillWalletSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

