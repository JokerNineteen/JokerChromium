// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/autofill_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Wallet card and address usage information that can be synced.
 * </pre>
 *
 * Protobuf type {@code sync_pb.WalletMetadataSpecifics}
 */
public  final class WalletMetadataSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        WalletMetadataSpecifics, WalletMetadataSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.WalletMetadataSpecifics)
    WalletMetadataSpecificsOrBuilder {
  private WalletMetadataSpecifics() {
    id_ = "";
    cardBillingAddressId_ = "";
  }
  /**
   * Protobuf enum {@code sync_pb.WalletMetadataSpecifics.Type}
   */
  public enum Type
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>CARD = 1;</code>
     */
    CARD(1),
    /**
     * <code>ADDRESS = 2;</code>
     */
    ADDRESS(2),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>CARD = 1;</code>
     */
    public static final int CARD_VALUE = 1;
    /**
     * <code>ADDRESS = 2;</code>
     */
    public static final int ADDRESS_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return CARD;
        case 2: return ADDRESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            @java.lang.Override
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TypeVerifier.INSTANCE;
    }

    private static final class TypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Type.forNumber(number) != null;
            }
          };

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.WalletMetadataSpecifics.Type)
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   * The type of the Wallet metadata.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The type of the Wallet metadata.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type getType() {
    org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type result = org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type.forNumber(type_);
    return result == null ? org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type.UNKNOWN : result;
  }
  /**
   * <pre>
   * The type of the Wallet metadata.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
   * @param value The type to set.
   */
  private void setType(org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type value) {
    type_ = value.getNumber();
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * The type of the Wallet metadata.
   * </pre>
   *
   * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
   */
  private void clearType() {
    bitField0_ = (bitField0_ & ~0x00000001);
    type_ = 0;
  }

  public static final int ID_FIELD_NUMBER = 2;
  private java.lang.String id_;
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   * @param value The id to set.
   */
  private void setId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    id_ = value;
  }
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000002);
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Base64 encoding of the unique ID string of the corresponding Wallet data.
   * For Wallet cards, this value is server generated and opaque to Chrome.
   * For Wallet addresses, this is a SHA1 hash of the following fields:
   * - First name
   * - Middle name
   * - Last name
   * - Company name
   * - Street address
   * - Dependent locality
   * - City
   * - State
   * - Zip code
   * - Sorting code
   * - Country
   * - Phone number
   * - Language code
   * </pre>
   *
   * <code>optional string id = 2;</code>
   * @param value The bytes for id to set.
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    id_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int USE_COUNT_FIELD_NUMBER = 3;
  private long useCount_;
  /**
   * <pre>
   * The number of times that this Wallet card or address was used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return Whether the useCount field is set.
   */
  @java.lang.Override
  public boolean hasUseCount() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The number of times that this Wallet card or address was used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return The useCount.
   */
  @java.lang.Override
  public long getUseCount() {
    return useCount_;
  }
  /**
   * <pre>
   * The number of times that this Wallet card or address was used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @param value The useCount to set.
   */
  private void setUseCount(long value) {
    bitField0_ |= 0x00000004;
    useCount_ = value;
  }
  /**
   * <pre>
   * The number of times that this Wallet card or address was used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   */
  private void clearUseCount() {
    bitField0_ = (bitField0_ & ~0x00000004);
    useCount_ = 0L;
  }

  public static final int USE_DATE_FIELD_NUMBER = 4;
  private long useDate_;
  /**
   * <pre>
   * The last use date of this Wallet card or address. Measured in microseconds
   * since the Windows epoch (1601).
   * </pre>
   *
   * <code>optional int64 use_date = 4;</code>
   * @return Whether the useDate field is set.
   */
  @java.lang.Override
  public boolean hasUseDate() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The last use date of this Wallet card or address. Measured in microseconds
   * since the Windows epoch (1601).
   * </pre>
   *
   * <code>optional int64 use_date = 4;</code>
   * @return The useDate.
   */
  @java.lang.Override
  public long getUseDate() {
    return useDate_;
  }
  /**
   * <pre>
   * The last use date of this Wallet card or address. Measured in microseconds
   * since the Windows epoch (1601).
   * </pre>
   *
   * <code>optional int64 use_date = 4;</code>
   * @param value The useDate to set.
   */
  private void setUseDate(long value) {
    bitField0_ |= 0x00000008;
    useDate_ = value;
  }
  /**
   * <pre>
   * The last use date of this Wallet card or address. Measured in microseconds
   * since the Windows epoch (1601).
   * </pre>
   *
   * <code>optional int64 use_date = 4;</code>
   */
  private void clearUseDate() {
    bitField0_ = (bitField0_ & ~0x00000008);
    useDate_ = 0L;
  }

  public static final int CARD_BILLING_ADDRESS_ID_FIELD_NUMBER = 5;
  private java.lang.String cardBillingAddressId_;
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   * @return Whether the cardBillingAddressId field is set.
   */
  @java.lang.Override
  public boolean hasCardBillingAddressId() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   * @return The cardBillingAddressId.
   */
  @java.lang.Override
  public java.lang.String getCardBillingAddressId() {
    return cardBillingAddressId_;
  }
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   * @return The bytes for cardBillingAddressId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCardBillingAddressIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(cardBillingAddressId_);
  }
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   * @param value The cardBillingAddressId to set.
   */
  private void setCardBillingAddressId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    cardBillingAddressId_ = value;
  }
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   */
  private void clearCardBillingAddressId() {
    bitField0_ = (bitField0_ & ~0x00000010);
    cardBillingAddressId_ = getDefaultInstance().getCardBillingAddressId();
  }
  /**
   * <pre>
   * The id of the profile/address that represents the billing address of this
   * Wallet card.
   * </pre>
   *
   * <code>optional string card_billing_address_id = 5;</code>
   * @param value The bytes for cardBillingAddressId to set.
   */
  private void setCardBillingAddressIdBytes(
      com.google.protobuf.ByteString value) {
    cardBillingAddressId_ = value.toStringUtf8();
    bitField0_ |= 0x00000010;
  }

  public static final int ADDRESS_HAS_CONVERTED_FIELD_NUMBER = 6;
  private boolean addressHasConverted_;
  /**
   * <pre>
   * Whether this Wallet address has been converted to a local autofill profile.
   * </pre>
   *
   * <code>optional bool address_has_converted = 6;</code>
   * @return Whether the addressHasConverted field is set.
   */
  @java.lang.Override
  public boolean hasAddressHasConverted() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Whether this Wallet address has been converted to a local autofill profile.
   * </pre>
   *
   * <code>optional bool address_has_converted = 6;</code>
   * @return The addressHasConverted.
   */
  @java.lang.Override
  public boolean getAddressHasConverted() {
    return addressHasConverted_;
  }
  /**
   * <pre>
   * Whether this Wallet address has been converted to a local autofill profile.
   * </pre>
   *
   * <code>optional bool address_has_converted = 6;</code>
   * @param value The addressHasConverted to set.
   */
  private void setAddressHasConverted(boolean value) {
    bitField0_ |= 0x00000020;
    addressHasConverted_ = value;
  }
  /**
   * <pre>
   * Whether this Wallet address has been converted to a local autofill profile.
   * </pre>
   *
   * <code>optional bool address_has_converted = 6;</code>
   */
  private void clearAddressHasConverted() {
    bitField0_ = (bitField0_ & ~0x00000020);
    addressHasConverted_ = false;
  }

  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.WalletMetadataSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Wallet card and address usage information that can be synced.
   * </pre>
   *
   * Protobuf type {@code sync_pb.WalletMetadataSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.WalletMetadataSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.WalletMetadataSpecifics)
      org.chromium.components.sync.protocol.WalletMetadataSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.WalletMetadataSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The type of the Wallet metadata.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return instance.hasType();
    }
    /**
     * <pre>
     * The type of the Wallet metadata.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type getType() {
      return instance.getType();
    }
    /**
     * <pre>
     * The type of the Wallet metadata.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     * <pre>
     * The type of the Wallet metadata.
     * </pre>
     *
     * <code>optional .sync_pb.WalletMetadataSpecifics.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Base64 encoding of the unique ID string of the corresponding Wallet data.
     * For Wallet cards, this value is server generated and opaque to Chrome.
     * For Wallet addresses, this is a SHA1 hash of the following fields:
     * - First name
     * - Middle name
     * - Last name
     * - Company name
     * - Street address
     * - Dependent locality
     * - City
     * - State
     * - Zip code
     * - Sorting code
     * - Country
     * - Phone number
     * - Language code
     * </pre>
     *
     * <code>optional string id = 2;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The number of times that this Wallet card or address was used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return Whether the useCount field is set.
     */
    @java.lang.Override
    public boolean hasUseCount() {
      return instance.hasUseCount();
    }
    /**
     * <pre>
     * The number of times that this Wallet card or address was used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return The useCount.
     */
    @java.lang.Override
    public long getUseCount() {
      return instance.getUseCount();
    }
    /**
     * <pre>
     * The number of times that this Wallet card or address was used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @param value The useCount to set.
     * @return This builder for chaining.
     */
    public Builder setUseCount(long value) {
      copyOnWrite();
      instance.setUseCount(value);
      return this;
    }
    /**
     * <pre>
     * The number of times that this Wallet card or address was used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCount() {
      copyOnWrite();
      instance.clearUseCount();
      return this;
    }

    /**
     * <pre>
     * The last use date of this Wallet card or address. Measured in microseconds
     * since the Windows epoch (1601).
     * </pre>
     *
     * <code>optional int64 use_date = 4;</code>
     * @return Whether the useDate field is set.
     */
    @java.lang.Override
    public boolean hasUseDate() {
      return instance.hasUseDate();
    }
    /**
     * <pre>
     * The last use date of this Wallet card or address. Measured in microseconds
     * since the Windows epoch (1601).
     * </pre>
     *
     * <code>optional int64 use_date = 4;</code>
     * @return The useDate.
     */
    @java.lang.Override
    public long getUseDate() {
      return instance.getUseDate();
    }
    /**
     * <pre>
     * The last use date of this Wallet card or address. Measured in microseconds
     * since the Windows epoch (1601).
     * </pre>
     *
     * <code>optional int64 use_date = 4;</code>
     * @param value The useDate to set.
     * @return This builder for chaining.
     */
    public Builder setUseDate(long value) {
      copyOnWrite();
      instance.setUseDate(value);
      return this;
    }
    /**
     * <pre>
     * The last use date of this Wallet card or address. Measured in microseconds
     * since the Windows epoch (1601).
     * </pre>
     *
     * <code>optional int64 use_date = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseDate() {
      copyOnWrite();
      instance.clearUseDate();
      return this;
    }

    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @return Whether the cardBillingAddressId field is set.
     */
    @java.lang.Override
    public boolean hasCardBillingAddressId() {
      return instance.hasCardBillingAddressId();
    }
    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @return The cardBillingAddressId.
     */
    @java.lang.Override
    public java.lang.String getCardBillingAddressId() {
      return instance.getCardBillingAddressId();
    }
    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @return The bytes for cardBillingAddressId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCardBillingAddressIdBytes() {
      return instance.getCardBillingAddressIdBytes();
    }
    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @param value The cardBillingAddressId to set.
     * @return This builder for chaining.
     */
    public Builder setCardBillingAddressId(
        java.lang.String value) {
      copyOnWrite();
      instance.setCardBillingAddressId(value);
      return this;
    }
    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCardBillingAddressId() {
      copyOnWrite();
      instance.clearCardBillingAddressId();
      return this;
    }
    /**
     * <pre>
     * The id of the profile/address that represents the billing address of this
     * Wallet card.
     * </pre>
     *
     * <code>optional string card_billing_address_id = 5;</code>
     * @param value The bytes for cardBillingAddressId to set.
     * @return This builder for chaining.
     */
    public Builder setCardBillingAddressIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCardBillingAddressIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether this Wallet address has been converted to a local autofill profile.
     * </pre>
     *
     * <code>optional bool address_has_converted = 6;</code>
     * @return Whether the addressHasConverted field is set.
     */
    @java.lang.Override
    public boolean hasAddressHasConverted() {
      return instance.hasAddressHasConverted();
    }
    /**
     * <pre>
     * Whether this Wallet address has been converted to a local autofill profile.
     * </pre>
     *
     * <code>optional bool address_has_converted = 6;</code>
     * @return The addressHasConverted.
     */
    @java.lang.Override
    public boolean getAddressHasConverted() {
      return instance.getAddressHasConverted();
    }
    /**
     * <pre>
     * Whether this Wallet address has been converted to a local autofill profile.
     * </pre>
     *
     * <code>optional bool address_has_converted = 6;</code>
     * @param value The addressHasConverted to set.
     * @return This builder for chaining.
     */
    public Builder setAddressHasConverted(boolean value) {
      copyOnWrite();
      instance.setAddressHasConverted(value);
      return this;
    }
    /**
     * <pre>
     * Whether this Wallet address has been converted to a local autofill profile.
     * </pre>
     *
     * <code>optional bool address_has_converted = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearAddressHasConverted() {
      copyOnWrite();
      instance.clearAddressHasConverted();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.WalletMetadataSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.WalletMetadataSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "type_",
            org.chromium.components.sync.protocol.WalletMetadataSpecifics.Type.internalGetVerifier(),
            "id_",
            "useCount_",
            "useDate_",
            "cardBillingAddressId_",
            "addressHasConverted_",
          };
          java.lang.String info =
              "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u100c\u0000\u0002" +
              "\u1008\u0001\u0003\u1002\u0002\u0004\u1002\u0003\u0005\u1008\u0004\u0006\u1007\u0005" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.WalletMetadataSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.WalletMetadataSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.WalletMetadataSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.WalletMetadataSpecifics)
  private static final org.chromium.components.sync.protocol.WalletMetadataSpecifics DEFAULT_INSTANCE;
  static {
    WalletMetadataSpecifics defaultInstance = new WalletMetadataSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      WalletMetadataSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.WalletMetadataSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WalletMetadataSpecifics> PARSER;

  public static com.google.protobuf.Parser<WalletMetadataSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

