// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/user_event_specifics.proto

package org.chromium.components.sync.protocol;

public interface UserEventSpecificsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.UserEventSpecifics)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Time of event, as measured by client in microseconds since Windows epoch.
   * </pre>
   *
   * <code>optional int64 event_time_usec = 1;</code>
   * @return Whether the eventTimeUsec field is set.
   */
  boolean hasEventTimeUsec();
  /**
   * <pre>
   * Time of event, as measured by client in microseconds since Windows epoch.
   * </pre>
   *
   * <code>optional int64 event_time_usec = 1;</code>
   * @return The eventTimeUsec.
   */
  long getEventTimeUsec();

  /**
   * <pre>
   * The |global_id| field of the associated navigation, if there is one.
   * </pre>
   *
   * <code>optional int64 navigation_id = 2;</code>
   * @return Whether the navigationId field is set.
   */
  boolean hasNavigationId();
  /**
   * <pre>
   * The |global_id| field of the associated navigation, if there is one.
   * </pre>
   *
   * <code>optional int64 navigation_id = 2;</code>
   * @return The navigationId.
   */
  long getNavigationId();

  /**
   * <pre>
   * On startup we generate a new random id to identify which FieldTrialEvents
   * other events belonged to.
   * </pre>
   *
   * <code>optional fixed64 session_id = 3;</code>
   * @return Whether the sessionId field is set.
   */
  boolean hasSessionId();
  /**
   * <pre>
   * On startup we generate a new random id to identify which FieldTrialEvents
   * other events belonged to.
   * </pre>
   *
   * <code>optional fixed64 session_id = 3;</code>
   * @return The sessionId.
   */
  long getSessionId();

  /**
   * <code>.sync_pb.UserEventSpecifics.Test test_event = 8;</code>
   * @return Whether the testEvent field is set.
   */
  boolean hasTestEvent();
  /**
   * <code>.sync_pb.UserEventSpecifics.Test test_event = 8;</code>
   * @return The testEvent.
   */
  org.chromium.components.sync.protocol.UserEventSpecifics.Test getTestEvent();

  /**
   * <code>.sync_pb.UserEventSpecifics.LanguageDetection language_detection_event = 10 [deprecated = true];</code>
   * @return Whether the languageDetectionEvent field is set.
   */
  @java.lang.Deprecated boolean hasLanguageDetectionEvent();
  /**
   * <code>.sync_pb.UserEventSpecifics.LanguageDetection language_detection_event = 10 [deprecated = true];</code>
   * @return The languageDetectionEvent.
   */
  @java.lang.Deprecated org.chromium.components.sync.protocol.UserEventSpecifics.LanguageDetection getLanguageDetectionEvent();

  /**
   * <code>.sync_pb.UserEventSpecifics.Translation translation_event = 11 [deprecated = true];</code>
   * @return Whether the translationEvent field is set.
   */
  @java.lang.Deprecated boolean hasTranslationEvent();
  /**
   * <code>.sync_pb.UserEventSpecifics.Translation translation_event = 11 [deprecated = true];</code>
   * @return The translationEvent.
   */
  @java.lang.Deprecated org.chromium.components.sync.protocol.UserEventSpecifics.Translation getTranslationEvent();

  /**
   * <code>.sync_pb.UserEventSpecifics.UserConsent user_consent = 12 [deprecated = true];</code>
   * @return Whether the userConsent field is set.
   */
  @java.lang.Deprecated boolean hasUserConsent();
  /**
   * <code>.sync_pb.UserEventSpecifics.UserConsent user_consent = 12 [deprecated = true];</code>
   * @return The userConsent.
   */
  @java.lang.Deprecated org.chromium.components.sync.protocol.UserEventSpecifics.UserConsent getUserConsent();

  /**
   * <pre>
   * Happens when a user types their Google account password on another site.
   * </pre>
   *
   * <code>.sync_pb.GaiaPasswordReuse gaia_password_reuse_event = 104;</code>
   * @return Whether the gaiaPasswordReuseEvent field is set.
   */
  boolean hasGaiaPasswordReuseEvent();
  /**
   * <pre>
   * Happens when a user types their Google account password on another site.
   * </pre>
   *
   * <code>.sync_pb.GaiaPasswordReuse gaia_password_reuse_event = 104;</code>
   * @return The gaiaPasswordReuseEvent.
   */
  org.chromium.components.sync.protocol.GaiaPasswordReuse getGaiaPasswordReuseEvent();

  /**
   * <code>.sync_pb.UserEventSpecifics.GaiaPasswordCaptured gaia_password_captured_event = 15;</code>
   * @return Whether the gaiaPasswordCapturedEvent field is set.
   */
  boolean hasGaiaPasswordCapturedEvent();
  /**
   * <code>.sync_pb.UserEventSpecifics.GaiaPasswordCaptured gaia_password_captured_event = 15;</code>
   * @return The gaiaPasswordCapturedEvent.
   */
  org.chromium.components.sync.protocol.UserEventSpecifics.GaiaPasswordCaptured getGaiaPasswordCapturedEvent();

  /**
   * <code>.sync_pb.UserEventSpecifics.FlocIdComputed floc_id_computed_event = 16;</code>
   * @return Whether the flocIdComputedEvent field is set.
   */
  boolean hasFlocIdComputedEvent();
  /**
   * <code>.sync_pb.UserEventSpecifics.FlocIdComputed floc_id_computed_event = 16;</code>
   * @return The flocIdComputedEvent.
   */
  org.chromium.components.sync.protocol.UserEventSpecifics.FlocIdComputed getFlocIdComputedEvent();

  public org.chromium.components.sync.protocol.UserEventSpecifics.EventCase getEventCase();
}
