// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/app_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Settings related to push notifications for apps.
 * </pre>
 *
 * Protobuf type {@code sync_pb.AppNotificationSettings}
 */
public  final class AppNotificationSettings extends
    com.google.protobuf.GeneratedMessageLite<
        AppNotificationSettings, AppNotificationSettings.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.AppNotificationSettings)
    AppNotificationSettingsOrBuilder {
  private AppNotificationSettings() {
    oauthClientId_ = "";
  }
  private int bitField0_;
  public static final int INITIAL_SETUP_DONE_FIELD_NUMBER = 1;
  private boolean initialSetupDone_;
  /**
   * <pre>
   * DEPRECATED: Use oauth_client_id below.
   * Whether or not the user has setup notifications at least once.
   * The value for this field will start out false and will be set
   * to true when the user accepts receiving notifications for the
   * first time and then it will always remain true.
   * </pre>
   *
   * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
   * @return Whether the initialSetupDone field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasInitialSetupDone() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * DEPRECATED: Use oauth_client_id below.
   * Whether or not the user has setup notifications at least once.
   * The value for this field will start out false and will be set
   * to true when the user accepts receiving notifications for the
   * first time and then it will always remain true.
   * </pre>
   *
   * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
   * @return The initialSetupDone.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getInitialSetupDone() {
    return initialSetupDone_;
  }
  /**
   * <pre>
   * DEPRECATED: Use oauth_client_id below.
   * Whether or not the user has setup notifications at least once.
   * The value for this field will start out false and will be set
   * to true when the user accepts receiving notifications for the
   * first time and then it will always remain true.
   * </pre>
   *
   * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
   * @param value The initialSetupDone to set.
   */
  private void setInitialSetupDone(boolean value) {
    bitField0_ |= 0x00000001;
    initialSetupDone_ = value;
  }
  /**
   * <pre>
   * DEPRECATED: Use oauth_client_id below.
   * Whether or not the user has setup notifications at least once.
   * The value for this field will start out false and will be set
   * to true when the user accepts receiving notifications for the
   * first time and then it will always remain true.
   * </pre>
   *
   * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
   */
  private void clearInitialSetupDone() {
    bitField0_ = (bitField0_ & ~0x00000001);
    initialSetupDone_ = false;
  }

  public static final int DISABLED_FIELD_NUMBER = 2;
  private boolean disabled_;
  /**
   * <pre>
   * Whether or not the user has disabled notifications.
   * </pre>
   *
   * <code>optional bool disabled = 2;</code>
   * @return Whether the disabled field is set.
   */
  @java.lang.Override
  public boolean hasDisabled() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Whether or not the user has disabled notifications.
   * </pre>
   *
   * <code>optional bool disabled = 2;</code>
   * @return The disabled.
   */
  @java.lang.Override
  public boolean getDisabled() {
    return disabled_;
  }
  /**
   * <pre>
   * Whether or not the user has disabled notifications.
   * </pre>
   *
   * <code>optional bool disabled = 2;</code>
   * @param value The disabled to set.
   */
  private void setDisabled(boolean value) {
    bitField0_ |= 0x00000002;
    disabled_ = value;
  }
  /**
   * <pre>
   * Whether or not the user has disabled notifications.
   * </pre>
   *
   * <code>optional bool disabled = 2;</code>
   */
  private void clearDisabled() {
    bitField0_ = (bitField0_ & ~0x00000002);
    disabled_ = false;
  }

  public static final int OAUTH_CLIENT_ID_FIELD_NUMBER = 3;
  private java.lang.String oauthClientId_;
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   * @return Whether the oauthClientId field is set.
   */
  @java.lang.Override
  public boolean hasOauthClientId() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   * @return The oauthClientId.
   */
  @java.lang.Override
  public java.lang.String getOauthClientId() {
    return oauthClientId_;
  }
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   * @return The bytes for oauthClientId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOauthClientIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(oauthClientId_);
  }
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   * @param value The oauthClientId to set.
   */
  private void setOauthClientId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    oauthClientId_ = value;
  }
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   */
  private void clearOauthClientId() {
    bitField0_ = (bitField0_ & ~0x00000004);
    oauthClientId_ = getDefaultInstance().getOauthClientId();
  }
  /**
   * <pre>
   * OAuth2 client id to which the user granted the notification permission.
   * This field will start out empty.
   * It will be set when the user accepts receiving notifications.
   * This field is used when the user revokes the notifications permission.
   * Note that it is never cleared after it was set once. Hence, the presence
   * of this field can be used to determine if the user has setup notifications
   * at least once for the given app.
   * </pre>
   *
   * <code>optional string oauth_client_id = 3;</code>
   * @param value The bytes for oauthClientId to set.
   */
  private void setOauthClientIdBytes(
      com.google.protobuf.ByteString value) {
    oauthClientId_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppNotificationSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.AppNotificationSettings prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Settings related to push notifications for apps.
   * </pre>
   *
   * Protobuf type {@code sync_pb.AppNotificationSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.AppNotificationSettings, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.AppNotificationSettings)
      org.chromium.components.sync.protocol.AppNotificationSettingsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.AppNotificationSettings.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * DEPRECATED: Use oauth_client_id below.
     * Whether or not the user has setup notifications at least once.
     * The value for this field will start out false and will be set
     * to true when the user accepts receiving notifications for the
     * first time and then it will always remain true.
     * </pre>
     *
     * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
     * @return Whether the initialSetupDone field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasInitialSetupDone() {
      return instance.hasInitialSetupDone();
    }
    /**
     * <pre>
     * DEPRECATED: Use oauth_client_id below.
     * Whether or not the user has setup notifications at least once.
     * The value for this field will start out false and will be set
     * to true when the user accepts receiving notifications for the
     * first time and then it will always remain true.
     * </pre>
     *
     * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
     * @return The initialSetupDone.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getInitialSetupDone() {
      return instance.getInitialSetupDone();
    }
    /**
     * <pre>
     * DEPRECATED: Use oauth_client_id below.
     * Whether or not the user has setup notifications at least once.
     * The value for this field will start out false and will be set
     * to true when the user accepts receiving notifications for the
     * first time and then it will always remain true.
     * </pre>
     *
     * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
     * @param value The initialSetupDone to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setInitialSetupDone(boolean value) {
      copyOnWrite();
      instance.setInitialSetupDone(value);
      return this;
    }
    /**
     * <pre>
     * DEPRECATED: Use oauth_client_id below.
     * Whether or not the user has setup notifications at least once.
     * The value for this field will start out false and will be set
     * to true when the user accepts receiving notifications for the
     * first time and then it will always remain true.
     * </pre>
     *
     * <code>optional bool initial_setup_done = 1 [deprecated = true];</code>
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearInitialSetupDone() {
      copyOnWrite();
      instance.clearInitialSetupDone();
      return this;
    }

    /**
     * <pre>
     * Whether or not the user has disabled notifications.
     * </pre>
     *
     * <code>optional bool disabled = 2;</code>
     * @return Whether the disabled field is set.
     */
    @java.lang.Override
    public boolean hasDisabled() {
      return instance.hasDisabled();
    }
    /**
     * <pre>
     * Whether or not the user has disabled notifications.
     * </pre>
     *
     * <code>optional bool disabled = 2;</code>
     * @return The disabled.
     */
    @java.lang.Override
    public boolean getDisabled() {
      return instance.getDisabled();
    }
    /**
     * <pre>
     * Whether or not the user has disabled notifications.
     * </pre>
     *
     * <code>optional bool disabled = 2;</code>
     * @param value The disabled to set.
     * @return This builder for chaining.
     */
    public Builder setDisabled(boolean value) {
      copyOnWrite();
      instance.setDisabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether or not the user has disabled notifications.
     * </pre>
     *
     * <code>optional bool disabled = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisabled() {
      copyOnWrite();
      instance.clearDisabled();
      return this;
    }

    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @return Whether the oauthClientId field is set.
     */
    @java.lang.Override
    public boolean hasOauthClientId() {
      return instance.hasOauthClientId();
    }
    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @return The oauthClientId.
     */
    @java.lang.Override
    public java.lang.String getOauthClientId() {
      return instance.getOauthClientId();
    }
    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @return The bytes for oauthClientId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOauthClientIdBytes() {
      return instance.getOauthClientIdBytes();
    }
    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @param value The oauthClientId to set.
     * @return This builder for chaining.
     */
    public Builder setOauthClientId(
        java.lang.String value) {
      copyOnWrite();
      instance.setOauthClientId(value);
      return this;
    }
    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOauthClientId() {
      copyOnWrite();
      instance.clearOauthClientId();
      return this;
    }
    /**
     * <pre>
     * OAuth2 client id to which the user granted the notification permission.
     * This field will start out empty.
     * It will be set when the user accepts receiving notifications.
     * This field is used when the user revokes the notifications permission.
     * Note that it is never cleared after it was set once. Hence, the presence
     * of this field can be used to determine if the user has setup notifications
     * at least once for the given app.
     * </pre>
     *
     * <code>optional string oauth_client_id = 3;</code>
     * @param value The bytes for oauthClientId to set.
     * @return This builder for chaining.
     */
    public Builder setOauthClientIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOauthClientIdBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.AppNotificationSettings)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.AppNotificationSettings();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "initialSetupDone_",
            "disabled_",
            "oauthClientId_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1007\u0000\u0002" +
              "\u1007\u0001\u0003\u1008\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.AppNotificationSettings> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.AppNotificationSettings.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.AppNotificationSettings>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.AppNotificationSettings)
  private static final org.chromium.components.sync.protocol.AppNotificationSettings DEFAULT_INSTANCE;
  static {
    AppNotificationSettings defaultInstance = new AppNotificationSettings();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AppNotificationSettings.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.AppNotificationSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AppNotificationSettings> PARSER;

  public static com.google.protobuf.Parser<AppNotificationSettings> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

