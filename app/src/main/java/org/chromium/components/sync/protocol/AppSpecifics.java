// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/app_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of app sync objects.
 * For now, an app is just an extension.  We keep the two data types
 * separate for future-proofing purposes.
 * </pre>
 *
 * Protobuf type {@code sync_pb.AppSpecifics}
 */
public  final class AppSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        AppSpecifics, AppSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.AppSpecifics)
    AppSpecificsOrBuilder {
  private AppSpecifics() {
    appLaunchOrdinal_ = "";
    pageOrdinal_ = "";
    bookmarkAppUrl_ = "";
    bookmarkAppDescription_ = "";
    bookmarkAppIconColor_ = "";
    linkedAppIcons_ = emptyProtobufList();
    bookmarkAppScope_ = "";
  }
  /**
   * <pre>
   * The possible launch types for an app.
   * This enum should be kept in sync with extensions::LaunchType.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.AppSpecifics.LaunchType}
   */
  public enum LaunchType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PINNED = 0;</code>
     */
    PINNED(0),
    /**
     * <code>REGULAR = 1;</code>
     */
    REGULAR(1),
    /**
     * <code>FULLSCREEN = 2;</code>
     */
    FULLSCREEN(2),
    /**
     * <code>WINDOW = 3;</code>
     */
    WINDOW(3),
    ;

    /**
     * <code>PINNED = 0;</code>
     */
    public static final int PINNED_VALUE = 0;
    /**
     * <code>REGULAR = 1;</code>
     */
    public static final int REGULAR_VALUE = 1;
    /**
     * <code>FULLSCREEN = 2;</code>
     */
    public static final int FULLSCREEN_VALUE = 2;
    /**
     * <code>WINDOW = 3;</code>
     */
    public static final int WINDOW_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LaunchType valueOf(int value) {
      return forNumber(value);
    }

    public static LaunchType forNumber(int value) {
      switch (value) {
        case 0: return PINNED;
        case 1: return REGULAR;
        case 2: return FULLSCREEN;
        case 3: return WINDOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LaunchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LaunchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LaunchType>() {
            @java.lang.Override
            public LaunchType findValueByNumber(int number) {
              return LaunchType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return LaunchTypeVerifier.INSTANCE;
    }

    private static final class LaunchTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LaunchTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return LaunchType.forNumber(number) != null;
            }
          };

    private final int value;

    private LaunchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.AppSpecifics.LaunchType)
  }

  private int bitField0_;
  public static final int EXTENSION_FIELD_NUMBER = 1;
  private org.chromium.components.sync.protocol.ExtensionSpecifics extension_;
  /**
   * <pre>
   * Extension data.
   * </pre>
   *
   * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
   */
  @java.lang.Override
  public boolean hasExtension() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Extension data.
   * </pre>
   *
   * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ExtensionSpecifics getExtension() {
    return extension_ == null ? org.chromium.components.sync.protocol.ExtensionSpecifics.getDefaultInstance() : extension_;
  }
  /**
   * <pre>
   * Extension data.
   * </pre>
   *
   * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
   */
  private void setExtension(org.chromium.components.sync.protocol.ExtensionSpecifics value) {
    value.getClass();
  extension_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * Extension data.
   * </pre>
   *
   * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeExtension(org.chromium.components.sync.protocol.ExtensionSpecifics value) {
    value.getClass();
  if (extension_ != null &&
        extension_ != org.chromium.components.sync.protocol.ExtensionSpecifics.getDefaultInstance()) {
      extension_ =
        org.chromium.components.sync.protocol.ExtensionSpecifics.newBuilder(extension_).mergeFrom(value).buildPartial();
    } else {
      extension_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * Extension data.
   * </pre>
   *
   * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
   */
  private void clearExtension() {  extension_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int NOTIFICATION_SETTINGS_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.AppNotificationSettings notificationSettings_;
  /**
   * <pre>
   * Notification settings.
   * </pre>
   *
   * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
   */
  @java.lang.Override
  public boolean hasNotificationSettings() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Notification settings.
   * </pre>
   *
   * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.AppNotificationSettings getNotificationSettings() {
    return notificationSettings_ == null ? org.chromium.components.sync.protocol.AppNotificationSettings.getDefaultInstance() : notificationSettings_;
  }
  /**
   * <pre>
   * Notification settings.
   * </pre>
   *
   * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
   */
  private void setNotificationSettings(org.chromium.components.sync.protocol.AppNotificationSettings value) {
    value.getClass();
  notificationSettings_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * Notification settings.
   * </pre>
   *
   * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNotificationSettings(org.chromium.components.sync.protocol.AppNotificationSettings value) {
    value.getClass();
  if (notificationSettings_ != null &&
        notificationSettings_ != org.chromium.components.sync.protocol.AppNotificationSettings.getDefaultInstance()) {
      notificationSettings_ =
        org.chromium.components.sync.protocol.AppNotificationSettings.newBuilder(notificationSettings_).mergeFrom(value).buildPartial();
    } else {
      notificationSettings_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * Notification settings.
   * </pre>
   *
   * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
   */
  private void clearNotificationSettings() {  notificationSettings_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int APP_LAUNCH_ORDINAL_FIELD_NUMBER = 3;
  private java.lang.String appLaunchOrdinal_;
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   * @return Whether the appLaunchOrdinal field is set.
   */
  @java.lang.Override
  public boolean hasAppLaunchOrdinal() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   * @return The appLaunchOrdinal.
   */
  @java.lang.Override
  public java.lang.String getAppLaunchOrdinal() {
    return appLaunchOrdinal_;
  }
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   * @return The bytes for appLaunchOrdinal.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAppLaunchOrdinalBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(appLaunchOrdinal_);
  }
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   * @param value The appLaunchOrdinal to set.
   */
  private void setAppLaunchOrdinal(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    appLaunchOrdinal_ = value;
  }
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   */
  private void clearAppLaunchOrdinal() {
    bitField0_ = (bitField0_ & ~0x00000004);
    appLaunchOrdinal_ = getDefaultInstance().getAppLaunchOrdinal();
  }
  /**
   * <pre>
   * This controls where on a page this application icon will appear.
   * </pre>
   *
   * <code>optional string app_launch_ordinal = 3;</code>
   * @param value The bytes for appLaunchOrdinal to set.
   */
  private void setAppLaunchOrdinalBytes(
      com.google.protobuf.ByteString value) {
    appLaunchOrdinal_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static final int PAGE_ORDINAL_FIELD_NUMBER = 4;
  private java.lang.String pageOrdinal_;
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   * @return Whether the pageOrdinal field is set.
   */
  @java.lang.Override
  public boolean hasPageOrdinal() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   * @return The pageOrdinal.
   */
  @java.lang.Override
  public java.lang.String getPageOrdinal() {
    return pageOrdinal_;
  }
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   * @return The bytes for pageOrdinal.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPageOrdinalBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(pageOrdinal_);
  }
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   * @param value The pageOrdinal to set.
   */
  private void setPageOrdinal(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000008;
    pageOrdinal_ = value;
  }
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   */
  private void clearPageOrdinal() {
    bitField0_ = (bitField0_ & ~0x00000008);
    pageOrdinal_ = getDefaultInstance().getPageOrdinal();
  }
  /**
   * <pre>
   * This specifics which page the application icon will appear on in the NTP.
   * This values only provide the order within the application pages, not within
   * all of the panels in the NTP.
   * </pre>
   *
   * <code>optional string page_ordinal = 4;</code>
   * @param value The bytes for pageOrdinal to set.
   */
  private void setPageOrdinalBytes(
      com.google.protobuf.ByteString value) {
    pageOrdinal_ = value.toStringUtf8();
    bitField0_ |= 0x00000008;
  }

  public static final int LAUNCH_TYPE_FIELD_NUMBER = 5;
  private int launchType_;
  /**
   * <pre>
   * This describes how the extension should be launched.
   * </pre>
   *
   * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
   * @return Whether the launchType field is set.
   */
  @java.lang.Override
  public boolean hasLaunchType() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * This describes how the extension should be launched.
   * </pre>
   *
   * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
   * @return The launchType.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.AppSpecifics.LaunchType getLaunchType() {
    org.chromium.components.sync.protocol.AppSpecifics.LaunchType result = org.chromium.components.sync.protocol.AppSpecifics.LaunchType.forNumber(launchType_);
    return result == null ? org.chromium.components.sync.protocol.AppSpecifics.LaunchType.PINNED : result;
  }
  /**
   * <pre>
   * This describes how the extension should be launched.
   * </pre>
   *
   * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
   * @param value The launchType to set.
   */
  private void setLaunchType(org.chromium.components.sync.protocol.AppSpecifics.LaunchType value) {
    launchType_ = value.getNumber();
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * This describes how the extension should be launched.
   * </pre>
   *
   * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
   */
  private void clearLaunchType() {
    bitField0_ = (bitField0_ & ~0x00000010);
    launchType_ = 0;
  }

  public static final int BOOKMARK_APP_URL_FIELD_NUMBER = 6;
  private java.lang.String bookmarkAppUrl_;
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   * @return Whether the bookmarkAppUrl field is set.
   */
  @java.lang.Override
  public boolean hasBookmarkAppUrl() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   * @return The bookmarkAppUrl.
   */
  @java.lang.Override
  public java.lang.String getBookmarkAppUrl() {
    return bookmarkAppUrl_;
  }
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   * @return The bytes for bookmarkAppUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBookmarkAppUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bookmarkAppUrl_);
  }
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   * @param value The bookmarkAppUrl to set.
   */
  private void setBookmarkAppUrl(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000020;
    bookmarkAppUrl_ = value;
  }
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   */
  private void clearBookmarkAppUrl() {
    bitField0_ = (bitField0_ & ~0x00000020);
    bookmarkAppUrl_ = getDefaultInstance().getBookmarkAppUrl();
  }
  /**
   * <pre>
   * This is the url of a bookmark app. If this exists, the app is a bookmark
   * app.
   * </pre>
   *
   * <code>optional string bookmark_app_url = 6;</code>
   * @param value The bytes for bookmarkAppUrl to set.
   */
  private void setBookmarkAppUrlBytes(
      com.google.protobuf.ByteString value) {
    bookmarkAppUrl_ = value.toStringUtf8();
    bitField0_ |= 0x00000020;
  }

  public static final int BOOKMARK_APP_DESCRIPTION_FIELD_NUMBER = 7;
  private java.lang.String bookmarkAppDescription_;
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   * @return Whether the bookmarkAppDescription field is set.
   */
  @java.lang.Override
  public boolean hasBookmarkAppDescription() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   * @return The bookmarkAppDescription.
   */
  @java.lang.Override
  public java.lang.String getBookmarkAppDescription() {
    return bookmarkAppDescription_;
  }
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   * @return The bytes for bookmarkAppDescription.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBookmarkAppDescriptionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bookmarkAppDescription_);
  }
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   * @param value The bookmarkAppDescription to set.
   */
  private void setBookmarkAppDescription(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000040;
    bookmarkAppDescription_ = value;
  }
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   */
  private void clearBookmarkAppDescription() {
    bitField0_ = (bitField0_ & ~0x00000040);
    bookmarkAppDescription_ = getDefaultInstance().getBookmarkAppDescription();
  }
  /**
   * <pre>
   * This is the description of a bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_description = 7;</code>
   * @param value The bytes for bookmarkAppDescription to set.
   */
  private void setBookmarkAppDescriptionBytes(
      com.google.protobuf.ByteString value) {
    bookmarkAppDescription_ = value.toStringUtf8();
    bitField0_ |= 0x00000040;
  }

  public static final int BOOKMARK_APP_ICON_COLOR_FIELD_NUMBER = 8;
  private java.lang.String bookmarkAppIconColor_;
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   * @return Whether the bookmarkAppIconColor field is set.
   */
  @java.lang.Override
  public boolean hasBookmarkAppIconColor() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   * @return The bookmarkAppIconColor.
   */
  @java.lang.Override
  public java.lang.String getBookmarkAppIconColor() {
    return bookmarkAppIconColor_;
  }
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   * @return The bytes for bookmarkAppIconColor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBookmarkAppIconColorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bookmarkAppIconColor_);
  }
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   * @param value The bookmarkAppIconColor to set.
   */
  private void setBookmarkAppIconColor(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000080;
    bookmarkAppIconColor_ = value;
  }
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   */
  private void clearBookmarkAppIconColor() {
    bitField0_ = (bitField0_ & ~0x00000080);
    bookmarkAppIconColor_ = getDefaultInstance().getBookmarkAppIconColor();
  }
  /**
   * <pre>
   * This is the color to use when generating bookmark app icons. The string is
   * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
   * </pre>
   *
   * <code>optional string bookmark_app_icon_color = 8;</code>
   * @param value The bytes for bookmarkAppIconColor to set.
   */
  private void setBookmarkAppIconColorBytes(
      com.google.protobuf.ByteString value) {
    bookmarkAppIconColor_ = value.toStringUtf8();
    bitField0_ |= 0x00000080;
  }

  public static final int LINKED_APP_ICONS_FIELD_NUMBER = 9;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.LinkedAppIconInfo> linkedAppIcons_;
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.components.sync.protocol.LinkedAppIconInfo> getLinkedAppIconsList() {
    return linkedAppIcons_;
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.LinkedAppIconInfoOrBuilder> 
      getLinkedAppIconsOrBuilderList() {
    return linkedAppIcons_;
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  @java.lang.Override
  public int getLinkedAppIconsCount() {
    return linkedAppIcons_.size();
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.LinkedAppIconInfo getLinkedAppIcons(int index) {
    return linkedAppIcons_.get(index);
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  public org.chromium.components.sync.protocol.LinkedAppIconInfoOrBuilder getLinkedAppIconsOrBuilder(
      int index) {
    return linkedAppIcons_.get(index);
  }
  private void ensureLinkedAppIconsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.LinkedAppIconInfo> tmp = linkedAppIcons_;
    if (!tmp.isModifiable()) {
      linkedAppIcons_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void setLinkedAppIcons(
      int index, org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
    value.getClass();
  ensureLinkedAppIconsIsMutable();
    linkedAppIcons_.set(index, value);
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void addLinkedAppIcons(org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
    value.getClass();
  ensureLinkedAppIconsIsMutable();
    linkedAppIcons_.add(value);
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void addLinkedAppIcons(
      int index, org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
    value.getClass();
  ensureLinkedAppIconsIsMutable();
    linkedAppIcons_.add(index, value);
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void addAllLinkedAppIcons(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.LinkedAppIconInfo> values) {
    ensureLinkedAppIconsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, linkedAppIcons_);
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void clearLinkedAppIcons() {
    linkedAppIcons_ = emptyProtobufList();
  }
  /**
   * <pre>
   * This is information about linked icons (that is, icons that are downloaded
   * from outside the app's bundle of files.
   * </pre>
   *
   * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
   */
  private void removeLinkedAppIcons(int index) {
    ensureLinkedAppIconsIsMutable();
    linkedAppIcons_.remove(index);
  }

  public static final int BOOKMARK_APP_SCOPE_FIELD_NUMBER = 10;
  private java.lang.String bookmarkAppScope_;
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   * @return Whether the bookmarkAppScope field is set.
   */
  @java.lang.Override
  public boolean hasBookmarkAppScope() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   * @return The bookmarkAppScope.
   */
  @java.lang.Override
  public java.lang.String getBookmarkAppScope() {
    return bookmarkAppScope_;
  }
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   * @return The bytes for bookmarkAppScope.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBookmarkAppScopeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bookmarkAppScope_);
  }
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   * @param value The bookmarkAppScope to set.
   */
  private void setBookmarkAppScope(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000100;
    bookmarkAppScope_ = value;
  }
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   */
  private void clearBookmarkAppScope() {
    bitField0_ = (bitField0_ & ~0x00000100);
    bookmarkAppScope_ = getDefaultInstance().getBookmarkAppScope();
  }
  /**
   * <pre>
   * This is the scope of the bookmark app.
   * </pre>
   *
   * <code>optional string bookmark_app_scope = 10;</code>
   * @param value The bytes for bookmarkAppScope to set.
   */
  private void setBookmarkAppScopeBytes(
      com.google.protobuf.ByteString value) {
    bookmarkAppScope_ = value.toStringUtf8();
    bitField0_ |= 0x00000100;
  }

  public static final int BOOKMARK_APP_THEME_COLOR_FIELD_NUMBER = 11;
  private int bookmarkAppThemeColor_;
  /**
   * <pre>
   * This is the SkColor used for the browser frame for this bookmark app.
   * </pre>
   *
   * <code>optional uint32 bookmark_app_theme_color = 11;</code>
   * @return Whether the bookmarkAppThemeColor field is set.
   */
  @java.lang.Override
  public boolean hasBookmarkAppThemeColor() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * This is the SkColor used for the browser frame for this bookmark app.
   * </pre>
   *
   * <code>optional uint32 bookmark_app_theme_color = 11;</code>
   * @return The bookmarkAppThemeColor.
   */
  @java.lang.Override
  public int getBookmarkAppThemeColor() {
    return bookmarkAppThemeColor_;
  }
  /**
   * <pre>
   * This is the SkColor used for the browser frame for this bookmark app.
   * </pre>
   *
   * <code>optional uint32 bookmark_app_theme_color = 11;</code>
   * @param value The bookmarkAppThemeColor to set.
   */
  private void setBookmarkAppThemeColor(int value) {
    bitField0_ |= 0x00000200;
    bookmarkAppThemeColor_ = value;
  }
  /**
   * <pre>
   * This is the SkColor used for the browser frame for this bookmark app.
   * </pre>
   *
   * <code>optional uint32 bookmark_app_theme_color = 11;</code>
   */
  private void clearBookmarkAppThemeColor() {
    bitField0_ = (bitField0_ & ~0x00000200);
    bookmarkAppThemeColor_ = 0;
  }

  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.AppSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.AppSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Properties of app sync objects.
   * For now, an app is just an extension.  We keep the two data types
   * separate for future-proofing purposes.
   * </pre>
   *
   * Protobuf type {@code sync_pb.AppSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.AppSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.AppSpecifics)
      org.chromium.components.sync.protocol.AppSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.AppSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    @java.lang.Override
    public boolean hasExtension() {
      return instance.hasExtension();
    }
    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ExtensionSpecifics getExtension() {
      return instance.getExtension();
    }
    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    public Builder setExtension(org.chromium.components.sync.protocol.ExtensionSpecifics value) {
      copyOnWrite();
      instance.setExtension(value);
      return this;
      }
    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    public Builder setExtension(
        org.chromium.components.sync.protocol.ExtensionSpecifics.Builder builderForValue) {
      copyOnWrite();
      instance.setExtension(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    public Builder mergeExtension(org.chromium.components.sync.protocol.ExtensionSpecifics value) {
      copyOnWrite();
      instance.mergeExtension(value);
      return this;
    }
    /**
     * <pre>
     * Extension data.
     * </pre>
     *
     * <code>optional .sync_pb.ExtensionSpecifics extension = 1;</code>
     */
    public Builder clearExtension() {  copyOnWrite();
      instance.clearExtension();
      return this;
    }

    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    @java.lang.Override
    public boolean hasNotificationSettings() {
      return instance.hasNotificationSettings();
    }
    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.AppNotificationSettings getNotificationSettings() {
      return instance.getNotificationSettings();
    }
    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    public Builder setNotificationSettings(org.chromium.components.sync.protocol.AppNotificationSettings value) {
      copyOnWrite();
      instance.setNotificationSettings(value);
      return this;
      }
    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    public Builder setNotificationSettings(
        org.chromium.components.sync.protocol.AppNotificationSettings.Builder builderForValue) {
      copyOnWrite();
      instance.setNotificationSettings(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    public Builder mergeNotificationSettings(org.chromium.components.sync.protocol.AppNotificationSettings value) {
      copyOnWrite();
      instance.mergeNotificationSettings(value);
      return this;
    }
    /**
     * <pre>
     * Notification settings.
     * </pre>
     *
     * <code>optional .sync_pb.AppNotificationSettings notification_settings = 2;</code>
     */
    public Builder clearNotificationSettings() {  copyOnWrite();
      instance.clearNotificationSettings();
      return this;
    }

    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @return Whether the appLaunchOrdinal field is set.
     */
    @java.lang.Override
    public boolean hasAppLaunchOrdinal() {
      return instance.hasAppLaunchOrdinal();
    }
    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @return The appLaunchOrdinal.
     */
    @java.lang.Override
    public java.lang.String getAppLaunchOrdinal() {
      return instance.getAppLaunchOrdinal();
    }
    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @return The bytes for appLaunchOrdinal.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAppLaunchOrdinalBytes() {
      return instance.getAppLaunchOrdinalBytes();
    }
    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @param value The appLaunchOrdinal to set.
     * @return This builder for chaining.
     */
    public Builder setAppLaunchOrdinal(
        java.lang.String value) {
      copyOnWrite();
      instance.setAppLaunchOrdinal(value);
      return this;
    }
    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAppLaunchOrdinal() {
      copyOnWrite();
      instance.clearAppLaunchOrdinal();
      return this;
    }
    /**
     * <pre>
     * This controls where on a page this application icon will appear.
     * </pre>
     *
     * <code>optional string app_launch_ordinal = 3;</code>
     * @param value The bytes for appLaunchOrdinal to set.
     * @return This builder for chaining.
     */
    public Builder setAppLaunchOrdinalBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setAppLaunchOrdinalBytes(value);
      return this;
    }

    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @return Whether the pageOrdinal field is set.
     */
    @java.lang.Override
    public boolean hasPageOrdinal() {
      return instance.hasPageOrdinal();
    }
    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @return The pageOrdinal.
     */
    @java.lang.Override
    public java.lang.String getPageOrdinal() {
      return instance.getPageOrdinal();
    }
    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @return The bytes for pageOrdinal.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageOrdinalBytes() {
      return instance.getPageOrdinalBytes();
    }
    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @param value The pageOrdinal to set.
     * @return This builder for chaining.
     */
    public Builder setPageOrdinal(
        java.lang.String value) {
      copyOnWrite();
      instance.setPageOrdinal(value);
      return this;
    }
    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageOrdinal() {
      copyOnWrite();
      instance.clearPageOrdinal();
      return this;
    }
    /**
     * <pre>
     * This specifics which page the application icon will appear on in the NTP.
     * This values only provide the order within the application pages, not within
     * all of the panels in the NTP.
     * </pre>
     *
     * <code>optional string page_ordinal = 4;</code>
     * @param value The bytes for pageOrdinal to set.
     * @return This builder for chaining.
     */
    public Builder setPageOrdinalBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPageOrdinalBytes(value);
      return this;
    }

    /**
     * <pre>
     * This describes how the extension should be launched.
     * </pre>
     *
     * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
     * @return Whether the launchType field is set.
     */
    @java.lang.Override
    public boolean hasLaunchType() {
      return instance.hasLaunchType();
    }
    /**
     * <pre>
     * This describes how the extension should be launched.
     * </pre>
     *
     * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
     * @return The launchType.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.AppSpecifics.LaunchType getLaunchType() {
      return instance.getLaunchType();
    }
    /**
     * <pre>
     * This describes how the extension should be launched.
     * </pre>
     *
     * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
     * @param value The enum numeric value on the wire for launchType to set.
     * @return This builder for chaining.
     */
    public Builder setLaunchType(org.chromium.components.sync.protocol.AppSpecifics.LaunchType value) {
      copyOnWrite();
      instance.setLaunchType(value);
      return this;
    }
    /**
     * <pre>
     * This describes how the extension should be launched.
     * </pre>
     *
     * <code>optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLaunchType() {
      copyOnWrite();
      instance.clearLaunchType();
      return this;
    }

    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @return Whether the bookmarkAppUrl field is set.
     */
    @java.lang.Override
    public boolean hasBookmarkAppUrl() {
      return instance.hasBookmarkAppUrl();
    }
    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @return The bookmarkAppUrl.
     */
    @java.lang.Override
    public java.lang.String getBookmarkAppUrl() {
      return instance.getBookmarkAppUrl();
    }
    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @return The bytes for bookmarkAppUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBookmarkAppUrlBytes() {
      return instance.getBookmarkAppUrlBytes();
    }
    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @param value The bookmarkAppUrl to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setBookmarkAppUrl(value);
      return this;
    }
    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookmarkAppUrl() {
      copyOnWrite();
      instance.clearBookmarkAppUrl();
      return this;
    }
    /**
     * <pre>
     * This is the url of a bookmark app. If this exists, the app is a bookmark
     * app.
     * </pre>
     *
     * <code>optional string bookmark_app_url = 6;</code>
     * @param value The bytes for bookmarkAppUrl to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBookmarkAppUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @return Whether the bookmarkAppDescription field is set.
     */
    @java.lang.Override
    public boolean hasBookmarkAppDescription() {
      return instance.hasBookmarkAppDescription();
    }
    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @return The bookmarkAppDescription.
     */
    @java.lang.Override
    public java.lang.String getBookmarkAppDescription() {
      return instance.getBookmarkAppDescription();
    }
    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @return The bytes for bookmarkAppDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBookmarkAppDescriptionBytes() {
      return instance.getBookmarkAppDescriptionBytes();
    }
    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @param value The bookmarkAppDescription to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppDescription(
        java.lang.String value) {
      copyOnWrite();
      instance.setBookmarkAppDescription(value);
      return this;
    }
    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookmarkAppDescription() {
      copyOnWrite();
      instance.clearBookmarkAppDescription();
      return this;
    }
    /**
     * <pre>
     * This is the description of a bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_description = 7;</code>
     * @param value The bytes for bookmarkAppDescription to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppDescriptionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBookmarkAppDescriptionBytes(value);
      return this;
    }

    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @return Whether the bookmarkAppIconColor field is set.
     */
    @java.lang.Override
    public boolean hasBookmarkAppIconColor() {
      return instance.hasBookmarkAppIconColor();
    }
    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @return The bookmarkAppIconColor.
     */
    @java.lang.Override
    public java.lang.String getBookmarkAppIconColor() {
      return instance.getBookmarkAppIconColor();
    }
    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @return The bytes for bookmarkAppIconColor.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBookmarkAppIconColorBytes() {
      return instance.getBookmarkAppIconColorBytes();
    }
    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @param value The bookmarkAppIconColor to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppIconColor(
        java.lang.String value) {
      copyOnWrite();
      instance.setBookmarkAppIconColor(value);
      return this;
    }
    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookmarkAppIconColor() {
      copyOnWrite();
      instance.clearBookmarkAppIconColor();
      return this;
    }
    /**
     * <pre>
     * This is the color to use when generating bookmark app icons. The string is
     * in #rrggbb or #rgb syntax, e.g. #d8d8d8.
     * </pre>
     *
     * <code>optional string bookmark_app_icon_color = 8;</code>
     * @param value The bytes for bookmarkAppIconColor to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppIconColorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBookmarkAppIconColorBytes(value);
      return this;
    }

    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.sync.protocol.LinkedAppIconInfo> getLinkedAppIconsList() {
      return java.util.Collections.unmodifiableList(
          instance.getLinkedAppIconsList());
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    @java.lang.Override
    public int getLinkedAppIconsCount() {
      return instance.getLinkedAppIconsCount();
    }/**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.LinkedAppIconInfo getLinkedAppIcons(int index) {
      return instance.getLinkedAppIcons(index);
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder setLinkedAppIcons(
        int index, org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
      copyOnWrite();
      instance.setLinkedAppIcons(index, value);
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder setLinkedAppIcons(
        int index, org.chromium.components.sync.protocol.LinkedAppIconInfo.Builder builderForValue) {
      copyOnWrite();
      instance.setLinkedAppIcons(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder addLinkedAppIcons(org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
      copyOnWrite();
      instance.addLinkedAppIcons(value);
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder addLinkedAppIcons(
        int index, org.chromium.components.sync.protocol.LinkedAppIconInfo value) {
      copyOnWrite();
      instance.addLinkedAppIcons(index, value);
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder addLinkedAppIcons(
        org.chromium.components.sync.protocol.LinkedAppIconInfo.Builder builderForValue) {
      copyOnWrite();
      instance.addLinkedAppIcons(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder addLinkedAppIcons(
        int index, org.chromium.components.sync.protocol.LinkedAppIconInfo.Builder builderForValue) {
      copyOnWrite();
      instance.addLinkedAppIcons(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder addAllLinkedAppIcons(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.LinkedAppIconInfo> values) {
      copyOnWrite();
      instance.addAllLinkedAppIcons(values);
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder clearLinkedAppIcons() {
      copyOnWrite();
      instance.clearLinkedAppIcons();
      return this;
    }
    /**
     * <pre>
     * This is information about linked icons (that is, icons that are downloaded
     * from outside the app's bundle of files.
     * </pre>
     *
     * <code>repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;</code>
     */
    public Builder removeLinkedAppIcons(int index) {
      copyOnWrite();
      instance.removeLinkedAppIcons(index);
      return this;
    }

    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @return Whether the bookmarkAppScope field is set.
     */
    @java.lang.Override
    public boolean hasBookmarkAppScope() {
      return instance.hasBookmarkAppScope();
    }
    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @return The bookmarkAppScope.
     */
    @java.lang.Override
    public java.lang.String getBookmarkAppScope() {
      return instance.getBookmarkAppScope();
    }
    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @return The bytes for bookmarkAppScope.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBookmarkAppScopeBytes() {
      return instance.getBookmarkAppScopeBytes();
    }
    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @param value The bookmarkAppScope to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppScope(
        java.lang.String value) {
      copyOnWrite();
      instance.setBookmarkAppScope(value);
      return this;
    }
    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookmarkAppScope() {
      copyOnWrite();
      instance.clearBookmarkAppScope();
      return this;
    }
    /**
     * <pre>
     * This is the scope of the bookmark app.
     * </pre>
     *
     * <code>optional string bookmark_app_scope = 10;</code>
     * @param value The bytes for bookmarkAppScope to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppScopeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBookmarkAppScopeBytes(value);
      return this;
    }

    /**
     * <pre>
     * This is the SkColor used for the browser frame for this bookmark app.
     * </pre>
     *
     * <code>optional uint32 bookmark_app_theme_color = 11;</code>
     * @return Whether the bookmarkAppThemeColor field is set.
     */
    @java.lang.Override
    public boolean hasBookmarkAppThemeColor() {
      return instance.hasBookmarkAppThemeColor();
    }
    /**
     * <pre>
     * This is the SkColor used for the browser frame for this bookmark app.
     * </pre>
     *
     * <code>optional uint32 bookmark_app_theme_color = 11;</code>
     * @return The bookmarkAppThemeColor.
     */
    @java.lang.Override
    public int getBookmarkAppThemeColor() {
      return instance.getBookmarkAppThemeColor();
    }
    /**
     * <pre>
     * This is the SkColor used for the browser frame for this bookmark app.
     * </pre>
     *
     * <code>optional uint32 bookmark_app_theme_color = 11;</code>
     * @param value The bookmarkAppThemeColor to set.
     * @return This builder for chaining.
     */
    public Builder setBookmarkAppThemeColor(int value) {
      copyOnWrite();
      instance.setBookmarkAppThemeColor(value);
      return this;
    }
    /**
     * <pre>
     * This is the SkColor used for the browser frame for this bookmark app.
     * </pre>
     *
     * <code>optional uint32 bookmark_app_theme_color = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookmarkAppThemeColor() {
      copyOnWrite();
      instance.clearBookmarkAppThemeColor();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.AppSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.AppSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "extension_",
            "notificationSettings_",
            "appLaunchOrdinal_",
            "pageOrdinal_",
            "launchType_",
            org.chromium.components.sync.protocol.AppSpecifics.LaunchType.internalGetVerifier(),
            "bookmarkAppUrl_",
            "bookmarkAppDescription_",
            "bookmarkAppIconColor_",
            "linkedAppIcons_",
            org.chromium.components.sync.protocol.LinkedAppIconInfo.class,
            "bookmarkAppScope_",
            "bookmarkAppThemeColor_",
          };
          java.lang.String info =
              "\u0001\u000b\u0000\u0001\u0001\u000b\u000b\u0000\u0001\u0000\u0001\u1009\u0000\u0002" +
              "\u1009\u0001\u0003\u1008\u0002\u0004\u1008\u0003\u0005\u100c\u0004\u0006\u1008\u0005" +
              "\u0007\u1008\u0006\b\u1008\u0007\t\u001b\n\u1008\b\u000b\u100b\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.AppSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.AppSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.AppSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.AppSpecifics)
  private static final org.chromium.components.sync.protocol.AppSpecifics DEFAULT_INSTANCE;
  static {
    AppSpecifics defaultInstance = new AppSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AppSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.AppSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AppSpecifics> PARSER;

  public static com.google.protobuf.Parser<AppSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

