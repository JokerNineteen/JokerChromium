// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/client_debug_info.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Datatype specifics statistics gathered at association time.
 * </pre>
 *
 * Protobuf type {@code sync_pb.DatatypeAssociationStats}
 */
public  final class DatatypeAssociationStats extends
    com.google.protobuf.GeneratedMessageLite<
        DatatypeAssociationStats, DatatypeAssociationStats.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.DatatypeAssociationStats)
    DatatypeAssociationStatsOrBuilder {
  private DatatypeAssociationStats() {
    highPriorityTypeConfiguredBefore_ = emptyIntList();
    samePriorityTypeConfiguredBefore_ = emptyIntList();
  }
  private int bitField0_;
  public static final int DATA_TYPE_ID_FIELD_NUMBER = 1;
  private int dataTypeId_;
  /**
   * <pre>
   * The datatype that was associated.
   * </pre>
   *
   * <code>optional int32 data_type_id = 1;</code>
   * @return Whether the dataTypeId field is set.
   */
  @java.lang.Override
  public boolean hasDataTypeId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The datatype that was associated.
   * </pre>
   *
   * <code>optional int32 data_type_id = 1;</code>
   * @return The dataTypeId.
   */
  @java.lang.Override
  public int getDataTypeId() {
    return dataTypeId_;
  }
  /**
   * <pre>
   * The datatype that was associated.
   * </pre>
   *
   * <code>optional int32 data_type_id = 1;</code>
   * @param value The dataTypeId to set.
   */
  private void setDataTypeId(int value) {
    bitField0_ |= 0x00000001;
    dataTypeId_ = value;
  }
  /**
   * <pre>
   * The datatype that was associated.
   * </pre>
   *
   * <code>optional int32 data_type_id = 1;</code>
   */
  private void clearDataTypeId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    dataTypeId_ = 0;
  }

  public static final int DOWNLOAD_WAIT_TIME_US_FIELD_NUMBER = 15;
  private long downloadWaitTimeUs_;
  /**
   * <pre>
   * Waiting time before downloading starts. This measures the time between
   * receiving configuration request for a set of data types to starting
   * downloading data of this type.
   * </pre>
   *
   * <code>optional int64 download_wait_time_us = 15;</code>
   * @return Whether the downloadWaitTimeUs field is set.
   */
  @java.lang.Override
  public boolean hasDownloadWaitTimeUs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Waiting time before downloading starts. This measures the time between
   * receiving configuration request for a set of data types to starting
   * downloading data of this type.
   * </pre>
   *
   * <code>optional int64 download_wait_time_us = 15;</code>
   * @return The downloadWaitTimeUs.
   */
  @java.lang.Override
  public long getDownloadWaitTimeUs() {
    return downloadWaitTimeUs_;
  }
  /**
   * <pre>
   * Waiting time before downloading starts. This measures the time between
   * receiving configuration request for a set of data types to starting
   * downloading data of this type.
   * </pre>
   *
   * <code>optional int64 download_wait_time_us = 15;</code>
   * @param value The downloadWaitTimeUs to set.
   */
  private void setDownloadWaitTimeUs(long value) {
    bitField0_ |= 0x00000002;
    downloadWaitTimeUs_ = value;
  }
  /**
   * <pre>
   * Waiting time before downloading starts. This measures the time between
   * receiving configuration request for a set of data types to starting
   * downloading data of this type.
   * </pre>
   *
   * <code>optional int64 download_wait_time_us = 15;</code>
   */
  private void clearDownloadWaitTimeUs() {
    bitField0_ = (bitField0_ & ~0x00000002);
    downloadWaitTimeUs_ = 0L;
  }

  public static final int DOWNLOAD_TIME_US_FIELD_NUMBER = 13;
  private long downloadTimeUs_;
  /**
   * <pre>
   * Time spent on downloading sync data for first time sync.
   * Note: This measures the time between asking backend to download data to
   *       being notified of download-ready by backend. So it consists of
   *       time on data downloading and processing at sync backend. But
   *       downloading time should dominate. It's also the total time spent on
   *       downloading data of all types in the priority group of
   *       |data_type_id| instead of just one data type.
   * </pre>
   *
   * <code>optional int64 download_time_us = 13;</code>
   * @return Whether the downloadTimeUs field is set.
   */
  @java.lang.Override
  public boolean hasDownloadTimeUs() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Time spent on downloading sync data for first time sync.
   * Note: This measures the time between asking backend to download data to
   *       being notified of download-ready by backend. So it consists of
   *       time on data downloading and processing at sync backend. But
   *       downloading time should dominate. It's also the total time spent on
   *       downloading data of all types in the priority group of
   *       |data_type_id| instead of just one data type.
   * </pre>
   *
   * <code>optional int64 download_time_us = 13;</code>
   * @return The downloadTimeUs.
   */
  @java.lang.Override
  public long getDownloadTimeUs() {
    return downloadTimeUs_;
  }
  /**
   * <pre>
   * Time spent on downloading sync data for first time sync.
   * Note: This measures the time between asking backend to download data to
   *       being notified of download-ready by backend. So it consists of
   *       time on data downloading and processing at sync backend. But
   *       downloading time should dominate. It's also the total time spent on
   *       downloading data of all types in the priority group of
   *       |data_type_id| instead of just one data type.
   * </pre>
   *
   * <code>optional int64 download_time_us = 13;</code>
   * @param value The downloadTimeUs to set.
   */
  private void setDownloadTimeUs(long value) {
    bitField0_ |= 0x00000004;
    downloadTimeUs_ = value;
  }
  /**
   * <pre>
   * Time spent on downloading sync data for first time sync.
   * Note: This measures the time between asking backend to download data to
   *       being notified of download-ready by backend. So it consists of
   *       time on data downloading and processing at sync backend. But
   *       downloading time should dominate. It's also the total time spent on
   *       downloading data of all types in the priority group of
   *       |data_type_id| instead of just one data type.
   * </pre>
   *
   * <code>optional int64 download_time_us = 13;</code>
   */
  private void clearDownloadTimeUs() {
    bitField0_ = (bitField0_ & ~0x00000004);
    downloadTimeUs_ = 0L;
  }

  public static final int HIGH_PRIORITY_TYPE_CONFIGURED_BEFORE_FIELD_NUMBER = 18;
  private com.google.protobuf.Internal.IntList highPriorityTypeConfiguredBefore_;
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @return A list containing the highPriorityTypeConfiguredBefore.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getHighPriorityTypeConfiguredBeforeList() {
    return highPriorityTypeConfiguredBefore_;
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @return The count of highPriorityTypeConfiguredBefore.
   */
  @java.lang.Override
  public int getHighPriorityTypeConfiguredBeforeCount() {
    return highPriorityTypeConfiguredBefore_.size();
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @param index The index of the element to return.
   * @return The highPriorityTypeConfiguredBefore at the given index.
   */
  @java.lang.Override
  public int getHighPriorityTypeConfiguredBefore(int index) {
    return highPriorityTypeConfiguredBefore_.getInt(index);
  }
  private void ensureHighPriorityTypeConfiguredBeforeIsMutable() {
    com.google.protobuf.Internal.IntList tmp = highPriorityTypeConfiguredBefore_;
    if (!tmp.isModifiable()) {
      highPriorityTypeConfiguredBefore_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @param index The index to set the value at.
   * @param value The highPriorityTypeConfiguredBefore to set.
   */
  private void setHighPriorityTypeConfiguredBefore(
      int index, int value) {
    ensureHighPriorityTypeConfiguredBeforeIsMutable();
    highPriorityTypeConfiguredBefore_.setInt(index, value);
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @param value The highPriorityTypeConfiguredBefore to add.
   */
  private void addHighPriorityTypeConfiguredBefore(int value) {
    ensureHighPriorityTypeConfiguredBeforeIsMutable();
    highPriorityTypeConfiguredBefore_.addInt(value);
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   * @param values The highPriorityTypeConfiguredBefore to add.
   */
  private void addAllHighPriorityTypeConfiguredBefore(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureHighPriorityTypeConfiguredBeforeIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, highPriorityTypeConfiguredBefore_);
  }
  /**
   * <pre>
   * Higher priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 high_priority_type_configured_before = 18;</code>
   */
  private void clearHighPriorityTypeConfiguredBefore() {
    highPriorityTypeConfiguredBefore_ = emptyIntList();
  }

  public static final int SAME_PRIORITY_TYPE_CONFIGURED_BEFORE_FIELD_NUMBER = 19;
  private com.google.protobuf.Internal.IntList samePriorityTypeConfiguredBefore_;
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @return A list containing the samePriorityTypeConfiguredBefore.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getSamePriorityTypeConfiguredBeforeList() {
    return samePriorityTypeConfiguredBefore_;
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @return The count of samePriorityTypeConfiguredBefore.
   */
  @java.lang.Override
  public int getSamePriorityTypeConfiguredBeforeCount() {
    return samePriorityTypeConfiguredBefore_.size();
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @param index The index of the element to return.
   * @return The samePriorityTypeConfiguredBefore at the given index.
   */
  @java.lang.Override
  public int getSamePriorityTypeConfiguredBefore(int index) {
    return samePriorityTypeConfiguredBefore_.getInt(index);
  }
  private void ensureSamePriorityTypeConfiguredBeforeIsMutable() {
    com.google.protobuf.Internal.IntList tmp = samePriorityTypeConfiguredBefore_;
    if (!tmp.isModifiable()) {
      samePriorityTypeConfiguredBefore_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @param index The index to set the value at.
   * @param value The samePriorityTypeConfiguredBefore to set.
   */
  private void setSamePriorityTypeConfiguredBefore(
      int index, int value) {
    ensureSamePriorityTypeConfiguredBeforeIsMutable();
    samePriorityTypeConfiguredBefore_.setInt(index, value);
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @param value The samePriorityTypeConfiguredBefore to add.
   */
  private void addSamePriorityTypeConfiguredBefore(int value) {
    ensureSamePriorityTypeConfiguredBeforeIsMutable();
    samePriorityTypeConfiguredBefore_.addInt(value);
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   * @param values The samePriorityTypeConfiguredBefore to add.
   */
  private void addAllSamePriorityTypeConfiguredBefore(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureSamePriorityTypeConfiguredBeforeIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, samePriorityTypeConfiguredBefore_);
  }
  /**
   * <pre>
   * Same priority type that's configured before this type.
   * </pre>
   *
   * <code>repeated int32 same_priority_type_configured_before = 19;</code>
   */
  private void clearSamePriorityTypeConfiguredBefore() {
    samePriorityTypeConfiguredBefore_ = emptyIntList();
  }

  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.DatatypeAssociationStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.DatatypeAssociationStats prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Datatype specifics statistics gathered at association time.
   * </pre>
   *
   * Protobuf type {@code sync_pb.DatatypeAssociationStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.DatatypeAssociationStats, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.DatatypeAssociationStats)
      org.chromium.components.sync.protocol.DatatypeAssociationStatsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.DatatypeAssociationStats.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The datatype that was associated.
     * </pre>
     *
     * <code>optional int32 data_type_id = 1;</code>
     * @return Whether the dataTypeId field is set.
     */
    @java.lang.Override
    public boolean hasDataTypeId() {
      return instance.hasDataTypeId();
    }
    /**
     * <pre>
     * The datatype that was associated.
     * </pre>
     *
     * <code>optional int32 data_type_id = 1;</code>
     * @return The dataTypeId.
     */
    @java.lang.Override
    public int getDataTypeId() {
      return instance.getDataTypeId();
    }
    /**
     * <pre>
     * The datatype that was associated.
     * </pre>
     *
     * <code>optional int32 data_type_id = 1;</code>
     * @param value The dataTypeId to set.
     * @return This builder for chaining.
     */
    public Builder setDataTypeId(int value) {
      copyOnWrite();
      instance.setDataTypeId(value);
      return this;
    }
    /**
     * <pre>
     * The datatype that was associated.
     * </pre>
     *
     * <code>optional int32 data_type_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDataTypeId() {
      copyOnWrite();
      instance.clearDataTypeId();
      return this;
    }

    /**
     * <pre>
     * Waiting time before downloading starts. This measures the time between
     * receiving configuration request for a set of data types to starting
     * downloading data of this type.
     * </pre>
     *
     * <code>optional int64 download_wait_time_us = 15;</code>
     * @return Whether the downloadWaitTimeUs field is set.
     */
    @java.lang.Override
    public boolean hasDownloadWaitTimeUs() {
      return instance.hasDownloadWaitTimeUs();
    }
    /**
     * <pre>
     * Waiting time before downloading starts. This measures the time between
     * receiving configuration request for a set of data types to starting
     * downloading data of this type.
     * </pre>
     *
     * <code>optional int64 download_wait_time_us = 15;</code>
     * @return The downloadWaitTimeUs.
     */
    @java.lang.Override
    public long getDownloadWaitTimeUs() {
      return instance.getDownloadWaitTimeUs();
    }
    /**
     * <pre>
     * Waiting time before downloading starts. This measures the time between
     * receiving configuration request for a set of data types to starting
     * downloading data of this type.
     * </pre>
     *
     * <code>optional int64 download_wait_time_us = 15;</code>
     * @param value The downloadWaitTimeUs to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadWaitTimeUs(long value) {
      copyOnWrite();
      instance.setDownloadWaitTimeUs(value);
      return this;
    }
    /**
     * <pre>
     * Waiting time before downloading starts. This measures the time between
     * receiving configuration request for a set of data types to starting
     * downloading data of this type.
     * </pre>
     *
     * <code>optional int64 download_wait_time_us = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadWaitTimeUs() {
      copyOnWrite();
      instance.clearDownloadWaitTimeUs();
      return this;
    }

    /**
     * <pre>
     * Time spent on downloading sync data for first time sync.
     * Note: This measures the time between asking backend to download data to
     *       being notified of download-ready by backend. So it consists of
     *       time on data downloading and processing at sync backend. But
     *       downloading time should dominate. It's also the total time spent on
     *       downloading data of all types in the priority group of
     *       |data_type_id| instead of just one data type.
     * </pre>
     *
     * <code>optional int64 download_time_us = 13;</code>
     * @return Whether the downloadTimeUs field is set.
     */
    @java.lang.Override
    public boolean hasDownloadTimeUs() {
      return instance.hasDownloadTimeUs();
    }
    /**
     * <pre>
     * Time spent on downloading sync data for first time sync.
     * Note: This measures the time between asking backend to download data to
     *       being notified of download-ready by backend. So it consists of
     *       time on data downloading and processing at sync backend. But
     *       downloading time should dominate. It's also the total time spent on
     *       downloading data of all types in the priority group of
     *       |data_type_id| instead of just one data type.
     * </pre>
     *
     * <code>optional int64 download_time_us = 13;</code>
     * @return The downloadTimeUs.
     */
    @java.lang.Override
    public long getDownloadTimeUs() {
      return instance.getDownloadTimeUs();
    }
    /**
     * <pre>
     * Time spent on downloading sync data for first time sync.
     * Note: This measures the time between asking backend to download data to
     *       being notified of download-ready by backend. So it consists of
     *       time on data downloading and processing at sync backend. But
     *       downloading time should dominate. It's also the total time spent on
     *       downloading data of all types in the priority group of
     *       |data_type_id| instead of just one data type.
     * </pre>
     *
     * <code>optional int64 download_time_us = 13;</code>
     * @param value The downloadTimeUs to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadTimeUs(long value) {
      copyOnWrite();
      instance.setDownloadTimeUs(value);
      return this;
    }
    /**
     * <pre>
     * Time spent on downloading sync data for first time sync.
     * Note: This measures the time between asking backend to download data to
     *       being notified of download-ready by backend. So it consists of
     *       time on data downloading and processing at sync backend. But
     *       downloading time should dominate. It's also the total time spent on
     *       downloading data of all types in the priority group of
     *       |data_type_id| instead of just one data type.
     * </pre>
     *
     * <code>optional int64 download_time_us = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadTimeUs() {
      copyOnWrite();
      instance.clearDownloadTimeUs();
      return this;
    }

    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @return A list containing the highPriorityTypeConfiguredBefore.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHighPriorityTypeConfiguredBeforeList() {
      return java.util.Collections.unmodifiableList(
          instance.getHighPriorityTypeConfiguredBeforeList());
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @return The count of highPriorityTypeConfiguredBefore.
     */
    @java.lang.Override
    public int getHighPriorityTypeConfiguredBeforeCount() {
      return instance.getHighPriorityTypeConfiguredBeforeCount();
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @param index The index of the element to return.
     * @return The highPriorityTypeConfiguredBefore at the given index.
     */
    @java.lang.Override
    public int getHighPriorityTypeConfiguredBefore(int index) {
      return instance.getHighPriorityTypeConfiguredBefore(index);
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @param value The highPriorityTypeConfiguredBefore to set.
     * @return This builder for chaining.
     */
    public Builder setHighPriorityTypeConfiguredBefore(
        int index, int value) {
      copyOnWrite();
      instance.setHighPriorityTypeConfiguredBefore(index, value);
      return this;
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @param value The highPriorityTypeConfiguredBefore to add.
     * @return This builder for chaining.
     */
    public Builder addHighPriorityTypeConfiguredBefore(int value) {
      copyOnWrite();
      instance.addHighPriorityTypeConfiguredBefore(value);
      return this;
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @param values The highPriorityTypeConfiguredBefore to add.
     * @return This builder for chaining.
     */
    public Builder addAllHighPriorityTypeConfiguredBefore(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllHighPriorityTypeConfiguredBefore(values);
      return this;
    }
    /**
     * <pre>
     * Higher priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 high_priority_type_configured_before = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearHighPriorityTypeConfiguredBefore() {
      copyOnWrite();
      instance.clearHighPriorityTypeConfiguredBefore();
      return this;
    }

    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @return A list containing the samePriorityTypeConfiguredBefore.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSamePriorityTypeConfiguredBeforeList() {
      return java.util.Collections.unmodifiableList(
          instance.getSamePriorityTypeConfiguredBeforeList());
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @return The count of samePriorityTypeConfiguredBefore.
     */
    @java.lang.Override
    public int getSamePriorityTypeConfiguredBeforeCount() {
      return instance.getSamePriorityTypeConfiguredBeforeCount();
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @param index The index of the element to return.
     * @return The samePriorityTypeConfiguredBefore at the given index.
     */
    @java.lang.Override
    public int getSamePriorityTypeConfiguredBefore(int index) {
      return instance.getSamePriorityTypeConfiguredBefore(index);
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @param value The samePriorityTypeConfiguredBefore to set.
     * @return This builder for chaining.
     */
    public Builder setSamePriorityTypeConfiguredBefore(
        int index, int value) {
      copyOnWrite();
      instance.setSamePriorityTypeConfiguredBefore(index, value);
      return this;
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @param value The samePriorityTypeConfiguredBefore to add.
     * @return This builder for chaining.
     */
    public Builder addSamePriorityTypeConfiguredBefore(int value) {
      copyOnWrite();
      instance.addSamePriorityTypeConfiguredBefore(value);
      return this;
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @param values The samePriorityTypeConfiguredBefore to add.
     * @return This builder for chaining.
     */
    public Builder addAllSamePriorityTypeConfiguredBefore(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllSamePriorityTypeConfiguredBefore(values);
      return this;
    }
    /**
     * <pre>
     * Same priority type that's configured before this type.
     * </pre>
     *
     * <code>repeated int32 same_priority_type_configured_before = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearSamePriorityTypeConfiguredBefore() {
      copyOnWrite();
      instance.clearSamePriorityTypeConfiguredBefore();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.DatatypeAssociationStats)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.DatatypeAssociationStats();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "dataTypeId_",
            "downloadTimeUs_",
            "downloadWaitTimeUs_",
            "highPriorityTypeConfiguredBefore_",
            "samePriorityTypeConfiguredBefore_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0013\u0005\u0000\u0002\u0000\u0001\u1004\u0000\r" +
              "\u1002\u0002\u000f\u1002\u0001\u0012\u0016\u0013\u0016";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.DatatypeAssociationStats> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.DatatypeAssociationStats.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.DatatypeAssociationStats>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.DatatypeAssociationStats)
  private static final org.chromium.components.sync.protocol.DatatypeAssociationStats DEFAULT_INSTANCE;
  static {
    DatatypeAssociationStats defaultInstance = new DatatypeAssociationStats();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DatatypeAssociationStats.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.DatatypeAssociationStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DatatypeAssociationStats> PARSER;

  public static com.google.protobuf.Parser<DatatypeAssociationStats> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

