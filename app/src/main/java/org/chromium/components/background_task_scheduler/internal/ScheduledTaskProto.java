// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduled_task.proto

package org.chromium.components.background_task_scheduler.internal;

public final class ScheduledTaskProto {
  private ScheduledTaskProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ScheduledTaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:background_task_scheduler.ScheduledTask)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @return The type.
     */
    org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type getType();

    /**
     * <pre>
     * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
     * </pre>
     *
     * <code>int64 trigger_ms = 2;</code>
     * @return The triggerMs.
     */
    long getTriggerMs();

    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> 
        getExtrasList();
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem getExtras(int index);
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    int getExtrasCount();

    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @return The enum numeric value on the wire for requiredNetworkType.
     */
    int getRequiredNetworkTypeValue();
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @return The requiredNetworkType.
     */
    org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType getRequiredNetworkType();

    /**
     * <pre>
     * Bool representing whether the task requires charging. Stored for an
     * ExactTask. OneOffTask and PeriodicTask objects store this info through
     * their scheduling backend (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>bool requires_charging = 5;</code>
     * @return The requiresCharging.
     */
    boolean getRequiresCharging();
  }
  /**
   * Protobuf type {@code background_task_scheduler.ScheduledTask}
   */
  public  static final class ScheduledTask extends
      com.google.protobuf.GeneratedMessageLite<
          ScheduledTask, ScheduledTask.Builder> implements
      // @@protoc_insertion_point(message_implements:background_task_scheduler.ScheduledTask)
      ScheduledTaskOrBuilder {
    private ScheduledTask() {
      extras_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code background_task_scheduler.ScheduledTask.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ONE_OFF = 0;</code>
       */
      ONE_OFF(0),
      /**
       * <code>PERIODIC = 1;</code>
       */
      PERIODIC(1),
      /**
       * <code>EXACT = 2;</code>
       */
      EXACT(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ONE_OFF = 0;</code>
       */
      public static final int ONE_OFF_VALUE = 0;
      /**
       * <code>PERIODIC = 1;</code>
       */
      public static final int PERIODIC_VALUE = 1;
      /**
       * <code>EXACT = 2;</code>
       */
      public static final int EXACT_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return ONE_OFF;
          case 1: return PERIODIC;
          case 2: return EXACT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              @java.lang.Override
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return TypeVerifier.INSTANCE;
      }

      private static final class TypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Type.forNumber(number) != null;
              }
            };

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:background_task_scheduler.ScheduledTask.Type)
    }

    /**
     * Protobuf enum {@code background_task_scheduler.ScheduledTask.RequiredNetworkType}
     */
    public enum RequiredNetworkType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>ANY = 1;</code>
       */
      ANY(1),
      /**
       * <code>UNMETERED = 2;</code>
       */
      UNMETERED(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>ANY = 1;</code>
       */
      public static final int ANY_VALUE = 1;
      /**
       * <code>UNMETERED = 2;</code>
       */
      public static final int UNMETERED_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequiredNetworkType valueOf(int value) {
        return forNumber(value);
      }

      public static RequiredNetworkType forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return ANY;
          case 2: return UNMETERED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequiredNetworkType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RequiredNetworkType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequiredNetworkType>() {
              @java.lang.Override
              public RequiredNetworkType findValueByNumber(int number) {
                return RequiredNetworkType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return RequiredNetworkTypeVerifier.INSTANCE;
      }

      private static final class RequiredNetworkTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new RequiredNetworkTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return RequiredNetworkType.forNumber(number) != null;
              }
            };

      private final int value;

      private RequiredNetworkType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:background_task_scheduler.ScheduledTask.RequiredNetworkType)
    }

    public interface ExtraItemOrBuilder extends
        // @@protoc_insertion_point(interface_extends:background_task_scheduler.ScheduledTask.ExtraItem)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The key.
       */
      java.lang.String getKey();
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @return The type.
       */
      org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type getType();

      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> 
          getValuesList();
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue getValues(int index);
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      int getValuesCount();
    }
    /**
     * Protobuf type {@code background_task_scheduler.ScheduledTask.ExtraItem}
     */
    public  static final class ExtraItem extends
        com.google.protobuf.GeneratedMessageLite<
            ExtraItem, ExtraItem.Builder> implements
        // @@protoc_insertion_point(message_implements:background_task_scheduler.ScheduledTask.ExtraItem)
        ExtraItemOrBuilder {
      private ExtraItem() {
        key_ = "";
        values_ = emptyProtobufList();
      }
      /**
       * Protobuf enum {@code background_task_scheduler.ScheduledTask.ExtraItem.Type}
       */
      public enum Type
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>SINGLE = 0;</code>
         */
        SINGLE(0),
        /**
         * <code>BOOLEAN_ARRAY = 1;</code>
         */
        BOOLEAN_ARRAY(1),
        /**
         * <code>DOUBLE_ARRAY = 2;</code>
         */
        DOUBLE_ARRAY(2),
        /**
         * <code>INT_ARRAY = 3;</code>
         */
        INT_ARRAY(3),
        /**
         * <code>LONG_ARRAY = 4;</code>
         */
        LONG_ARRAY(4),
        /**
         * <code>STRING_ARRAY = 5;</code>
         */
        STRING_ARRAY(5),
        /**
         * <code>NULL = 6;</code>
         */
        NULL(6),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>SINGLE = 0;</code>
         */
        public static final int SINGLE_VALUE = 0;
        /**
         * <code>BOOLEAN_ARRAY = 1;</code>
         */
        public static final int BOOLEAN_ARRAY_VALUE = 1;
        /**
         * <code>DOUBLE_ARRAY = 2;</code>
         */
        public static final int DOUBLE_ARRAY_VALUE = 2;
        /**
         * <code>INT_ARRAY = 3;</code>
         */
        public static final int INT_ARRAY_VALUE = 3;
        /**
         * <code>LONG_ARRAY = 4;</code>
         */
        public static final int LONG_ARRAY_VALUE = 4;
        /**
         * <code>STRING_ARRAY = 5;</code>
         */
        public static final int STRING_ARRAY_VALUE = 5;
        /**
         * <code>NULL = 6;</code>
         */
        public static final int NULL_VALUE = 6;


        @java.lang.Override
        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 0: return SINGLE;
            case 1: return BOOLEAN_ARRAY;
            case 2: return DOUBLE_ARRAY;
            case 3: return INT_ARRAY;
            case 4: return LONG_ARRAY;
            case 5: return STRING_ARRAY;
            case 6: return NULL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Type> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                @java.lang.Override
                public Type findValueByNumber(int number) {
                  return Type.forNumber(number);
                }
              };

        public static com.google.protobuf.Internal.EnumVerifier 
            internalGetVerifier() {
          return TypeVerifier.INSTANCE;
        }

        private static final class TypeVerifier implements 
             com.google.protobuf.Internal.EnumVerifier { 
                static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
                @java.lang.Override
                public boolean isInRange(int number) {
                  return Type.forNumber(number) != null;
                }
              };

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:background_task_scheduler.ScheduledTask.ExtraItem.Type)
      }

      public interface ExtraValueOrBuilder extends
          // @@protoc_insertion_point(interface_extends:background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>bool boolean_value = 1;</code>
         * @return The booleanValue.
         */
        boolean getBooleanValue();

        /**
         * <code>double double_value = 2;</code>
         * @return The doubleValue.
         */
        double getDoubleValue();

        /**
         * <code>int32 int_value = 3;</code>
         * @return The intValue.
         */
        int getIntValue();

        /**
         * <code>int64 long_value = 4;</code>
         * @return The longValue.
         */
        long getLongValue();

        /**
         * <code>string string_value = 5;</code>
         * @return The stringValue.
         */
        java.lang.String getStringValue();
        /**
         * <code>string string_value = 5;</code>
         * @return The bytes for stringValue.
         */
        com.google.protobuf.ByteString
            getStringValueBytes();

        public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.OneofValueCase getOneofValueCase();
      }
      /**
       * Protobuf type {@code background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue}
       */
      public  static final class ExtraValue extends
          com.google.protobuf.GeneratedMessageLite<
              ExtraValue, ExtraValue.Builder> implements
          // @@protoc_insertion_point(message_implements:background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue)
          ExtraValueOrBuilder {
        private ExtraValue() {
        }
        private int oneofValueCase_ = 0;
        private java.lang.Object oneofValue_;
        public enum OneofValueCase {
          BOOLEAN_VALUE(1),
          DOUBLE_VALUE(2),
          INT_VALUE(3),
          LONG_VALUE(4),
          STRING_VALUE(5),
          ONEOFVALUE_NOT_SET(0);
          private final int value;
          private OneofValueCase(int value) {
            this.value = value;
          }
          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static OneofValueCase valueOf(int value) {
            return forNumber(value);
          }

          public static OneofValueCase forNumber(int value) {
            switch (value) {
              case 1: return BOOLEAN_VALUE;
              case 2: return DOUBLE_VALUE;
              case 3: return INT_VALUE;
              case 4: return LONG_VALUE;
              case 5: return STRING_VALUE;
              case 0: return ONEOFVALUE_NOT_SET;
              default: return null;
            }
          }
          public int getNumber() {
            return this.value;
          }
        };

        @java.lang.Override
        public OneofValueCase
        getOneofValueCase() {
          return OneofValueCase.forNumber(
              oneofValueCase_);
        }

        private void clearOneofValue() {
          oneofValueCase_ = 0;
          oneofValue_ = null;
        }

        public static final int BOOLEAN_VALUE_FIELD_NUMBER = 1;
        /**
         * <code>bool boolean_value = 1;</code>
         * @return The booleanValue.
         */
        @java.lang.Override
        public boolean getBooleanValue() {
          if (oneofValueCase_ == 1) {
            return (java.lang.Boolean) oneofValue_;
          }
          return false;
        }
        /**
         * <code>bool boolean_value = 1;</code>
         * @param value The booleanValue to set.
         */
        private void setBooleanValue(boolean value) {
          oneofValueCase_ = 1;
          oneofValue_ = value;
        }
        /**
         * <code>bool boolean_value = 1;</code>
         */
        private void clearBooleanValue() {
          if (oneofValueCase_ == 1) {
            oneofValueCase_ = 0;
            oneofValue_ = null;
          }
        }

        public static final int DOUBLE_VALUE_FIELD_NUMBER = 2;
        /**
         * <code>double double_value = 2;</code>
         * @return The doubleValue.
         */
        @java.lang.Override
        public double getDoubleValue() {
          if (oneofValueCase_ == 2) {
            return (java.lang.Double) oneofValue_;
          }
          return 0D;
        }
        /**
         * <code>double double_value = 2;</code>
         * @param value The doubleValue to set.
         */
        private void setDoubleValue(double value) {
          oneofValueCase_ = 2;
          oneofValue_ = value;
        }
        /**
         * <code>double double_value = 2;</code>
         */
        private void clearDoubleValue() {
          if (oneofValueCase_ == 2) {
            oneofValueCase_ = 0;
            oneofValue_ = null;
          }
        }

        public static final int INT_VALUE_FIELD_NUMBER = 3;
        /**
         * <code>int32 int_value = 3;</code>
         * @return The intValue.
         */
        @java.lang.Override
        public int getIntValue() {
          if (oneofValueCase_ == 3) {
            return (java.lang.Integer) oneofValue_;
          }
          return 0;
        }
        /**
         * <code>int32 int_value = 3;</code>
         * @param value The intValue to set.
         */
        private void setIntValue(int value) {
          oneofValueCase_ = 3;
          oneofValue_ = value;
        }
        /**
         * <code>int32 int_value = 3;</code>
         */
        private void clearIntValue() {
          if (oneofValueCase_ == 3) {
            oneofValueCase_ = 0;
            oneofValue_ = null;
          }
        }

        public static final int LONG_VALUE_FIELD_NUMBER = 4;
        /**
         * <code>int64 long_value = 4;</code>
         * @return The longValue.
         */
        @java.lang.Override
        public long getLongValue() {
          if (oneofValueCase_ == 4) {
            return (java.lang.Long) oneofValue_;
          }
          return 0L;
        }
        /**
         * <code>int64 long_value = 4;</code>
         * @param value The longValue to set.
         */
        private void setLongValue(long value) {
          oneofValueCase_ = 4;
          oneofValue_ = value;
        }
        /**
         * <code>int64 long_value = 4;</code>
         */
        private void clearLongValue() {
          if (oneofValueCase_ == 4) {
            oneofValueCase_ = 0;
            oneofValue_ = null;
          }
        }

        public static final int STRING_VALUE_FIELD_NUMBER = 5;
        /**
         * <code>string string_value = 5;</code>
         * @return The stringValue.
         */
        @java.lang.Override
        public java.lang.String getStringValue() {
          java.lang.String ref = "";
          if (oneofValueCase_ == 5) {
            ref = (java.lang.String) oneofValue_;
          }
          return ref;
        }
        /**
         * <code>string string_value = 5;</code>
         * @return The bytes for stringValue.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.String ref = "";
          if (oneofValueCase_ == 5) {
            ref = (java.lang.String) oneofValue_;
          }
          return com.google.protobuf.ByteString.copyFromUtf8(ref);
        }
        /**
         * <code>string string_value = 5;</code>
         * @param value The stringValue to set.
         */
        private void setStringValue(
            java.lang.String value) {
          value.getClass();
  oneofValueCase_ = 5;
          oneofValue_ = value;
        }
        /**
         * <code>string string_value = 5;</code>
         */
        private void clearStringValue() {
          if (oneofValueCase_ == 5) {
            oneofValueCase_ = 0;
            oneofValue_ = null;
          }
        }
        /**
         * <code>string string_value = 5;</code>
         * @param value The bytes for stringValue to set.
         */
        private void setStringValueBytes(
            com.google.protobuf.ByteString value) {
          checkByteStringIsUtf8(value);
          oneofValue_ = value.toStringUtf8();
          oneofValueCase_ = 5;
        }

        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return (Builder) DEFAULT_INSTANCE.createBuilder();
        }
        public static Builder newBuilder(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue prototype) {
          return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         * Protobuf type {@code background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue, Builder> implements
            // @@protoc_insertion_point(builder_implements:background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue)
            org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValueOrBuilder {
          // Construct using org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.newBuilder()
          private Builder() {
            super(DEFAULT_INSTANCE);
          }

          @java.lang.Override
          public OneofValueCase
              getOneofValueCase() {
            return instance.getOneofValueCase();
          }

          public Builder clearOneofValue() {
            copyOnWrite();
            instance.clearOneofValue();
            return this;
          }


          /**
           * <code>bool boolean_value = 1;</code>
           * @return The booleanValue.
           */
          @java.lang.Override
          public boolean getBooleanValue() {
            return instance.getBooleanValue();
          }
          /**
           * <code>bool boolean_value = 1;</code>
           * @param value The booleanValue to set.
           * @return This builder for chaining.
           */
          public Builder setBooleanValue(boolean value) {
            copyOnWrite();
            instance.setBooleanValue(value);
            return this;
          }
          /**
           * <code>bool boolean_value = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearBooleanValue() {
            copyOnWrite();
            instance.clearBooleanValue();
            return this;
          }

          /**
           * <code>double double_value = 2;</code>
           * @return The doubleValue.
           */
          @java.lang.Override
          public double getDoubleValue() {
            return instance.getDoubleValue();
          }
          /**
           * <code>double double_value = 2;</code>
           * @param value The doubleValue to set.
           * @return This builder for chaining.
           */
          public Builder setDoubleValue(double value) {
            copyOnWrite();
            instance.setDoubleValue(value);
            return this;
          }
          /**
           * <code>double double_value = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearDoubleValue() {
            copyOnWrite();
            instance.clearDoubleValue();
            return this;
          }

          /**
           * <code>int32 int_value = 3;</code>
           * @return The intValue.
           */
          @java.lang.Override
          public int getIntValue() {
            return instance.getIntValue();
          }
          /**
           * <code>int32 int_value = 3;</code>
           * @param value The intValue to set.
           * @return This builder for chaining.
           */
          public Builder setIntValue(int value) {
            copyOnWrite();
            instance.setIntValue(value);
            return this;
          }
          /**
           * <code>int32 int_value = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearIntValue() {
            copyOnWrite();
            instance.clearIntValue();
            return this;
          }

          /**
           * <code>int64 long_value = 4;</code>
           * @return The longValue.
           */
          @java.lang.Override
          public long getLongValue() {
            return instance.getLongValue();
          }
          /**
           * <code>int64 long_value = 4;</code>
           * @param value The longValue to set.
           * @return This builder for chaining.
           */
          public Builder setLongValue(long value) {
            copyOnWrite();
            instance.setLongValue(value);
            return this;
          }
          /**
           * <code>int64 long_value = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearLongValue() {
            copyOnWrite();
            instance.clearLongValue();
            return this;
          }

          /**
           * <code>string string_value = 5;</code>
           * @return The stringValue.
           */
          @java.lang.Override
          public java.lang.String getStringValue() {
            return instance.getStringValue();
          }
          /**
           * <code>string string_value = 5;</code>
           * @return The bytes for stringValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getStringValueBytes() {
            return instance.getStringValueBytes();
          }
          /**
           * <code>string string_value = 5;</code>
           * @param value The stringValue to set.
           * @return This builder for chaining.
           */
          public Builder setStringValue(
              java.lang.String value) {
            copyOnWrite();
            instance.setStringValue(value);
            return this;
          }
          /**
           * <code>string string_value = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearStringValue() {
            copyOnWrite();
            instance.clearStringValue();
            return this;
          }
          /**
           * <code>string string_value = 5;</code>
           * @param value The bytes for stringValue to set.
           * @return This builder for chaining.
           */
          public Builder setStringValueBytes(
              com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setStringValueBytes(value);
            return this;
          }

          // @@protoc_insertion_point(builder_scope:background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue)
        }
        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            java.lang.Object arg0, java.lang.Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE: {
              return new org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue();
            }
            case NEW_BUILDER: {
              return new Builder();
            }
            case BUILD_MESSAGE_INFO: {
                java.lang.Object[] objects = new java.lang.Object[] {
                  "oneofValue_",
                  "oneofValueCase_",
                };
                java.lang.String info =
                    "\u0000\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001:\u0000\u00023" +
                    "\u0000\u00037\u0000\u00045\u0000\u0005\u023b\u0000";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
            case GET_DEFAULT_INSTANCE: {
              return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
              com.google.protobuf.Parser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> parser = PARSER;
              if (parser == null) {
                synchronized (org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.class) {
                  parser = PARSER;
                  if (parser == null) {
                    parser =
                        new DefaultInstanceBasedParser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue>(
                            DEFAULT_INSTANCE);
                    PARSER = parser;
                  }
                }
              }
              return parser;
          }
          case GET_MEMOIZED_IS_INITIALIZED: {
            return (byte) 1;
          }
          case SET_MEMOIZED_IS_INITIALIZED: {
            return null;
          }
          }
          throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue)
        private static final org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue DEFAULT_INSTANCE;
        static {
          ExtraValue defaultInstance = new ExtraValue();
          // New instances are implicitly immutable so no need to make
          // immutable.
          DEFAULT_INSTANCE = defaultInstance;
          com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
            ExtraValue.class, defaultInstance);
        }

        public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<ExtraValue> PARSER;

        public static com.google.protobuf.Parser<ExtraValue> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.String key_;
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        return key_;
      }
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(key_);
      }
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The key to set.
       */
      private void setKey(
          java.lang.String value) {
        value.getClass();
  
        key_ = value;
      }
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      private void clearKey() {
        
        key_ = getDefaultInstance().getKey();
      }
      /**
       * <pre>
       * The key set for this item in the extras.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       */
      private void setKeyBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        key_ = value.toStringUtf8();
        
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type getType() {
        org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type result = org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type.forNumber(type_);
        return result == null ? org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       */
      private void setTypeValue(int value) {
          type_ = value;
      }
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       * @param value The type to set.
       */
      private void setType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type value) {
        type_ = value.getNumber();
        
      }
      /**
       * <pre>
       * The type of the value associated with this item.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
       */
      private void clearType() {
        
        type_ = 0;
      }

      public static final int VALUES_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.ProtobufList<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> values_;
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> getValuesList() {
        return values_;
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      public java.util.List<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValueOrBuilder> 
          getValuesOrBuilderList() {
        return values_;
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      @java.lang.Override
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue getValues(int index) {
        return values_.get(index);
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValueOrBuilder getValuesOrBuilder(
          int index) {
        return values_.get(index);
      }
      private void ensureValuesIsMutable() {
        com.google.protobuf.Internal.ProtobufList<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> tmp = values_;
        if (!tmp.isModifiable()) {
          values_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void setValues(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
        value.getClass();
  ensureValuesIsMutable();
        values_.set(index, value);
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void addValues(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
        value.getClass();
  ensureValuesIsMutable();
        values_.add(value);
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void addValues(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
        value.getClass();
  ensureValuesIsMutable();
        values_.add(index, value);
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void addAllValues(
          java.lang.Iterable<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, values_);
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void clearValues() {
        values_ = emptyProtobufList();
      }
      /**
       * <pre>
       * Value set for this item in the extras. Non-array types will store only
       * one element in this repeated field. Null types will not store any element
       * in this field. All the types supported in the extras field can be stored
       * in the ExtraValue message.
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
       */
      private void removeValues(int index) {
        ensureValuesIsMutable();
        values_.remove(index);
      }

      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code background_task_scheduler.ScheduledTask.ExtraItem}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem, Builder> implements
          // @@protoc_insertion_point(builder_implements:background_task_scheduler.ScheduledTask.ExtraItem)
          org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItemOrBuilder {
        // Construct using org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The key set for this item in the extras.
         * </pre>
         *
         * <code>string key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public java.lang.String getKey() {
          return instance.getKey();
        }
        /**
         * <pre>
         * The key set for this item in the extras.
         * </pre>
         *
         * <code>string key = 1;</code>
         * @return The bytes for key.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getKeyBytes() {
          return instance.getKeyBytes();
        }
        /**
         * <pre>
         * The key set for this item in the extras.
         * </pre>
         *
         * <code>string key = 1;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(
            java.lang.String value) {
          copyOnWrite();
          instance.setKey(value);
          return this;
        }
        /**
         * <pre>
         * The key set for this item in the extras.
         * </pre>
         *
         * <code>string key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          copyOnWrite();
          instance.clearKey();
          return this;
        }
        /**
         * <pre>
         * The key set for this item in the extras.
         * </pre>
         *
         * <code>string key = 1;</code>
         * @param value The bytes for key to set.
         * @return This builder for chaining.
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setKeyBytes(value);
          return this;
        }

        /**
         * <pre>
         * The type of the value associated with this item.
         * </pre>
         *
         * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override
        public int getTypeValue() {
          return instance.getTypeValue();
        }
        /**
         * <pre>
         * The type of the value associated with this item.
         * </pre>
         *
         * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          copyOnWrite();
          instance.setTypeValue(value);
          return this;
        }
        /**
         * <pre>
         * The type of the value associated with this item.
         * </pre>
         *
         * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type getType() {
          return instance.getType();
        }
        /**
         * <pre>
         * The type of the value associated with this item.
         * </pre>
         *
         * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Type value) {
          copyOnWrite();
          instance.setType(value);
          return this;
        }
        /**
         * <pre>
         * The type of the value associated with this item.
         * </pre>
         *
         * <code>.background_task_scheduler.ScheduledTask.ExtraItem.Type type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          copyOnWrite();
          instance.clearType();
          return this;
        }

        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> getValuesList() {
          return java.util.Collections.unmodifiableList(
              instance.getValuesList());
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        @java.lang.Override
        public int getValuesCount() {
          return instance.getValuesCount();
        }/**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        @java.lang.Override
        public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue getValues(int index) {
          return instance.getValues(index);
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder setValues(
            int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
          copyOnWrite();
          instance.setValues(index, value);
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder setValues(
            int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.Builder builderForValue) {
          copyOnWrite();
          instance.setValues(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder addValues(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
          copyOnWrite();
          instance.addValues(value);
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder addValues(
            int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue value) {
          copyOnWrite();
          instance.addValues(index, value);
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder addValues(
            org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.Builder builderForValue) {
          copyOnWrite();
          instance.addValues(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder addValues(
            int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.Builder builderForValue) {
          copyOnWrite();
          instance.addValues(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue> values) {
          copyOnWrite();
          instance.addAllValues(values);
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder clearValues() {
          copyOnWrite();
          instance.clearValues();
          return this;
        }
        /**
         * <pre>
         * Value set for this item in the extras. Non-array types will store only
         * one element in this repeated field. Null types will not store any element
         * in this field. All the types supported in the extras field can be stored
         * in the ExtraValue message.
         * </pre>
         *
         * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem.ExtraValue values = 3;</code>
         */
        public Builder removeValues(int index) {
          copyOnWrite();
          instance.removeValues(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:background_task_scheduler.ScheduledTask.ExtraItem)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "key_",
                "type_",
                "values_",
                org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.ExtraValue.class,
              };
              java.lang.String info =
                  "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0208\u0002\f" +
                  "\u0003\u001b";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:background_task_scheduler.ScheduledTask.ExtraItem)
      private static final org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem DEFAULT_INSTANCE;
      static {
        ExtraItem defaultInstance = new ExtraItem();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ExtraItem.class, defaultInstance);
      }

      public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ExtraItem> PARSER;

      public static com.google.protobuf.Parser<ExtraItem> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type getType() {
      org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type result = org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type.forNumber(type_);
      return result == null ? org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type value) {
      type_ = value.getNumber();
      
    }
    /**
     * <pre>
     * The type of the scheduled task.
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int TRIGGER_MS_FIELD_NUMBER = 2;
    private long triggerMs_;
    /**
     * <pre>
     * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
     * </pre>
     *
     * <code>int64 trigger_ms = 2;</code>
     * @return The triggerMs.
     */
    @java.lang.Override
    public long getTriggerMs() {
      return triggerMs_;
    }
    /**
     * <pre>
     * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
     * </pre>
     *
     * <code>int64 trigger_ms = 2;</code>
     * @param value The triggerMs to set.
     */
    private void setTriggerMs(long value) {
      
      triggerMs_ = value;
    }
    /**
     * <pre>
     * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
     * </pre>
     *
     * <code>int64 trigger_ms = 2;</code>
     */
    private void clearTriggerMs() {
      
      triggerMs_ = 0L;
    }

    public static final int EXTRAS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> extras_;
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> getExtrasList() {
      return extras_;
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    public java.util.List<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItemOrBuilder> 
        getExtrasOrBuilderList() {
      return extras_;
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    @java.lang.Override
    public int getExtrasCount() {
      return extras_.size();
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem getExtras(int index) {
      return extras_.get(index);
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItemOrBuilder getExtrasOrBuilder(
        int index) {
      return extras_.get(index);
    }
    private void ensureExtrasIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> tmp = extras_;
      if (!tmp.isModifiable()) {
        extras_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void setExtras(
        int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
      value.getClass();
  ensureExtrasIsMutable();
      extras_.set(index, value);
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void addExtras(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
      value.getClass();
  ensureExtrasIsMutable();
      extras_.add(value);
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void addExtras(
        int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
      value.getClass();
  ensureExtrasIsMutable();
      extras_.add(index, value);
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void addAllExtras(
        java.lang.Iterable<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> values) {
      ensureExtrasIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extras_);
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void clearExtras() {
      extras_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
     * PeriodicTask objects store their extras through their scheduling backend
     * (JobScheduler and GcmNetworkManager).
     * </pre>
     *
     * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
     */
    private void removeExtras(int index) {
      ensureExtrasIsMutable();
      extras_.remove(index);
    }

    public static final int REQUIRED_NETWORK_TYPE_FIELD_NUMBER = 4;
    private int requiredNetworkType_;
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @return The enum numeric value on the wire for requiredNetworkType.
     */
    @java.lang.Override
    public int getRequiredNetworkTypeValue() {
      return requiredNetworkType_;
    }
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @return The requiredNetworkType.
     */
    @java.lang.Override
    public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType getRequiredNetworkType() {
      org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType result = org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType.forNumber(requiredNetworkType_);
      return result == null ? org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @param value The enum numeric value on the wire for requiredNetworkType to set.
     */
    private void setRequiredNetworkTypeValue(int value) {
        requiredNetworkType_ = value;
    }
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     * @param value The requiredNetworkType to set.
     */
    private void setRequiredNetworkType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType value) {
      requiredNetworkType_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
     * objects store their required network type through their scheduling backend
     * (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
     */
    private void clearRequiredNetworkType() {
      
      requiredNetworkType_ = 0;
    }

    public static final int REQUIRES_CHARGING_FIELD_NUMBER = 5;
    private boolean requiresCharging_;
    /**
     * <pre>
     * Bool representing whether the task requires charging. Stored for an
     * ExactTask. OneOffTask and PeriodicTask objects store this info through
     * their scheduling backend (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>bool requires_charging = 5;</code>
     * @return The requiresCharging.
     */
    @java.lang.Override
    public boolean getRequiresCharging() {
      return requiresCharging_;
    }
    /**
     * <pre>
     * Bool representing whether the task requires charging. Stored for an
     * ExactTask. OneOffTask and PeriodicTask objects store this info through
     * their scheduling backend (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>bool requires_charging = 5;</code>
     * @param value The requiresCharging to set.
     */
    private void setRequiresCharging(boolean value) {
      
      requiresCharging_ = value;
    }
    /**
     * <pre>
     * Bool representing whether the task requires charging. Stored for an
     * ExactTask. OneOffTask and PeriodicTask objects store this info through
     * their scheduling backend (JobScheduler and GCMNetworkManager).
     * </pre>
     *
     * <code>bool requires_charging = 5;</code>
     */
    private void clearRequiresCharging() {
      
      requiresCharging_ = false;
    }

    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code background_task_scheduler.ScheduledTask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask, Builder> implements
        // @@protoc_insertion_point(builder_implements:background_task_scheduler.ScheduledTask)
        org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTaskOrBuilder {
      // Construct using org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The type of the scheduled task.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <pre>
       * The type of the scheduled task.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * The type of the scheduled task.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * The type of the scheduled task.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.Type value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * The type of the scheduled task.
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
       * </pre>
       *
       * <code>int64 trigger_ms = 2;</code>
       * @return The triggerMs.
       */
      @java.lang.Override
      public long getTriggerMs() {
        return instance.getTriggerMs();
      }
      /**
       * <pre>
       * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
       * </pre>
       *
       * <code>int64 trigger_ms = 2;</code>
       * @param value The triggerMs to set.
       * @return This builder for chaining.
       */
      public Builder setTriggerMs(long value) {
        copyOnWrite();
        instance.setTriggerMs(value);
        return this;
      }
      /**
       * <pre>
       * UTC timestamp at which an ExactTask will be triggered by AlarmManager.
       * </pre>
       *
       * <code>int64 trigger_ms = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTriggerMs() {
        copyOnWrite();
        instance.clearTriggerMs();
        return this;
      }

      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> getExtrasList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtrasList());
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      @java.lang.Override
      public int getExtrasCount() {
        return instance.getExtrasCount();
      }/**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem getExtras(int index) {
        return instance.getExtras(index);
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder setExtras(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
        copyOnWrite();
        instance.setExtras(index, value);
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder setExtras(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Builder builderForValue) {
        copyOnWrite();
        instance.setExtras(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder addExtras(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
        copyOnWrite();
        instance.addExtras(value);
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder addExtras(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem value) {
        copyOnWrite();
        instance.addExtras(index, value);
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder addExtras(
          org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder addExtras(
          int index, org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder addAllExtras(
          java.lang.Iterable<? extends org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem> values) {
        copyOnWrite();
        instance.addAllExtras(values);
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder clearExtras() {
        copyOnWrite();
        instance.clearExtras();
        return this;
      }
      /**
       * <pre>
       * Extras for the BackgroundTask, stored for an ExactTask. OneOffTask and
       * PeriodicTask objects store their extras through their scheduling backend
       * (JobScheduler and GcmNetworkManager).
       * </pre>
       *
       * <code>repeated .background_task_scheduler.ScheduledTask.ExtraItem extras = 3;</code>
       */
      public Builder removeExtras(int index) {
        copyOnWrite();
        instance.removeExtras(index);
        return this;
      }

      /**
       * <pre>
       * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
       * objects store their required network type through their scheduling backend
       * (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
       * @return The enum numeric value on the wire for requiredNetworkType.
       */
      @java.lang.Override
      public int getRequiredNetworkTypeValue() {
        return instance.getRequiredNetworkTypeValue();
      }
      /**
       * <pre>
       * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
       * objects store their required network type through their scheduling backend
       * (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
       * @param value The requiredNetworkType to set.
       * @return This builder for chaining.
       */
      public Builder setRequiredNetworkTypeValue(int value) {
        copyOnWrite();
        instance.setRequiredNetworkTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
       * objects store their required network type through their scheduling backend
       * (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
       * @return The requiredNetworkType.
       */
      @java.lang.Override
      public org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType getRequiredNetworkType() {
        return instance.getRequiredNetworkType();
      }
      /**
       * <pre>
       * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
       * objects store their required network type through their scheduling backend
       * (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
       * @param value The enum numeric value on the wire for requiredNetworkType to set.
       * @return This builder for chaining.
       */
      public Builder setRequiredNetworkType(org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.RequiredNetworkType value) {
        copyOnWrite();
        instance.setRequiredNetworkType(value);
        return this;
      }
      /**
       * <pre>
       * Required network type, stored for an ExactTask. OneOffTask and PeriodicTask
       * objects store their required network type through their scheduling backend
       * (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>.background_task_scheduler.ScheduledTask.RequiredNetworkType required_network_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequiredNetworkType() {
        copyOnWrite();
        instance.clearRequiredNetworkType();
        return this;
      }

      /**
       * <pre>
       * Bool representing whether the task requires charging. Stored for an
       * ExactTask. OneOffTask and PeriodicTask objects store this info through
       * their scheduling backend (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>bool requires_charging = 5;</code>
       * @return The requiresCharging.
       */
      @java.lang.Override
      public boolean getRequiresCharging() {
        return instance.getRequiresCharging();
      }
      /**
       * <pre>
       * Bool representing whether the task requires charging. Stored for an
       * ExactTask. OneOffTask and PeriodicTask objects store this info through
       * their scheduling backend (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>bool requires_charging = 5;</code>
       * @param value The requiresCharging to set.
       * @return This builder for chaining.
       */
      public Builder setRequiresCharging(boolean value) {
        copyOnWrite();
        instance.setRequiresCharging(value);
        return this;
      }
      /**
       * <pre>
       * Bool representing whether the task requires charging. Stored for an
       * ExactTask. OneOffTask and PeriodicTask objects store this info through
       * their scheduling backend (JobScheduler and GCMNetworkManager).
       * </pre>
       *
       * <code>bool requires_charging = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequiresCharging() {
        copyOnWrite();
        instance.clearRequiresCharging();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:background_task_scheduler.ScheduledTask)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "triggerMs_",
              "extras_",
              org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.ExtraItem.class,
              "requiredNetworkType_",
              "requiresCharging_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0001\u0000\u0001\f\u0002\u0002" +
                "\u0003\u001b\u0004\f\u0005\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:background_task_scheduler.ScheduledTask)
    private static final org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask DEFAULT_INSTANCE;
    static {
      ScheduledTask defaultInstance = new ScheduledTask();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ScheduledTask.class, defaultInstance);
    }

    public static org.chromium.components.background_task_scheduler.internal.ScheduledTaskProto.ScheduledTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ScheduledTask> PARSER;

    public static com.google.protobuf.Parser<ScheduledTask> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
