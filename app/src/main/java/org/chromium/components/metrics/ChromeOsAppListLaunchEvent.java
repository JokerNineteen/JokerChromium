// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chrome_os_app_list_launch_event.proto

package org.chromium.components.metrics;

public final class ChromeOsAppListLaunchEvent {
  private ChromeOsAppListLaunchEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ChromeOSAppListLaunchEventProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:metrics.ChromeOSAppListLaunchEventProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     * @return Whether the recurrenceRankerUserId field is set.
     */
    boolean hasRecurrenceRankerUserId();
    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     * @return The recurrenceRankerUserId.
     */
    long getRecurrenceRankerUserId();

    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     * @return Whether the launchType field is set.
     */
    boolean hasLaunchType();
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     * @return The launchType.
     */
    org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType getLaunchType();

    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     * @return Whether the hour field is set.
     */
    boolean hasHour();
    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     * @return The hour.
     */
    int getHour();

    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     * @return Whether the searchQueryLength field is set.
     */
    boolean hasSearchQueryLength();
    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     * @return The searchQueryLength.
     */
    int getSearchQueryLength();

    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     * @return Whether the hashedTarget field is set.
     */
    boolean hasHashedTarget();
    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     * @return The hashedTarget.
     */
    long getHashedTarget();

    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     * @return Whether the hashedQuery field is set.
     */
    boolean hasHashedQuery();
    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     * @return The hashedQuery.
     */
    long getHashedQuery();

    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     * @return Whether the hashedDomain field is set.
     */
    boolean hasHashedDomain();
    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     * @return The hashedDomain.
     */
    long getHashedDomain();

    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     * @return Whether the hashedApp field is set.
     */
    boolean hasHashedApp();
    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     * @return The hashedApp.
     */
    long getHashedApp();

    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     * @return Whether the searchProviderType field is set.
     */
    boolean hasSearchProviderType();
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     * @return The searchProviderType.
     */
    org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType getSearchProviderType();
  }
  /**
   * <pre>
   * Provides information about the launch of an item (such as an app or a file)
   * from the ChromeOS launcher. One event is recorded for every launch
   * originating from any launcher UI component, and this is the only circumstance
   * that records events. All fields prefixed with "hashed_" are hashed-and-
   * peppered values: the value is concatenated with a user-specific secret value,
   * and then hashed. For privacy reasons this process is designed to be one-way,
   * so that the server cannot easily recover the original values.
   * Next tag: 10
   * </pre>
   *
   * Protobuf type {@code metrics.ChromeOSAppListLaunchEventProto}
   */
  public  static final class ChromeOSAppListLaunchEventProto extends
      com.google.protobuf.GeneratedMessageLite<
          ChromeOSAppListLaunchEventProto, ChromeOSAppListLaunchEventProto.Builder> implements
      // @@protoc_insertion_point(message_implements:metrics.ChromeOSAppListLaunchEventProto)
      ChromeOSAppListLaunchEventProtoOrBuilder {
    private ChromeOSAppListLaunchEventProto() {
    }
    /**
     * <pre>
     * Enumerates the different UI components of the launcher that a user can
     * perform a launch from.
     * </pre>
     *
     * Protobuf enum {@code metrics.ChromeOSAppListLaunchEventProto.LaunchType}
     */
    public enum LaunchType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * No launch type specified. This is invalid and will cause the event to be
       * dropped.
       * </pre>
       *
       * <code>LAUNCH_TYPE_UNSPECIFIED = 0;</code>
       */
      LAUNCH_TYPE_UNSPECIFIED(0),
      /**
       * <pre>
       * Launches from the zero-state suggested apps chips or app search result
       * tiles.
       * </pre>
       *
       * <code>APP_TILES = 1;</code>
       */
      APP_TILES(1),
      /**
       * <pre>
       * Launches from the non-apps search result list.
       * </pre>
       *
       * <code>RESULTS_LIST = 2;</code>
       */
      RESULTS_LIST(2),
      ;

      /**
       * <pre>
       * No launch type specified. This is invalid and will cause the event to be
       * dropped.
       * </pre>
       *
       * <code>LAUNCH_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int LAUNCH_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Launches from the zero-state suggested apps chips or app search result
       * tiles.
       * </pre>
       *
       * <code>APP_TILES = 1;</code>
       */
      public static final int APP_TILES_VALUE = 1;
      /**
       * <pre>
       * Launches from the non-apps search result list.
       * </pre>
       *
       * <code>RESULTS_LIST = 2;</code>
       */
      public static final int RESULTS_LIST_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LaunchType valueOf(int value) {
        return forNumber(value);
      }

      public static LaunchType forNumber(int value) {
        switch (value) {
          case 0: return LAUNCH_TYPE_UNSPECIFIED;
          case 1: return APP_TILES;
          case 2: return RESULTS_LIST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LaunchType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LaunchType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LaunchType>() {
              @java.lang.Override
              public LaunchType findValueByNumber(int number) {
                return LaunchType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return LaunchTypeVerifier.INSTANCE;
      }

      private static final class LaunchTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LaunchTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return LaunchType.forNumber(number) != null;
              }
            };

      private final int value;

      private LaunchType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:metrics.ChromeOSAppListLaunchEventProto.LaunchType)
    }

    /**
     * <pre>
     * Which search provider produced the launched item.
     * </pre>
     *
     * Protobuf enum {@code metrics.ChromeOSAppListLaunchEventProto.SearchProviderType}
     */
    public enum SearchProviderType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * No result type specified.
       * </pre>
       *
       * <code>PROVIDER_UNSPECIFIED = 0;</code>
       */
      PROVIDER_UNSPECIFIED(0),
      /**
       * <pre>
       * Recent queries from the Omnibox provider.
       * </pre>
       *
       * <code>OMNIBOX = 1;</code>
       */
      OMNIBOX(1),
      /**
       * <pre>
       * Zero-state files provider.
       * </pre>
       *
       * <code>ZERO_STATE_FILE = 2;</code>
       */
      ZERO_STATE_FILE(2),
      /**
       * <pre>
       * Drive QuickAccess provider.
       * </pre>
       *
       * <code>DRIVE_QUICK_ACCESS = 3;</code>
       */
      DRIVE_QUICK_ACCESS(3),
      ;

      /**
       * <pre>
       * No result type specified.
       * </pre>
       *
       * <code>PROVIDER_UNSPECIFIED = 0;</code>
       */
      public static final int PROVIDER_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Recent queries from the Omnibox provider.
       * </pre>
       *
       * <code>OMNIBOX = 1;</code>
       */
      public static final int OMNIBOX_VALUE = 1;
      /**
       * <pre>
       * Zero-state files provider.
       * </pre>
       *
       * <code>ZERO_STATE_FILE = 2;</code>
       */
      public static final int ZERO_STATE_FILE_VALUE = 2;
      /**
       * <pre>
       * Drive QuickAccess provider.
       * </pre>
       *
       * <code>DRIVE_QUICK_ACCESS = 3;</code>
       */
      public static final int DRIVE_QUICK_ACCESS_VALUE = 3;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SearchProviderType valueOf(int value) {
        return forNumber(value);
      }

      public static SearchProviderType forNumber(int value) {
        switch (value) {
          case 0: return PROVIDER_UNSPECIFIED;
          case 1: return OMNIBOX;
          case 2: return ZERO_STATE_FILE;
          case 3: return DRIVE_QUICK_ACCESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SearchProviderType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SearchProviderType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SearchProviderType>() {
              @java.lang.Override
              public SearchProviderType findValueByNumber(int number) {
                return SearchProviderType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return SearchProviderTypeVerifier.INSTANCE;
      }

      private static final class SearchProviderTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SearchProviderTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return SearchProviderType.forNumber(number) != null;
              }
            };

      private final int value;

      private SearchProviderType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:metrics.ChromeOSAppListLaunchEventProto.SearchProviderType)
    }

    private int bitField0_;
    public static final int RECURRENCE_RANKER_USER_ID_FIELD_NUMBER = 1;
    private long recurrenceRankerUserId_;
    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     * @return Whether the recurrenceRankerUserId field is set.
     */
    @java.lang.Override
    public boolean hasRecurrenceRankerUserId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     * @return The recurrenceRankerUserId.
     */
    @java.lang.Override
    public long getRecurrenceRankerUserId() {
      return recurrenceRankerUserId_;
    }
    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     * @param value The recurrenceRankerUserId to set.
     */
    private void setRecurrenceRankerUserId(long value) {
      bitField0_ |= 0x00000001;
      recurrenceRankerUserId_ = value;
    }
    /**
     * <pre>
     * A per-user, per-client ID that is used only for app list launch event
     * logging.
     * </pre>
     *
     * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
     */
    private void clearRecurrenceRankerUserId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      recurrenceRankerUserId_ = 0L;
    }

    public static final int LAUNCH_TYPE_FIELD_NUMBER = 2;
    private int launchType_;
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     * @return Whether the launchType field is set.
     */
    @java.lang.Override
    public boolean hasLaunchType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     * @return The launchType.
     */
    @java.lang.Override
    public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType getLaunchType() {
      org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType result = org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType.forNumber(launchType_);
      return result == null ? org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType.LAUNCH_TYPE_UNSPECIFIED : result;
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     * @param value The launchType to set.
     */
    private void setLaunchType(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType value) {
      launchType_ = value.getNumber();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
     */
    private void clearLaunchType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      launchType_ = 0;
    }

    public static final int HOUR_FIELD_NUMBER = 3;
    private int hour_;
    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     * @return Whether the hour field is set.
     */
    @java.lang.Override
    public boolean hasHour() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     * @return The hour.
     */
    @java.lang.Override
    public int getHour() {
      return hour_;
    }
    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     * @param value The hour to set.
     */
    private void setHour(int value) {
      bitField0_ |= 0x00000004;
      hour_ = value;
    }
    /**
     * <pre>
     * Hour of the day from 0 to 23 inclusive. This is the user's local time
     * rounded to the nearest hour.
     * </pre>
     *
     * <code>optional int32 hour = 3;</code>
     */
    private void clearHour() {
      bitField0_ = (bitField0_ & ~0x00000004);
      hour_ = 0;
    }

    public static final int SEARCH_QUERY_LENGTH_FIELD_NUMBER = 4;
    private int searchQueryLength_;
    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     * @return Whether the searchQueryLength field is set.
     */
    @java.lang.Override
    public boolean hasSearchQueryLength() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     * @return The searchQueryLength.
     */
    @java.lang.Override
    public int getSearchQueryLength() {
      return searchQueryLength_;
    }
    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     * @param value The searchQueryLength to set.
     */
    private void setSearchQueryLength(int value) {
      bitField0_ |= 0x00000008;
      searchQueryLength_ = value;
    }
    /**
     * <pre>
     * String length of the search query associated with this launch. If there was
     * no query, this is zero.
     * </pre>
     *
     * <code>optional int32 search_query_length = 4;</code>
     */
    private void clearSearchQueryLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      searchQueryLength_ = 0;
    }

    public static final int HASHED_TARGET_FIELD_NUMBER = 5;
    private long hashedTarget_;
    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     * @return Whether the hashedTarget field is set.
     */
    @java.lang.Override
    public boolean hasHashedTarget() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     * @return The hashedTarget.
     */
    @java.lang.Override
    public long getHashedTarget() {
      return hashedTarget_;
    }
    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     * @param value The hashedTarget to set.
     */
    private void setHashedTarget(long value) {
      bitField0_ |= 0x00000010;
      hashedTarget_ = value;
    }
    /**
     * <pre>
     * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
     * suggestion.
     * </pre>
     *
     * <code>optional fixed64 hashed_target = 5;</code>
     */
    private void clearHashedTarget() {
      bitField0_ = (bitField0_ & ~0x00000010);
      hashedTarget_ = 0L;
    }

    public static final int HASHED_QUERY_FIELD_NUMBER = 6;
    private long hashedQuery_;
    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     * @return Whether the hashedQuery field is set.
     */
    @java.lang.Override
    public boolean hasHashedQuery() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     * @return The hashedQuery.
     */
    @java.lang.Override
    public long getHashedQuery() {
      return hashedQuery_;
    }
    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     * @param value The hashedQuery to set.
     */
    private void setHashedQuery(long value) {
      bitField0_ |= 0x00000020;
      hashedQuery_ = value;
    }
    /**
     * <pre>
     * The hashed search query associated with the launch. Before hashing, the
     * query is the empty string if there is no search query for this launch.
     * </pre>
     *
     * <code>optional fixed64 hashed_query = 6;</code>
     */
    private void clearHashedQuery() {
      bitField0_ = (bitField0_ & ~0x00000020);
      hashedQuery_ = 0L;
    }

    public static final int HASHED_DOMAIN_FIELD_NUMBER = 7;
    private long hashedDomain_;
    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     * @return Whether the hashedDomain field is set.
     */
    @java.lang.Override
    public boolean hasHashedDomain() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     * @return The hashedDomain.
     */
    @java.lang.Override
    public long getHashedDomain() {
      return hashedDomain_;
    }
    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     * @param value The hashedDomain to set.
     */
    private void setHashedDomain(long value) {
      bitField0_ |= 0x00000040;
      hashedDomain_ = value;
    }
    /**
     * <pre>
     * Hashed of the most-recently-visited domain when this launch occurred.
     * </pre>
     *
     * <code>optional fixed64 hashed_domain = 7;</code>
     */
    private void clearHashedDomain() {
      bitField0_ = (bitField0_ & ~0x00000040);
      hashedDomain_ = 0L;
    }

    public static final int HASHED_APP_FIELD_NUMBER = 8;
    private long hashedApp_;
    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     * @return Whether the hashedApp field is set.
     */
    @java.lang.Override
    public boolean hasHashedApp() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     * @return The hashedApp.
     */
    @java.lang.Override
    public long getHashedApp() {
      return hashedApp_;
    }
    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     * @param value The hashedApp to set.
     */
    private void setHashedApp(long value) {
      bitField0_ |= 0x00000080;
      hashedApp_ = value;
    }
    /**
     * <pre>
     * Hash of the app ID of the most-recently-opened app when this launch
     * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
     * </pre>
     *
     * <code>optional fixed64 hashed_app = 8;</code>
     */
    private void clearHashedApp() {
      bitField0_ = (bitField0_ & ~0x00000080);
      hashedApp_ = 0L;
    }

    public static final int SEARCH_PROVIDER_TYPE_FIELD_NUMBER = 9;
    private int searchProviderType_;
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     * @return Whether the searchProviderType field is set.
     */
    @java.lang.Override
    public boolean hasSearchProviderType() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     * @return The searchProviderType.
     */
    @java.lang.Override
    public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType getSearchProviderType() {
      org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType result = org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType.forNumber(searchProviderType_);
      return result == null ? org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType.PROVIDER_UNSPECIFIED : result;
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     * @param value The searchProviderType to set.
     */
    private void setSearchProviderType(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType value) {
      searchProviderType_ = value.getNumber();
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
     */
    private void clearSearchProviderType() {
      bitField0_ = (bitField0_ & ~0x00000100);
      searchProviderType_ = 0;
    }

    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Provides information about the launch of an item (such as an app or a file)
     * from the ChromeOS launcher. One event is recorded for every launch
     * originating from any launcher UI component, and this is the only circumstance
     * that records events. All fields prefixed with "hashed_" are hashed-and-
     * peppered values: the value is concatenated with a user-specific secret value,
     * and then hashed. For privacy reasons this process is designed to be one-way,
     * so that the server cannot easily recover the original values.
     * Next tag: 10
     * </pre>
     *
     * Protobuf type {@code metrics.ChromeOSAppListLaunchEventProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:metrics.ChromeOSAppListLaunchEventProto)
        org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProtoOrBuilder {
      // Construct using org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A per-user, per-client ID that is used only for app list launch event
       * logging.
       * </pre>
       *
       * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
       * @return Whether the recurrenceRankerUserId field is set.
       */
      @java.lang.Override
      public boolean hasRecurrenceRankerUserId() {
        return instance.hasRecurrenceRankerUserId();
      }
      /**
       * <pre>
       * A per-user, per-client ID that is used only for app list launch event
       * logging.
       * </pre>
       *
       * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
       * @return The recurrenceRankerUserId.
       */
      @java.lang.Override
      public long getRecurrenceRankerUserId() {
        return instance.getRecurrenceRankerUserId();
      }
      /**
       * <pre>
       * A per-user, per-client ID that is used only for app list launch event
       * logging.
       * </pre>
       *
       * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
       * @param value The recurrenceRankerUserId to set.
       * @return This builder for chaining.
       */
      public Builder setRecurrenceRankerUserId(long value) {
        copyOnWrite();
        instance.setRecurrenceRankerUserId(value);
        return this;
      }
      /**
       * <pre>
       * A per-user, per-client ID that is used only for app list launch event
       * logging.
       * </pre>
       *
       * <code>optional fixed64 recurrence_ranker_user_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecurrenceRankerUserId() {
        copyOnWrite();
        instance.clearRecurrenceRankerUserId();
        return this;
      }

      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
       * @return Whether the launchType field is set.
       */
      @java.lang.Override
      public boolean hasLaunchType() {
        return instance.hasLaunchType();
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
       * @return The launchType.
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType getLaunchType() {
        return instance.getLaunchType();
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
       * @param value The enum numeric value on the wire for launchType to set.
       * @return This builder for chaining.
       */
      public Builder setLaunchType(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType value) {
        copyOnWrite();
        instance.setLaunchType(value);
        return this;
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.LaunchType launch_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaunchType() {
        copyOnWrite();
        instance.clearLaunchType();
        return this;
      }

      /**
       * <pre>
       * Hour of the day from 0 to 23 inclusive. This is the user's local time
       * rounded to the nearest hour.
       * </pre>
       *
       * <code>optional int32 hour = 3;</code>
       * @return Whether the hour field is set.
       */
      @java.lang.Override
      public boolean hasHour() {
        return instance.hasHour();
      }
      /**
       * <pre>
       * Hour of the day from 0 to 23 inclusive. This is the user's local time
       * rounded to the nearest hour.
       * </pre>
       *
       * <code>optional int32 hour = 3;</code>
       * @return The hour.
       */
      @java.lang.Override
      public int getHour() {
        return instance.getHour();
      }
      /**
       * <pre>
       * Hour of the day from 0 to 23 inclusive. This is the user's local time
       * rounded to the nearest hour.
       * </pre>
       *
       * <code>optional int32 hour = 3;</code>
       * @param value The hour to set.
       * @return This builder for chaining.
       */
      public Builder setHour(int value) {
        copyOnWrite();
        instance.setHour(value);
        return this;
      }
      /**
       * <pre>
       * Hour of the day from 0 to 23 inclusive. This is the user's local time
       * rounded to the nearest hour.
       * </pre>
       *
       * <code>optional int32 hour = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHour() {
        copyOnWrite();
        instance.clearHour();
        return this;
      }

      /**
       * <pre>
       * String length of the search query associated with this launch. If there was
       * no query, this is zero.
       * </pre>
       *
       * <code>optional int32 search_query_length = 4;</code>
       * @return Whether the searchQueryLength field is set.
       */
      @java.lang.Override
      public boolean hasSearchQueryLength() {
        return instance.hasSearchQueryLength();
      }
      /**
       * <pre>
       * String length of the search query associated with this launch. If there was
       * no query, this is zero.
       * </pre>
       *
       * <code>optional int32 search_query_length = 4;</code>
       * @return The searchQueryLength.
       */
      @java.lang.Override
      public int getSearchQueryLength() {
        return instance.getSearchQueryLength();
      }
      /**
       * <pre>
       * String length of the search query associated with this launch. If there was
       * no query, this is zero.
       * </pre>
       *
       * <code>optional int32 search_query_length = 4;</code>
       * @param value The searchQueryLength to set.
       * @return This builder for chaining.
       */
      public Builder setSearchQueryLength(int value) {
        copyOnWrite();
        instance.setSearchQueryLength(value);
        return this;
      }
      /**
       * <pre>
       * String length of the search query associated with this launch. If there was
       * no query, this is zero.
       * </pre>
       *
       * <code>optional int32 search_query_length = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSearchQueryLength() {
        copyOnWrite();
        instance.clearSearchQueryLength();
        return this;
      }

      /**
       * <pre>
       * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
       * suggestion.
       * </pre>
       *
       * <code>optional fixed64 hashed_target = 5;</code>
       * @return Whether the hashedTarget field is set.
       */
      @java.lang.Override
      public boolean hasHashedTarget() {
        return instance.hasHashedTarget();
      }
      /**
       * <pre>
       * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
       * suggestion.
       * </pre>
       *
       * <code>optional fixed64 hashed_target = 5;</code>
       * @return The hashedTarget.
       */
      @java.lang.Override
      public long getHashedTarget() {
        return instance.getHashedTarget();
      }
      /**
       * <pre>
       * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
       * suggestion.
       * </pre>
       *
       * <code>optional fixed64 hashed_target = 5;</code>
       * @param value The hashedTarget to set.
       * @return This builder for chaining.
       */
      public Builder setHashedTarget(long value) {
        copyOnWrite();
        instance.setHashedTarget(value);
        return this;
      }
      /**
       * <pre>
       * The hashed target item of the launch, eg. an app ID, filepath, or omnibox
       * suggestion.
       * </pre>
       *
       * <code>optional fixed64 hashed_target = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashedTarget() {
        copyOnWrite();
        instance.clearHashedTarget();
        return this;
      }

      /**
       * <pre>
       * The hashed search query associated with the launch. Before hashing, the
       * query is the empty string if there is no search query for this launch.
       * </pre>
       *
       * <code>optional fixed64 hashed_query = 6;</code>
       * @return Whether the hashedQuery field is set.
       */
      @java.lang.Override
      public boolean hasHashedQuery() {
        return instance.hasHashedQuery();
      }
      /**
       * <pre>
       * The hashed search query associated with the launch. Before hashing, the
       * query is the empty string if there is no search query for this launch.
       * </pre>
       *
       * <code>optional fixed64 hashed_query = 6;</code>
       * @return The hashedQuery.
       */
      @java.lang.Override
      public long getHashedQuery() {
        return instance.getHashedQuery();
      }
      /**
       * <pre>
       * The hashed search query associated with the launch. Before hashing, the
       * query is the empty string if there is no search query for this launch.
       * </pre>
       *
       * <code>optional fixed64 hashed_query = 6;</code>
       * @param value The hashedQuery to set.
       * @return This builder for chaining.
       */
      public Builder setHashedQuery(long value) {
        copyOnWrite();
        instance.setHashedQuery(value);
        return this;
      }
      /**
       * <pre>
       * The hashed search query associated with the launch. Before hashing, the
       * query is the empty string if there is no search query for this launch.
       * </pre>
       *
       * <code>optional fixed64 hashed_query = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashedQuery() {
        copyOnWrite();
        instance.clearHashedQuery();
        return this;
      }

      /**
       * <pre>
       * Hashed of the most-recently-visited domain when this launch occurred.
       * </pre>
       *
       * <code>optional fixed64 hashed_domain = 7;</code>
       * @return Whether the hashedDomain field is set.
       */
      @java.lang.Override
      public boolean hasHashedDomain() {
        return instance.hasHashedDomain();
      }
      /**
       * <pre>
       * Hashed of the most-recently-visited domain when this launch occurred.
       * </pre>
       *
       * <code>optional fixed64 hashed_domain = 7;</code>
       * @return The hashedDomain.
       */
      @java.lang.Override
      public long getHashedDomain() {
        return instance.getHashedDomain();
      }
      /**
       * <pre>
       * Hashed of the most-recently-visited domain when this launch occurred.
       * </pre>
       *
       * <code>optional fixed64 hashed_domain = 7;</code>
       * @param value The hashedDomain to set.
       * @return This builder for chaining.
       */
      public Builder setHashedDomain(long value) {
        copyOnWrite();
        instance.setHashedDomain(value);
        return this;
      }
      /**
       * <pre>
       * Hashed of the most-recently-visited domain when this launch occurred.
       * </pre>
       *
       * <code>optional fixed64 hashed_domain = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashedDomain() {
        copyOnWrite();
        instance.clearHashedDomain();
        return this;
      }

      /**
       * <pre>
       * Hash of the app ID of the most-recently-opened app when this launch
       * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
       * </pre>
       *
       * <code>optional fixed64 hashed_app = 8;</code>
       * @return Whether the hashedApp field is set.
       */
      @java.lang.Override
      public boolean hasHashedApp() {
        return instance.hasHashedApp();
      }
      /**
       * <pre>
       * Hash of the app ID of the most-recently-opened app when this launch
       * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
       * </pre>
       *
       * <code>optional fixed64 hashed_app = 8;</code>
       * @return The hashedApp.
       */
      @java.lang.Override
      public long getHashedApp() {
        return instance.getHashedApp();
      }
      /**
       * <pre>
       * Hash of the app ID of the most-recently-opened app when this launch
       * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
       * </pre>
       *
       * <code>optional fixed64 hashed_app = 8;</code>
       * @param value The hashedApp to set.
       * @return This builder for chaining.
       */
      public Builder setHashedApp(long value) {
        copyOnWrite();
        instance.setHashedApp(value);
        return this;
      }
      /**
       * <pre>
       * Hash of the app ID of the most-recently-opened app when this launch
       * occurred. This can be an app ID of a Chrome app, Arc++ app, or PWA.
       * </pre>
       *
       * <code>optional fixed64 hashed_app = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashedApp() {
        copyOnWrite();
        instance.clearHashedApp();
        return this;
      }

      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
       * @return Whether the searchProviderType field is set.
       */
      @java.lang.Override
      public boolean hasSearchProviderType() {
        return instance.hasSearchProviderType();
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
       * @return The searchProviderType.
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType getSearchProviderType() {
        return instance.getSearchProviderType();
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
       * @param value The enum numeric value on the wire for searchProviderType to set.
       * @return This builder for chaining.
       */
      public Builder setSearchProviderType(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType value) {
        copyOnWrite();
        instance.setSearchProviderType(value);
        return this;
      }
      /**
       * <code>optional .metrics.ChromeOSAppListLaunchEventProto.SearchProviderType search_provider_type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSearchProviderType() {
        copyOnWrite();
        instance.clearSearchProviderType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:metrics.ChromeOSAppListLaunchEventProto)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "recurrenceRankerUserId_",
              "launchType_",
              org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.LaunchType.internalGetVerifier(),
              "hour_",
              "searchQueryLength_",
              "hashedTarget_",
              "hashedQuery_",
              "hashedDomain_",
              "hashedApp_",
              "searchProviderType_",
              org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.SearchProviderType.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\t\u0000\u0001\u0001\t\t\u0000\u0000\u0000\u0001\u1005\u0000\u0002\u100c\u0001" +
                "\u0003\u1004\u0002\u0004\u1004\u0003\u0005\u1005\u0004\u0006\u1005\u0005\u0007\u1005" +
                "\u0006\b\u1005\u0007\t\u100c\b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:metrics.ChromeOSAppListLaunchEventProto)
    private static final org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto DEFAULT_INSTANCE;
    static {
      ChromeOSAppListLaunchEventProto defaultInstance = new ChromeOSAppListLaunchEventProto();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChromeOSAppListLaunchEventProto.class, defaultInstance);
    }

    public static org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChromeOSAppListLaunchEventProto> PARSER;

    public static com.google.protobuf.Parser<ChromeOSAppListLaunchEventProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
