// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ukm/aggregate.proto

package org.chromium.components.metrics;

public final class AggregateOuterClass {
  private AggregateOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface AggregateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ukm.Aggregate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     * @return Whether the sourceId field is set.
     */
    boolean hasSourceId();
    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     * @return The sourceId.
     */
    long getSourceId();

    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     * @return Whether the eventHash field is set.
     */
    boolean hasEventHash();
    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     * @return The eventHash.
     */
    long getEventHash();

    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     * @return Whether the totalCount field is set.
     */
    boolean hasTotalCount();
    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     * @return The totalCount.
     */
    long getTotalCount();

    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     * @return Whether the droppedDueToLimits field is set.
     */
    boolean hasDroppedDueToLimits();
    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     * @return The droppedDueToLimits.
     */
    long getDroppedDueToLimits();

    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     * @return Whether the droppedDueToSampling field is set.
     */
    boolean hasDroppedDueToSampling();
    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     * @return The droppedDueToSampling.
     */
    long getDroppedDueToSampling();

    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     * @return Whether the droppedDueToWhitelist field is set.
     */
    boolean hasDroppedDueToWhitelist();
    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     * @return The droppedDueToWhitelist.
     */
    long getDroppedDueToWhitelist();

    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     * @return Whether the droppedDueToFilter field is set.
     */
    boolean hasDroppedDueToFilter();
    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     * @return The droppedDueToFilter.
     */
    long getDroppedDueToFilter();

    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    java.util.List<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> 
        getMetricsList();
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric getMetrics(int index);
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    int getMetricsCount();
  }
  /**
   * <pre>
   * Next tag: 9
   * </pre>
   *
   * Protobuf type {@code ukm.Aggregate}
   */
  public  static final class Aggregate extends
      com.google.protobuf.GeneratedMessageLite<
          Aggregate, Aggregate.Builder> implements
      // @@protoc_insertion_point(message_implements:ukm.Aggregate)
      AggregateOrBuilder {
    private Aggregate() {
      metrics_ = emptyProtobufList();
    }
    public interface MetricOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ukm.Aggregate.Metric)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       * @return Whether the metricHash field is set.
       */
      boolean hasMetricHash();
      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       * @return The metricHash.
       */
      long getMetricHash();

      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       * @return Whether the valueSum field is set.
       */
      boolean hasValueSum();
      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       * @return The valueSum.
       */
      double getValueSum();

      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       * @return Whether the valueSquareSum field is set.
       */
      boolean hasValueSquareSum();
      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       * @return The valueSquareSum.
       */
      double getValueSquareSum();

      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       * @return Whether the totalCount field is set.
       */
      boolean hasTotalCount();
      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       * @return The totalCount.
       */
      long getTotalCount();

      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       * @return Whether the droppedDueToLimits field is set.
       */
      boolean hasDroppedDueToLimits();
      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       * @return The droppedDueToLimits.
       */
      long getDroppedDueToLimits();

      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       * @return Whether the droppedDueToSampling field is set.
       */
      boolean hasDroppedDueToSampling();
      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       * @return The droppedDueToSampling.
       */
      long getDroppedDueToSampling();

      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return Whether the droppedDueToWhitelist field is set.
       */
      boolean hasDroppedDueToWhitelist();
      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return The droppedDueToWhitelist.
       */
      long getDroppedDueToWhitelist();

      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return Whether the droppedDueToFilter field is set.
       */
      boolean hasDroppedDueToFilter();
      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return The droppedDueToFilter.
       */
      long getDroppedDueToFilter();
    }
    /**
     * <pre>
     * For each Event, we have a list of possible metrics included. Metric names
     * cannot be repeated. There is no guarentee that all metrics that are
     * possible for a given event will be included in a single Aggregate.
     * </pre>
     *
     * Protobuf type {@code ukm.Aggregate.Metric}
     */
    public  static final class Metric extends
        com.google.protobuf.GeneratedMessageLite<
            Metric, Metric.Builder> implements
        // @@protoc_insertion_point(message_implements:ukm.Aggregate.Metric)
        MetricOrBuilder {
      private Metric() {
      }
      private int bitField0_;
      public static final int METRIC_HASH_FIELD_NUMBER = 1;
      private long metricHash_;
      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       * @return Whether the metricHash field is set.
       */
      @java.lang.Override
      public boolean hasMetricHash() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       * @return The metricHash.
       */
      @java.lang.Override
      public long getMetricHash() {
        return metricHash_;
      }
      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       * @param value The metricHash to set.
       */
      private void setMetricHash(long value) {
        bitField0_ |= 0x00000001;
        metricHash_ = value;
      }
      /**
       * <pre>
       * The hash of the metric's name.
       * </pre>
       *
       * <code>optional fixed64 metric_hash = 1;</code>
       */
      private void clearMetricHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metricHash_ = 0L;
      }

      public static final int VALUE_SUM_FIELD_NUMBER = 2;
      private double valueSum_;
      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       * @return Whether the valueSum field is set.
       */
      @java.lang.Override
      public boolean hasValueSum() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       * @return The valueSum.
       */
      @java.lang.Override
      public double getValueSum() {
        return valueSum_;
      }
      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       * @param value The valueSum to set.
       */
      private void setValueSum(double value) {
        bitField0_ |= 0x00000002;
        valueSum_ = value;
      }
      /**
       * <pre>
       * The sum of all the values seen for this metric.
       * </pre>
       *
       * <code>optional double value_sum = 2;</code>
       */
      private void clearValueSum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        valueSum_ = 0D;
      }

      public static final int VALUE_SQUARE_SUM_FIELD_NUMBER = 3;
      private double valueSquareSum_;
      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       * @return Whether the valueSquareSum field is set.
       */
      @java.lang.Override
      public boolean hasValueSquareSum() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       * @return The valueSquareSum.
       */
      @java.lang.Override
      public double getValueSquareSum() {
        return valueSquareSum_;
      }
      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       * @param value The valueSquareSum to set.
       */
      private void setValueSquareSum(double value) {
        bitField0_ |= 0x00000004;
        valueSquareSum_ = value;
      }
      /**
       * <pre>
       * The sum of all the squared-values seen for this metric.
       * </pre>
       *
       * <code>optional double value_square_sum = 3;</code>
       */
      private void clearValueSquareSum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        valueSquareSum_ = 0D;
      }

      public static final int TOTAL_COUNT_FIELD_NUMBER = 4;
      private long totalCount_;
      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       * @return Whether the totalCount field is set.
       */
      @java.lang.Override
      public boolean hasTotalCount() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       * @return The totalCount.
       */
      @java.lang.Override
      public long getTotalCount() {
        return totalCount_;
      }
      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       * @param value The totalCount to set.
       */
      private void setTotalCount(long value) {
        bitField0_ |= 0x00000008;
        totalCount_ = value;
      }
      /**
       * <pre>
       * Overrides of values given above if different for this specific metric.
       * </pre>
       *
       * <code>optional uint64 total_count = 4;</code>
       */
      private void clearTotalCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalCount_ = 0L;
      }

      public static final int DROPPED_DUE_TO_LIMITS_FIELD_NUMBER = 5;
      private long droppedDueToLimits_;
      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       * @return Whether the droppedDueToLimits field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToLimits() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       * @return The droppedDueToLimits.
       */
      @java.lang.Override
      public long getDroppedDueToLimits() {
        return droppedDueToLimits_;
      }
      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       * @param value The droppedDueToLimits to set.
       */
      private void setDroppedDueToLimits(long value) {
        bitField0_ |= 0x00000010;
        droppedDueToLimits_ = value;
      }
      /**
       * <code>optional uint64 dropped_due_to_limits = 5;</code>
       */
      private void clearDroppedDueToLimits() {
        bitField0_ = (bitField0_ & ~0x00000010);
        droppedDueToLimits_ = 0L;
      }

      public static final int DROPPED_DUE_TO_SAMPLING_FIELD_NUMBER = 6;
      private long droppedDueToSampling_;
      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       * @return Whether the droppedDueToSampling field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToSampling() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       * @return The droppedDueToSampling.
       */
      @java.lang.Override
      public long getDroppedDueToSampling() {
        return droppedDueToSampling_;
      }
      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       * @param value The droppedDueToSampling to set.
       */
      private void setDroppedDueToSampling(long value) {
        bitField0_ |= 0x00000020;
        droppedDueToSampling_ = value;
      }
      /**
       * <code>optional uint64 dropped_due_to_sampling = 6;</code>
       */
      private void clearDroppedDueToSampling() {
        bitField0_ = (bitField0_ & ~0x00000020);
        droppedDueToSampling_ = 0L;
      }

      public static final int DROPPED_DUE_TO_WHITELIST_FIELD_NUMBER = 7;
      private long droppedDueToWhitelist_;
      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return Whether the droppedDueToWhitelist field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToWhitelist() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return The droppedDueToWhitelist.
       */
      @java.lang.Override
      public long getDroppedDueToWhitelist() {
        return droppedDueToWhitelist_;
      }
      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @param value The droppedDueToWhitelist to set.
       */
      private void setDroppedDueToWhitelist(long value) {
        bitField0_ |= 0x00000040;
        droppedDueToWhitelist_ = value;
      }
      /**
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       */
      private void clearDroppedDueToWhitelist() {
        bitField0_ = (bitField0_ & ~0x00000040);
        droppedDueToWhitelist_ = 0L;
      }

      public static final int DROPPED_DUE_TO_FILTER_FIELD_NUMBER = 8;
      private long droppedDueToFilter_;
      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return Whether the droppedDueToFilter field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToFilter() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return The droppedDueToFilter.
       */
      @java.lang.Override
      public long getDroppedDueToFilter() {
        return droppedDueToFilter_;
      }
      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @param value The droppedDueToFilter to set.
       */
      private void setDroppedDueToFilter(long value) {
        bitField0_ |= 0x00000080;
        droppedDueToFilter_ = value;
      }
      /**
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       */
      private void clearDroppedDueToFilter() {
        bitField0_ = (bitField0_ & ~0x00000080);
        droppedDueToFilter_ = 0L;
      }

      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * For each Event, we have a list of possible metrics included. Metric names
       * cannot be repeated. There is no guarentee that all metrics that are
       * possible for a given event will be included in a single Aggregate.
       * </pre>
       *
       * Protobuf type {@code ukm.Aggregate.Metric}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric, Builder> implements
          // @@protoc_insertion_point(builder_implements:ukm.Aggregate.Metric)
          org.chromium.components.metrics.AggregateOuterClass.Aggregate.MetricOrBuilder {
        // Construct using org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The hash of the metric's name.
         * </pre>
         *
         * <code>optional fixed64 metric_hash = 1;</code>
         * @return Whether the metricHash field is set.
         */
        @java.lang.Override
        public boolean hasMetricHash() {
          return instance.hasMetricHash();
        }
        /**
         * <pre>
         * The hash of the metric's name.
         * </pre>
         *
         * <code>optional fixed64 metric_hash = 1;</code>
         * @return The metricHash.
         */
        @java.lang.Override
        public long getMetricHash() {
          return instance.getMetricHash();
        }
        /**
         * <pre>
         * The hash of the metric's name.
         * </pre>
         *
         * <code>optional fixed64 metric_hash = 1;</code>
         * @param value The metricHash to set.
         * @return This builder for chaining.
         */
        public Builder setMetricHash(long value) {
          copyOnWrite();
          instance.setMetricHash(value);
          return this;
        }
        /**
         * <pre>
         * The hash of the metric's name.
         * </pre>
         *
         * <code>optional fixed64 metric_hash = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMetricHash() {
          copyOnWrite();
          instance.clearMetricHash();
          return this;
        }

        /**
         * <pre>
         * The sum of all the values seen for this metric.
         * </pre>
         *
         * <code>optional double value_sum = 2;</code>
         * @return Whether the valueSum field is set.
         */
        @java.lang.Override
        public boolean hasValueSum() {
          return instance.hasValueSum();
        }
        /**
         * <pre>
         * The sum of all the values seen for this metric.
         * </pre>
         *
         * <code>optional double value_sum = 2;</code>
         * @return The valueSum.
         */
        @java.lang.Override
        public double getValueSum() {
          return instance.getValueSum();
        }
        /**
         * <pre>
         * The sum of all the values seen for this metric.
         * </pre>
         *
         * <code>optional double value_sum = 2;</code>
         * @param value The valueSum to set.
         * @return This builder for chaining.
         */
        public Builder setValueSum(double value) {
          copyOnWrite();
          instance.setValueSum(value);
          return this;
        }
        /**
         * <pre>
         * The sum of all the values seen for this metric.
         * </pre>
         *
         * <code>optional double value_sum = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValueSum() {
          copyOnWrite();
          instance.clearValueSum();
          return this;
        }

        /**
         * <pre>
         * The sum of all the squared-values seen for this metric.
         * </pre>
         *
         * <code>optional double value_square_sum = 3;</code>
         * @return Whether the valueSquareSum field is set.
         */
        @java.lang.Override
        public boolean hasValueSquareSum() {
          return instance.hasValueSquareSum();
        }
        /**
         * <pre>
         * The sum of all the squared-values seen for this metric.
         * </pre>
         *
         * <code>optional double value_square_sum = 3;</code>
         * @return The valueSquareSum.
         */
        @java.lang.Override
        public double getValueSquareSum() {
          return instance.getValueSquareSum();
        }
        /**
         * <pre>
         * The sum of all the squared-values seen for this metric.
         * </pre>
         *
         * <code>optional double value_square_sum = 3;</code>
         * @param value The valueSquareSum to set.
         * @return This builder for chaining.
         */
        public Builder setValueSquareSum(double value) {
          copyOnWrite();
          instance.setValueSquareSum(value);
          return this;
        }
        /**
         * <pre>
         * The sum of all the squared-values seen for this metric.
         * </pre>
         *
         * <code>optional double value_square_sum = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearValueSquareSum() {
          copyOnWrite();
          instance.clearValueSquareSum();
          return this;
        }

        /**
         * <pre>
         * Overrides of values given above if different for this specific metric.
         * </pre>
         *
         * <code>optional uint64 total_count = 4;</code>
         * @return Whether the totalCount field is set.
         */
        @java.lang.Override
        public boolean hasTotalCount() {
          return instance.hasTotalCount();
        }
        /**
         * <pre>
         * Overrides of values given above if different for this specific metric.
         * </pre>
         *
         * <code>optional uint64 total_count = 4;</code>
         * @return The totalCount.
         */
        @java.lang.Override
        public long getTotalCount() {
          return instance.getTotalCount();
        }
        /**
         * <pre>
         * Overrides of values given above if different for this specific metric.
         * </pre>
         *
         * <code>optional uint64 total_count = 4;</code>
         * @param value The totalCount to set.
         * @return This builder for chaining.
         */
        public Builder setTotalCount(long value) {
          copyOnWrite();
          instance.setTotalCount(value);
          return this;
        }
        /**
         * <pre>
         * Overrides of values given above if different for this specific metric.
         * </pre>
         *
         * <code>optional uint64 total_count = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalCount() {
          copyOnWrite();
          instance.clearTotalCount();
          return this;
        }

        /**
         * <code>optional uint64 dropped_due_to_limits = 5;</code>
         * @return Whether the droppedDueToLimits field is set.
         */
        @java.lang.Override
        public boolean hasDroppedDueToLimits() {
          return instance.hasDroppedDueToLimits();
        }
        /**
         * <code>optional uint64 dropped_due_to_limits = 5;</code>
         * @return The droppedDueToLimits.
         */
        @java.lang.Override
        public long getDroppedDueToLimits() {
          return instance.getDroppedDueToLimits();
        }
        /**
         * <code>optional uint64 dropped_due_to_limits = 5;</code>
         * @param value The droppedDueToLimits to set.
         * @return This builder for chaining.
         */
        public Builder setDroppedDueToLimits(long value) {
          copyOnWrite();
          instance.setDroppedDueToLimits(value);
          return this;
        }
        /**
         * <code>optional uint64 dropped_due_to_limits = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearDroppedDueToLimits() {
          copyOnWrite();
          instance.clearDroppedDueToLimits();
          return this;
        }

        /**
         * <code>optional uint64 dropped_due_to_sampling = 6;</code>
         * @return Whether the droppedDueToSampling field is set.
         */
        @java.lang.Override
        public boolean hasDroppedDueToSampling() {
          return instance.hasDroppedDueToSampling();
        }
        /**
         * <code>optional uint64 dropped_due_to_sampling = 6;</code>
         * @return The droppedDueToSampling.
         */
        @java.lang.Override
        public long getDroppedDueToSampling() {
          return instance.getDroppedDueToSampling();
        }
        /**
         * <code>optional uint64 dropped_due_to_sampling = 6;</code>
         * @param value The droppedDueToSampling to set.
         * @return This builder for chaining.
         */
        public Builder setDroppedDueToSampling(long value) {
          copyOnWrite();
          instance.setDroppedDueToSampling(value);
          return this;
        }
        /**
         * <code>optional uint64 dropped_due_to_sampling = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearDroppedDueToSampling() {
          copyOnWrite();
          instance.clearDroppedDueToSampling();
          return this;
        }

        /**
         * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
         * @return Whether the droppedDueToWhitelist field is set.
         */
        @java.lang.Override
        public boolean hasDroppedDueToWhitelist() {
          return instance.hasDroppedDueToWhitelist();
        }
        /**
         * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
         * @return The droppedDueToWhitelist.
         */
        @java.lang.Override
        public long getDroppedDueToWhitelist() {
          return instance.getDroppedDueToWhitelist();
        }
        /**
         * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
         * @param value The droppedDueToWhitelist to set.
         * @return This builder for chaining.
         */
        public Builder setDroppedDueToWhitelist(long value) {
          copyOnWrite();
          instance.setDroppedDueToWhitelist(value);
          return this;
        }
        /**
         * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearDroppedDueToWhitelist() {
          copyOnWrite();
          instance.clearDroppedDueToWhitelist();
          return this;
        }

        /**
         * <code>optional uint64 dropped_due_to_filter = 8;</code>
         * @return Whether the droppedDueToFilter field is set.
         */
        @java.lang.Override
        public boolean hasDroppedDueToFilter() {
          return instance.hasDroppedDueToFilter();
        }
        /**
         * <code>optional uint64 dropped_due_to_filter = 8;</code>
         * @return The droppedDueToFilter.
         */
        @java.lang.Override
        public long getDroppedDueToFilter() {
          return instance.getDroppedDueToFilter();
        }
        /**
         * <code>optional uint64 dropped_due_to_filter = 8;</code>
         * @param value The droppedDueToFilter to set.
         * @return This builder for chaining.
         */
        public Builder setDroppedDueToFilter(long value) {
          copyOnWrite();
          instance.setDroppedDueToFilter(value);
          return this;
        }
        /**
         * <code>optional uint64 dropped_due_to_filter = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearDroppedDueToFilter() {
          copyOnWrite();
          instance.clearDroppedDueToFilter();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ukm.Aggregate.Metric)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "metricHash_",
                "valueSum_",
                "valueSquareSum_",
                "totalCount_",
                "droppedDueToLimits_",
                "droppedDueToSampling_",
                "droppedDueToWhitelist_",
                "droppedDueToFilter_",
              };
              java.lang.String info =
                  "\u0001\b\u0000\u0001\u0001\b\b\u0000\u0000\u0000\u0001\u1005\u0000\u0002\u1000\u0001" +
                  "\u0003\u1000\u0002\u0004\u1003\u0003\u0005\u1003\u0004\u0006\u1003\u0005\u0007\u1003" +
                  "\u0006\b\u1003\u0007";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:ukm.Aggregate.Metric)
      private static final org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric DEFAULT_INSTANCE;
      static {
        Metric defaultInstance = new Metric();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Metric.class, defaultInstance);
      }

      public static org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Metric> PARSER;

      public static com.google.protobuf.Parser<Metric> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int SOURCE_ID_FIELD_NUMBER = 1;
    private long sourceId_;
    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     * @return Whether the sourceId field is set.
     */
    @java.lang.Override
    public boolean hasSourceId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     * @return The sourceId.
     */
    @java.lang.Override
    public long getSourceId() {
      return sourceId_;
    }
    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     * @param value The sourceId to set.
     */
    private void setSourceId(long value) {
      bitField0_ |= 0x00000001;
      sourceId_ = value;
    }
    /**
     * <pre>
     * The id of the Source this Event is associated with. If this is zero
     * then it's an aggregate across all sources.
     * </pre>
     *
     * <code>optional int64 source_id = 1;</code>
     */
    private void clearSourceId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sourceId_ = 0L;
    }

    public static final int EVENT_HASH_FIELD_NUMBER = 2;
    private long eventHash_;
    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     * @return Whether the eventHash field is set.
     */
    @java.lang.Override
    public boolean hasEventHash() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     * @return The eventHash.
     */
    @java.lang.Override
    public long getEventHash() {
      return eventHash_;
    }
    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     * @param value The eventHash to set.
     */
    private void setEventHash(long value) {
      bitField0_ |= 0x00000002;
      eventHash_ = value;
    }
    /**
     * <pre>
     * Type of the Event. This is a hash of the name (as a string).
     * </pre>
     *
     * <code>optional fixed64 event_hash = 2;</code>
     */
    private void clearEventHash() {
      bitField0_ = (bitField0_ & ~0x00000002);
      eventHash_ = 0L;
    }

    public static final int TOTAL_COUNT_FIELD_NUMBER = 3;
    private long totalCount_;
    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     * @return Whether the totalCount field is set.
     */
    @java.lang.Override
    public boolean hasTotalCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     * @return The totalCount.
     */
    @java.lang.Override
    public long getTotalCount() {
      return totalCount_;
    }
    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     * @param value The totalCount to set.
     */
    private void setTotalCount(long value) {
      bitField0_ |= 0x00000004;
      totalCount_ = value;
    }
    /**
     * <pre>
     * The total number of times this source/event was observed.
     * </pre>
     *
     * <code>optional uint64 total_count = 3;</code>
     */
    private void clearTotalCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalCount_ = 0L;
    }

    public static final int DROPPED_DUE_TO_LIMITS_FIELD_NUMBER = 4;
    private long droppedDueToLimits_;
    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     * @return Whether the droppedDueToLimits field is set.
     */
    @java.lang.Override
    public boolean hasDroppedDueToLimits() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     * @return The droppedDueToLimits.
     */
    @java.lang.Override
    public long getDroppedDueToLimits() {
      return droppedDueToLimits_;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     * @param value The droppedDueToLimits to set.
     */
    private void setDroppedDueToLimits(long value) {
      bitField0_ |= 0x00000008;
      droppedDueToLimits_ = value;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to limits.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_limits = 4;</code>
     */
    private void clearDroppedDueToLimits() {
      bitField0_ = (bitField0_ & ~0x00000008);
      droppedDueToLimits_ = 0L;
    }

    public static final int DROPPED_DUE_TO_SAMPLING_FIELD_NUMBER = 5;
    private long droppedDueToSampling_;
    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     * @return Whether the droppedDueToSampling field is set.
     */
    @java.lang.Override
    public boolean hasDroppedDueToSampling() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     * @return The droppedDueToSampling.
     */
    @java.lang.Override
    public long getDroppedDueToSampling() {
      return droppedDueToSampling_;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     * @param value The droppedDueToSampling to set.
     */
    private void setDroppedDueToSampling(long value) {
      bitField0_ |= 0x00000010;
      droppedDueToSampling_ = value;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to sampling.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_sampling = 5;</code>
     */
    private void clearDroppedDueToSampling() {
      bitField0_ = (bitField0_ & ~0x00000010);
      droppedDueToSampling_ = 0L;
    }

    public static final int DROPPED_DUE_TO_WHITELIST_FIELD_NUMBER = 7;
    private long droppedDueToWhitelist_;
    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     * @return Whether the droppedDueToWhitelist field is set.
     */
    @java.lang.Override
    public boolean hasDroppedDueToWhitelist() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     * @return The droppedDueToWhitelist.
     */
    @java.lang.Override
    public long getDroppedDueToWhitelist() {
      return droppedDueToWhitelist_;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     * @param value The droppedDueToWhitelist to set.
     */
    private void setDroppedDueToWhitelist(long value) {
      bitField0_ |= 0x00000020;
      droppedDueToWhitelist_ = value;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to whitelist.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
     */
    private void clearDroppedDueToWhitelist() {
      bitField0_ = (bitField0_ & ~0x00000020);
      droppedDueToWhitelist_ = 0L;
    }

    public static final int DROPPED_DUE_TO_FILTER_FIELD_NUMBER = 8;
    private long droppedDueToFilter_;
    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     * @return Whether the droppedDueToFilter field is set.
     */
    @java.lang.Override
    public boolean hasDroppedDueToFilter() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     * @return The droppedDueToFilter.
     */
    @java.lang.Override
    public long getDroppedDueToFilter() {
      return droppedDueToFilter_;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     * @param value The droppedDueToFilter to set.
     */
    private void setDroppedDueToFilter(long value) {
      bitField0_ |= 0x00000040;
      droppedDueToFilter_ = value;
    }
    /**
     * <pre>
     * The total number of times this source/event was dropped due to filter.
     * </pre>
     *
     * <code>optional uint64 dropped_due_to_filter = 8;</code>
     */
    private void clearDroppedDueToFilter() {
      bitField0_ = (bitField0_ & ~0x00000040);
      droppedDueToFilter_ = 0L;
    }

    public static final int METRICS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> metrics_;
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> getMetricsList() {
      return metrics_;
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.AggregateOuterClass.Aggregate.MetricOrBuilder> 
        getMetricsOrBuilderList() {
      return metrics_;
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    @java.lang.Override
    public int getMetricsCount() {
      return metrics_.size();
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric getMetrics(int index) {
      return metrics_.get(index);
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    public org.chromium.components.metrics.AggregateOuterClass.Aggregate.MetricOrBuilder getMetricsOrBuilder(
        int index) {
      return metrics_.get(index);
    }
    private void ensureMetricsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> tmp = metrics_;
      if (!tmp.isModifiable()) {
        metrics_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void setMetrics(
        int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
      value.getClass();
  ensureMetricsIsMutable();
      metrics_.set(index, value);
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void addMetrics(org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
      value.getClass();
  ensureMetricsIsMutable();
      metrics_.add(value);
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void addMetrics(
        int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
      value.getClass();
  ensureMetricsIsMutable();
      metrics_.add(index, value);
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void addAllMetrics(
        java.lang.Iterable<? extends org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> values) {
      ensureMetricsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, metrics_);
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void clearMetrics() {
      metrics_ = emptyProtobufList();
    }
    /**
     * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
     */
    private void removeMetrics(int index) {
      ensureMetricsIsMutable();
      metrics_.remove(index);
    }

    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.metrics.AggregateOuterClass.Aggregate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Next tag: 9
     * </pre>
     *
     * Protobuf type {@code ukm.Aggregate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.metrics.AggregateOuterClass.Aggregate, Builder> implements
        // @@protoc_insertion_point(builder_implements:ukm.Aggregate)
        org.chromium.components.metrics.AggregateOuterClass.AggregateOrBuilder {
      // Construct using org.chromium.components.metrics.AggregateOuterClass.Aggregate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The id of the Source this Event is associated with. If this is zero
       * then it's an aggregate across all sources.
       * </pre>
       *
       * <code>optional int64 source_id = 1;</code>
       * @return Whether the sourceId field is set.
       */
      @java.lang.Override
      public boolean hasSourceId() {
        return instance.hasSourceId();
      }
      /**
       * <pre>
       * The id of the Source this Event is associated with. If this is zero
       * then it's an aggregate across all sources.
       * </pre>
       *
       * <code>optional int64 source_id = 1;</code>
       * @return The sourceId.
       */
      @java.lang.Override
      public long getSourceId() {
        return instance.getSourceId();
      }
      /**
       * <pre>
       * The id of the Source this Event is associated with. If this is zero
       * then it's an aggregate across all sources.
       * </pre>
       *
       * <code>optional int64 source_id = 1;</code>
       * @param value The sourceId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceId(long value) {
        copyOnWrite();
        instance.setSourceId(value);
        return this;
      }
      /**
       * <pre>
       * The id of the Source this Event is associated with. If this is zero
       * then it's an aggregate across all sources.
       * </pre>
       *
       * <code>optional int64 source_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceId() {
        copyOnWrite();
        instance.clearSourceId();
        return this;
      }

      /**
       * <pre>
       * Type of the Event. This is a hash of the name (as a string).
       * </pre>
       *
       * <code>optional fixed64 event_hash = 2;</code>
       * @return Whether the eventHash field is set.
       */
      @java.lang.Override
      public boolean hasEventHash() {
        return instance.hasEventHash();
      }
      /**
       * <pre>
       * Type of the Event. This is a hash of the name (as a string).
       * </pre>
       *
       * <code>optional fixed64 event_hash = 2;</code>
       * @return The eventHash.
       */
      @java.lang.Override
      public long getEventHash() {
        return instance.getEventHash();
      }
      /**
       * <pre>
       * Type of the Event. This is a hash of the name (as a string).
       * </pre>
       *
       * <code>optional fixed64 event_hash = 2;</code>
       * @param value The eventHash to set.
       * @return This builder for chaining.
       */
      public Builder setEventHash(long value) {
        copyOnWrite();
        instance.setEventHash(value);
        return this;
      }
      /**
       * <pre>
       * Type of the Event. This is a hash of the name (as a string).
       * </pre>
       *
       * <code>optional fixed64 event_hash = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventHash() {
        copyOnWrite();
        instance.clearEventHash();
        return this;
      }

      /**
       * <pre>
       * The total number of times this source/event was observed.
       * </pre>
       *
       * <code>optional uint64 total_count = 3;</code>
       * @return Whether the totalCount field is set.
       */
      @java.lang.Override
      public boolean hasTotalCount() {
        return instance.hasTotalCount();
      }
      /**
       * <pre>
       * The total number of times this source/event was observed.
       * </pre>
       *
       * <code>optional uint64 total_count = 3;</code>
       * @return The totalCount.
       */
      @java.lang.Override
      public long getTotalCount() {
        return instance.getTotalCount();
      }
      /**
       * <pre>
       * The total number of times this source/event was observed.
       * </pre>
       *
       * <code>optional uint64 total_count = 3;</code>
       * @param value The totalCount to set.
       * @return This builder for chaining.
       */
      public Builder setTotalCount(long value) {
        copyOnWrite();
        instance.setTotalCount(value);
        return this;
      }
      /**
       * <pre>
       * The total number of times this source/event was observed.
       * </pre>
       *
       * <code>optional uint64 total_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalCount() {
        copyOnWrite();
        instance.clearTotalCount();
        return this;
      }

      /**
       * <pre>
       * The total number of times this source/event was dropped due to limits.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_limits = 4;</code>
       * @return Whether the droppedDueToLimits field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToLimits() {
        return instance.hasDroppedDueToLimits();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to limits.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_limits = 4;</code>
       * @return The droppedDueToLimits.
       */
      @java.lang.Override
      public long getDroppedDueToLimits() {
        return instance.getDroppedDueToLimits();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to limits.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_limits = 4;</code>
       * @param value The droppedDueToLimits to set.
       * @return This builder for chaining.
       */
      public Builder setDroppedDueToLimits(long value) {
        copyOnWrite();
        instance.setDroppedDueToLimits(value);
        return this;
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to limits.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_limits = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDroppedDueToLimits() {
        copyOnWrite();
        instance.clearDroppedDueToLimits();
        return this;
      }

      /**
       * <pre>
       * The total number of times this source/event was dropped due to sampling.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_sampling = 5;</code>
       * @return Whether the droppedDueToSampling field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToSampling() {
        return instance.hasDroppedDueToSampling();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to sampling.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_sampling = 5;</code>
       * @return The droppedDueToSampling.
       */
      @java.lang.Override
      public long getDroppedDueToSampling() {
        return instance.getDroppedDueToSampling();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to sampling.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_sampling = 5;</code>
       * @param value The droppedDueToSampling to set.
       * @return This builder for chaining.
       */
      public Builder setDroppedDueToSampling(long value) {
        copyOnWrite();
        instance.setDroppedDueToSampling(value);
        return this;
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to sampling.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_sampling = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDroppedDueToSampling() {
        copyOnWrite();
        instance.clearDroppedDueToSampling();
        return this;
      }

      /**
       * <pre>
       * The total number of times this source/event was dropped due to whitelist.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return Whether the droppedDueToWhitelist field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToWhitelist() {
        return instance.hasDroppedDueToWhitelist();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to whitelist.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return The droppedDueToWhitelist.
       */
      @java.lang.Override
      public long getDroppedDueToWhitelist() {
        return instance.getDroppedDueToWhitelist();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to whitelist.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @param value The droppedDueToWhitelist to set.
       * @return This builder for chaining.
       */
      public Builder setDroppedDueToWhitelist(long value) {
        copyOnWrite();
        instance.setDroppedDueToWhitelist(value);
        return this;
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to whitelist.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_whitelist = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDroppedDueToWhitelist() {
        copyOnWrite();
        instance.clearDroppedDueToWhitelist();
        return this;
      }

      /**
       * <pre>
       * The total number of times this source/event was dropped due to filter.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return Whether the droppedDueToFilter field is set.
       */
      @java.lang.Override
      public boolean hasDroppedDueToFilter() {
        return instance.hasDroppedDueToFilter();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to filter.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return The droppedDueToFilter.
       */
      @java.lang.Override
      public long getDroppedDueToFilter() {
        return instance.getDroppedDueToFilter();
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to filter.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @param value The droppedDueToFilter to set.
       * @return This builder for chaining.
       */
      public Builder setDroppedDueToFilter(long value) {
        copyOnWrite();
        instance.setDroppedDueToFilter(value);
        return this;
      }
      /**
       * <pre>
       * The total number of times this source/event was dropped due to filter.
       * </pre>
       *
       * <code>optional uint64 dropped_due_to_filter = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDroppedDueToFilter() {
        copyOnWrite();
        instance.clearDroppedDueToFilter();
        return this;
      }

      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> getMetricsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMetricsList());
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      @java.lang.Override
      public int getMetricsCount() {
        return instance.getMetricsCount();
      }/**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric getMetrics(int index) {
        return instance.getMetrics(index);
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder setMetrics(
          int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
        copyOnWrite();
        instance.setMetrics(index, value);
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder setMetrics(
          int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.Builder builderForValue) {
        copyOnWrite();
        instance.setMetrics(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder addMetrics(org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
        copyOnWrite();
        instance.addMetrics(value);
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder addMetrics(
          int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric value) {
        copyOnWrite();
        instance.addMetrics(index, value);
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder addMetrics(
          org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.Builder builderForValue) {
        copyOnWrite();
        instance.addMetrics(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder addMetrics(
          int index, org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.Builder builderForValue) {
        copyOnWrite();
        instance.addMetrics(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder addAllMetrics(
          java.lang.Iterable<? extends org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric> values) {
        copyOnWrite();
        instance.addAllMetrics(values);
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder clearMetrics() {
        copyOnWrite();
        instance.clearMetrics();
        return this;
      }
      /**
       * <code>repeated .ukm.Aggregate.Metric metrics = 6;</code>
       */
      public Builder removeMetrics(int index) {
        copyOnWrite();
        instance.removeMetrics(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ukm.Aggregate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.metrics.AggregateOuterClass.Aggregate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "sourceId_",
              "eventHash_",
              "totalCount_",
              "droppedDueToLimits_",
              "droppedDueToSampling_",
              "metrics_",
              org.chromium.components.metrics.AggregateOuterClass.Aggregate.Metric.class,
              "droppedDueToWhitelist_",
              "droppedDueToFilter_",
            };
            java.lang.String info =
                "\u0001\b\u0000\u0001\u0001\b\b\u0000\u0001\u0000\u0001\u1002\u0000\u0002\u1005\u0001" +
                "\u0003\u1003\u0002\u0004\u1003\u0003\u0005\u1003\u0004\u0006\u001b\u0007\u1003\u0005" +
                "\b\u1003\u0006";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.metrics.AggregateOuterClass.Aggregate> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.metrics.AggregateOuterClass.Aggregate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.metrics.AggregateOuterClass.Aggregate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ukm.Aggregate)
    private static final org.chromium.components.metrics.AggregateOuterClass.Aggregate DEFAULT_INSTANCE;
    static {
      Aggregate defaultInstance = new Aggregate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Aggregate.class, defaultInstance);
    }

    public static org.chromium.components.metrics.AggregateOuterClass.Aggregate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Aggregate> PARSER;

    public static com.google.protobuf.Parser<Aggregate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
