// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: call_stack_profile.proto

package org.chromium.components.metrics;

public final class CallStackProfileProtos {
  private CallStackProfileProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CallStackProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> 
        getDEPRECATEDSampleList();
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample getDEPRECATEDSample(int index);
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getDEPRECATEDSampleCount();

    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> 
        getModuleIdList();
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier getModuleId(int index);
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    int getModuleIdCount();

    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @return A list containing the metadataNameHash.
     */
    java.util.List<java.lang.Long> getMetadataNameHashList();
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @return The count of metadataNameHash.
     */
    int getMetadataNameHashCount();
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @param index The index of the element to return.
     * @return The metadataNameHash at the given index.
     */
    long getMetadataNameHash(int index);

    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> 
        getProfileMetadataList();
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getProfileMetadata(int index);
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    int getProfileMetadataCount();

    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> 
        getAsyncBacktraceList();
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace getAsyncBacktrace(int index);
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    int getAsyncBacktraceCount();

    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> 
        getStackList();
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack getStack(int index);
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    int getStackCount();

    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> 
        getStackSampleList();
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample getStackSample(int index);
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    int getStackSampleCount();

    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     * @return Whether the profileStartTimeOffsetMs field is set.
     */
    boolean hasProfileStartTimeOffsetMs();
    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     * @return The profileStartTimeOffsetMs.
     */
    long getProfileStartTimeOffsetMs();

    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     * @return Whether the profileDurationMs field is set.
     */
    boolean hasProfileDurationMs();
    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     * @return The profileDurationMs.
     */
    int getProfileDurationMs();

    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     * @return Whether the samplingPeriodMs field is set.
     */
    boolean hasSamplingPeriodMs();
    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     * @return The samplingPeriodMs.
     */
    int getSamplingPeriodMs();
  }
  /**
   * <pre>
   * Call stack sample data for a given profiling session.
   * Next tag: 11
   * </pre>
   *
   * Protobuf type {@code metrics.CallStackProfile}
   */
  public  static final class CallStackProfile extends
      com.google.protobuf.GeneratedMessageLite<
          CallStackProfile, CallStackProfile.Builder> implements
      // @@protoc_insertion_point(message_implements:metrics.CallStackProfile)
      CallStackProfileOrBuilder {
    private CallStackProfile() {
      dEPRECATEDSample_ = emptyProtobufList();
      moduleId_ = emptyProtobufList();
      metadataNameHash_ = emptyLongList();
      profileMetadata_ = emptyProtobufList();
      asyncBacktrace_ = emptyProtobufList();
      stack_ = emptyProtobufList();
      stackSample_ = emptyProtobufList();
    }
    public interface ModuleIdentifierOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.ModuleIdentifier)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return Whether the buildId field is set.
       */
      boolean hasBuildId();
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return The buildId.
       */
      java.lang.String getBuildId();
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return The bytes for buildId.
       */
      com.google.protobuf.ByteString
          getBuildIdBytes();

      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       * @return Whether the nameMd5Prefix field is set.
       */
      boolean hasNameMd5Prefix();
      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       * @return The nameMd5Prefix.
       */
      long getNameMd5Prefix();
    }
    /**
     * <pre>
     * Uniquely identifies a module.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.ModuleIdentifier}
     */
    public  static final class ModuleIdentifier extends
        com.google.protobuf.GeneratedMessageLite<
            ModuleIdentifier, ModuleIdentifier.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.ModuleIdentifier)
        ModuleIdentifierOrBuilder {
      private ModuleIdentifier() {
        buildId_ = "";
      }
      private int bitField0_;
      public static final int BUILD_ID_FIELD_NUMBER = 1;
      private java.lang.String buildId_;
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return Whether the buildId field is set.
       */
      @java.lang.Override
      public boolean hasBuildId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return The buildId.
       */
      @java.lang.Override
      public java.lang.String getBuildId() {
        return buildId_;
      }
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @return The bytes for buildId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getBuildIdBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(buildId_);
      }
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @param value The buildId to set.
       */
      private void setBuildId(
          java.lang.String value) {
        value.getClass();
  bitField0_ |= 0x00000001;
        buildId_ = value;
      }
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       */
      private void clearBuildId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buildId_ = getDefaultInstance().getBuildId();
      }
      /**
       * <pre>
       * A hash that uniquely identifies a particular program version with high
       * probability. This is parsed from headers of the loaded module.
       * For binaries generated by GNU tools:
       *   Contents of the .note.gnu.build-id field.
       * On Windows:
       *   GUID + AGE in the debug image headers of a module.
       * </pre>
       *
       * <code>optional string build_id = 1;</code>
       * @param value The bytes for buildId to set.
       */
      private void setBuildIdBytes(
          com.google.protobuf.ByteString value) {
        buildId_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
      }

      public static final int NAME_MD5_PREFIX_FIELD_NUMBER = 2;
      private long nameMd5Prefix_;
      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       * @return Whether the nameMd5Prefix field is set.
       */
      @java.lang.Override
      public boolean hasNameMd5Prefix() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       * @return The nameMd5Prefix.
       */
      @java.lang.Override
      public long getNameMd5Prefix() {
        return nameMd5Prefix_;
      }
      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       * @param value The nameMd5Prefix to set.
       */
      private void setNameMd5Prefix(long value) {
        bitField0_ |= 0x00000002;
        nameMd5Prefix_ = value;
      }
      /**
       * <pre>
       * MD5Sum Prefix of the module name. This is the same hashing scheme as used
       * to hash UMA histogram names.
       * </pre>
       *
       * <code>optional fixed64 name_md5_prefix = 2;</code>
       */
      private void clearNameMd5Prefix() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameMd5Prefix_ = 0L;
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Uniquely identifies a module.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.ModuleIdentifier}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.ModuleIdentifier)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifierOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @return Whether the buildId field is set.
         */
        @java.lang.Override
        public boolean hasBuildId() {
          return instance.hasBuildId();
        }
        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @return The buildId.
         */
        @java.lang.Override
        public java.lang.String getBuildId() {
          return instance.getBuildId();
        }
        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @return The bytes for buildId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getBuildIdBytes() {
          return instance.getBuildIdBytes();
        }
        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @param value The buildId to set.
         * @return This builder for chaining.
         */
        public Builder setBuildId(
            java.lang.String value) {
          copyOnWrite();
          instance.setBuildId(value);
          return this;
        }
        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBuildId() {
          copyOnWrite();
          instance.clearBuildId();
          return this;
        }
        /**
         * <pre>
         * A hash that uniquely identifies a particular program version with high
         * probability. This is parsed from headers of the loaded module.
         * For binaries generated by GNU tools:
         *   Contents of the .note.gnu.build-id field.
         * On Windows:
         *   GUID + AGE in the debug image headers of a module.
         * </pre>
         *
         * <code>optional string build_id = 1;</code>
         * @param value The bytes for buildId to set.
         * @return This builder for chaining.
         */
        public Builder setBuildIdBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setBuildIdBytes(value);
          return this;
        }

        /**
         * <pre>
         * MD5Sum Prefix of the module name. This is the same hashing scheme as used
         * to hash UMA histogram names.
         * </pre>
         *
         * <code>optional fixed64 name_md5_prefix = 2;</code>
         * @return Whether the nameMd5Prefix field is set.
         */
        @java.lang.Override
        public boolean hasNameMd5Prefix() {
          return instance.hasNameMd5Prefix();
        }
        /**
         * <pre>
         * MD5Sum Prefix of the module name. This is the same hashing scheme as used
         * to hash UMA histogram names.
         * </pre>
         *
         * <code>optional fixed64 name_md5_prefix = 2;</code>
         * @return The nameMd5Prefix.
         */
        @java.lang.Override
        public long getNameMd5Prefix() {
          return instance.getNameMd5Prefix();
        }
        /**
         * <pre>
         * MD5Sum Prefix of the module name. This is the same hashing scheme as used
         * to hash UMA histogram names.
         * </pre>
         *
         * <code>optional fixed64 name_md5_prefix = 2;</code>
         * @param value The nameMd5Prefix to set.
         * @return This builder for chaining.
         */
        public Builder setNameMd5Prefix(long value) {
          copyOnWrite();
          instance.setNameMd5Prefix(value);
          return this;
        }
        /**
         * <pre>
         * MD5Sum Prefix of the module name. This is the same hashing scheme as used
         * to hash UMA histogram names.
         * </pre>
         *
         * <code>optional fixed64 name_md5_prefix = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNameMd5Prefix() {
          copyOnWrite();
          instance.clearNameMd5Prefix();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.ModuleIdentifier)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "buildId_",
                "nameMd5Prefix_",
              };
              java.lang.String info =
                  "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
                  "\u1005\u0001";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.ModuleIdentifier)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier DEFAULT_INSTANCE;
      static {
        ModuleIdentifier defaultInstance = new ModuleIdentifier();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ModuleIdentifier.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ModuleIdentifier> PARSER;

      public static com.google.protobuf.Parser<ModuleIdentifier> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface LocationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.Location)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       * @return Whether the address field is set.
       */
      boolean hasAddress();
      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       * @return The address.
       */
      long getAddress();

      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       * @return Whether the moduleIdIndex field is set.
       */
      boolean hasModuleIdIndex();
      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       * @return The moduleIdIndex.
       */
      int getModuleIdIndex();
    }
    /**
     * <pre>
     * Describes a location within executable code.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.Location}
     */
    public  static final class Location extends
        com.google.protobuf.GeneratedMessageLite<
            Location, Location.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.Location)
        LocationOrBuilder {
      private Location() {
      }
      private int bitField0_;
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private long address_;
      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       * @return Whether the address field is set.
       */
      @java.lang.Override
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       * @return The address.
       */
      @java.lang.Override
      public long getAddress() {
        return address_;
      }
      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       * @param value The address to set.
       */
      private void setAddress(long value) {
        bitField0_ |= 0x00000001;
        address_ = value;
      }
      /**
       * <pre>
       * Instruction pointer subtracted by module base.
       * </pre>
       *
       * <code>optional uint64 address = 1;</code>
       */
      private void clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = 0L;
      }

      public static final int MODULE_ID_INDEX_FIELD_NUMBER = 2;
      private int moduleIdIndex_;
      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       * @return Whether the moduleIdIndex field is set.
       */
      @java.lang.Override
      public boolean hasModuleIdIndex() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       * @return The moduleIdIndex.
       */
      @java.lang.Override
      public int getModuleIdIndex() {
        return moduleIdIndex_;
      }
      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       * @param value The moduleIdIndex to set.
       */
      private void setModuleIdIndex(int value) {
        bitField0_ |= 0x00000002;
        moduleIdIndex_ = value;
      }
      /**
       * <pre>
       * Index to the module identifier in |module_ids| of CallStackProfile.
       * </pre>
       *
       * <code>optional int32 module_id_index = 2;</code>
       */
      private void clearModuleIdIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        moduleIdIndex_ = 0;
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Describes a location within executable code.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.Location}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.Location)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Instruction pointer subtracted by module base.
         * </pre>
         *
         * <code>optional uint64 address = 1;</code>
         * @return Whether the address field is set.
         */
        @java.lang.Override
        public boolean hasAddress() {
          return instance.hasAddress();
        }
        /**
         * <pre>
         * Instruction pointer subtracted by module base.
         * </pre>
         *
         * <code>optional uint64 address = 1;</code>
         * @return The address.
         */
        @java.lang.Override
        public long getAddress() {
          return instance.getAddress();
        }
        /**
         * <pre>
         * Instruction pointer subtracted by module base.
         * </pre>
         *
         * <code>optional uint64 address = 1;</code>
         * @param value The address to set.
         * @return This builder for chaining.
         */
        public Builder setAddress(long value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <pre>
         * Instruction pointer subtracted by module base.
         * </pre>
         *
         * <code>optional uint64 address = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <pre>
         * Index to the module identifier in |module_ids| of CallStackProfile.
         * </pre>
         *
         * <code>optional int32 module_id_index = 2;</code>
         * @return Whether the moduleIdIndex field is set.
         */
        @java.lang.Override
        public boolean hasModuleIdIndex() {
          return instance.hasModuleIdIndex();
        }
        /**
         * <pre>
         * Index to the module identifier in |module_ids| of CallStackProfile.
         * </pre>
         *
         * <code>optional int32 module_id_index = 2;</code>
         * @return The moduleIdIndex.
         */
        @java.lang.Override
        public int getModuleIdIndex() {
          return instance.getModuleIdIndex();
        }
        /**
         * <pre>
         * Index to the module identifier in |module_ids| of CallStackProfile.
         * </pre>
         *
         * <code>optional int32 module_id_index = 2;</code>
         * @param value The moduleIdIndex to set.
         * @return This builder for chaining.
         */
        public Builder setModuleIdIndex(int value) {
          copyOnWrite();
          instance.setModuleIdIndex(value);
          return this;
        }
        /**
         * <pre>
         * Index to the module identifier in |module_ids| of CallStackProfile.
         * </pre>
         *
         * <code>optional int32 module_id_index = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearModuleIdIndex() {
          copyOnWrite();
          instance.clearModuleIdIndex();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.Location)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "address_",
                "moduleIdIndex_",
              };
              java.lang.String info =
                  "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1003\u0000\u0002" +
                  "\u1004\u0001";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.Location)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location DEFAULT_INSTANCE;
      static {
        Location defaultInstance = new Location();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Location.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Location> PARSER;

      public static com.google.protobuf.Parser<Location> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface StackOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.Stack)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> 
          getFrameList();
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index);
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      int getFrameCount();
    }
    /**
     * <pre>
     * The sampled call stack.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.Stack}
     */
    public  static final class Stack extends
        com.google.protobuf.GeneratedMessageLite<
            Stack, Stack.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.Stack)
        StackOrBuilder {
      private Stack() {
        frame_ = emptyProtobufList();
      }
      public static final int FRAME_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> frame_;
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getFrameList() {
        return frame_;
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder> 
          getFrameOrBuilderList() {
        return frame_;
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public int getFrameCount() {
        return frame_.size();
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index) {
        return frame_.get(index);
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder getFrameOrBuilder(
          int index) {
        return frame_.get(index);
      }
      private void ensureFrameIsMutable() {
        com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> tmp = frame_;
        if (!tmp.isModifiable()) {
          frame_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void setFrame(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.set(index, value);
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addFrame(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.add(value);
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addFrame(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.add(index, value);
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addAllFrame(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
        ensureFrameIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, frame_);
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void clearFrame() {
        frame_ = emptyProtobufList();
      }
      /**
       * <pre>
       * The frames in the callstack. The frame[0] entry represents the call on
       * the top of the stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void removeFrame(int index) {
        ensureFrameIsMutable();
        frame_.remove(index);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * The sampled call stack.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.Stack}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.Stack)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getFrameList() {
          return java.util.Collections.unmodifiableList(
              instance.getFrameList());
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public int getFrameCount() {
          return instance.getFrameCount();
        }/**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index) {
          return instance.getFrame(index);
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder setFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.setFrame(index, value);
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder setFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.setFrame(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addFrame(value);
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addFrame(index, value);
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addFrame(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addFrame(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addAllFrame(
            java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
          copyOnWrite();
          instance.addAllFrame(values);
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder clearFrame() {
          copyOnWrite();
          instance.clearFrame();
          return this;
        }
        /**
         * <pre>
         * The frames in the callstack. The frame[0] entry represents the call on
         * the top of the stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder removeFrame(int index) {
          copyOnWrite();
          instance.removeFrame(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.Stack)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "frame_",
                org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.class,
              };
              java.lang.String info =
                  "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.Stack)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack DEFAULT_INSTANCE;
      static {
        Stack defaultInstance = new Stack();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Stack.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Stack> PARSER;

      public static com.google.protobuf.Parser<Stack> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface MetadataItemOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.MetadataItem)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       * @return Whether the nameHashIndex field is set.
       */
      boolean hasNameHashIndex();
      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       * @return The nameHashIndex.
       */
      int getNameHashIndex();

      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       * @return The key.
       */
      long getKey();

      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       * @return The value.
       */
      long getValue();
    }
    /**
     * <pre>
     * An item of metadata associated with either the entire profile or a single
     * sample.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.MetadataItem}
     */
    public  static final class MetadataItem extends
        com.google.protobuf.GeneratedMessageLite<
            MetadataItem, MetadataItem.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.MetadataItem)
        MetadataItemOrBuilder {
      private MetadataItem() {
      }
      private int bitField0_;
      public static final int NAME_HASH_INDEX_FIELD_NUMBER = 1;
      private int nameHashIndex_;
      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       * @return Whether the nameHashIndex field is set.
       */
      @java.lang.Override
      public boolean hasNameHashIndex() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       * @return The nameHashIndex.
       */
      @java.lang.Override
      public int getNameHashIndex() {
        return nameHashIndex_;
      }
      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       * @param value The nameHashIndex to set.
       */
      private void setNameHashIndex(int value) {
        bitField0_ |= 0x00000001;
        nameHashIndex_ = value;
      }
      /**
       * <pre>
       * Index of the hash of the metadata name.
       * </pre>
       *
       * <code>optional int32 name_hash_index = 1;</code>
       */
      private void clearNameHashIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nameHashIndex_ = 0;
      }

      public static final int KEY_FIELD_NUMBER = 3;
      private long key_;
      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       * @return The key.
       */
      @java.lang.Override
      public long getKey() {
        return key_;
      }
      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       * @param value The key to set.
       */
      private void setKey(long value) {
        bitField0_ |= 0x00000002;
        key_ = value;
      }
      /**
       * <pre>
       * Optional user-specified key value. Absent if unspecified.
       * </pre>
       *
       * <code>optional sint64 key = 3;</code>
       */
      private void clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = 0L;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private long value_;
      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return value_;
      }
      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       * @param value The value to set.
       */
      private void setValue(long value) {
        bitField0_ |= 0x00000004;
        value_ = value;
      }
      /**
       * <pre>
       * Value for the item. An absent value indicates the metadata has become
       * unset since the previous StackSample.
       * </pre>
       *
       * <code>optional sint64 value = 2;</code>
       */
      private void clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0L;
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * An item of metadata associated with either the entire profile or a single
       * sample.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.MetadataItem}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.MetadataItem)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItemOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Index of the hash of the metadata name.
         * </pre>
         *
         * <code>optional int32 name_hash_index = 1;</code>
         * @return Whether the nameHashIndex field is set.
         */
        @java.lang.Override
        public boolean hasNameHashIndex() {
          return instance.hasNameHashIndex();
        }
        /**
         * <pre>
         * Index of the hash of the metadata name.
         * </pre>
         *
         * <code>optional int32 name_hash_index = 1;</code>
         * @return The nameHashIndex.
         */
        @java.lang.Override
        public int getNameHashIndex() {
          return instance.getNameHashIndex();
        }
        /**
         * <pre>
         * Index of the hash of the metadata name.
         * </pre>
         *
         * <code>optional int32 name_hash_index = 1;</code>
         * @param value The nameHashIndex to set.
         * @return This builder for chaining.
         */
        public Builder setNameHashIndex(int value) {
          copyOnWrite();
          instance.setNameHashIndex(value);
          return this;
        }
        /**
         * <pre>
         * Index of the hash of the metadata name.
         * </pre>
         *
         * <code>optional int32 name_hash_index = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNameHashIndex() {
          copyOnWrite();
          instance.clearNameHashIndex();
          return this;
        }

        /**
         * <pre>
         * Optional user-specified key value. Absent if unspecified.
         * </pre>
         *
         * <code>optional sint64 key = 3;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return instance.hasKey();
        }
        /**
         * <pre>
         * Optional user-specified key value. Absent if unspecified.
         * </pre>
         *
         * <code>optional sint64 key = 3;</code>
         * @return The key.
         */
        @java.lang.Override
        public long getKey() {
          return instance.getKey();
        }
        /**
         * <pre>
         * Optional user-specified key value. Absent if unspecified.
         * </pre>
         *
         * <code>optional sint64 key = 3;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(long value) {
          copyOnWrite();
          instance.setKey(value);
          return this;
        }
        /**
         * <pre>
         * Optional user-specified key value. Absent if unspecified.
         * </pre>
         *
         * <code>optional sint64 key = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          copyOnWrite();
          instance.clearKey();
          return this;
        }

        /**
         * <pre>
         * Value for the item. An absent value indicates the metadata has become
         * unset since the previous StackSample.
         * </pre>
         *
         * <code>optional sint64 value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return instance.hasValue();
        }
        /**
         * <pre>
         * Value for the item. An absent value indicates the metadata has become
         * unset since the previous StackSample.
         * </pre>
         *
         * <code>optional sint64 value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public long getValue() {
          return instance.getValue();
        }
        /**
         * <pre>
         * Value for the item. An absent value indicates the metadata has become
         * unset since the previous StackSample.
         * </pre>
         *
         * <code>optional sint64 value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(long value) {
          copyOnWrite();
          instance.setValue(value);
          return this;
        }
        /**
         * <pre>
         * Value for the item. An absent value indicates the metadata has become
         * unset since the previous StackSample.
         * </pre>
         *
         * <code>optional sint64 value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          copyOnWrite();
          instance.clearValue();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.MetadataItem)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "nameHashIndex_",
                "value_",
                "key_",
              };
              java.lang.String info =
                  "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
                  "\u1010\u0002\u0003\u1010\u0001";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.MetadataItem)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem DEFAULT_INSTANCE;
      static {
        MetadataItem defaultInstance = new MetadataItem();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          MetadataItem.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<MetadataItem> PARSER;

      public static com.google.protobuf.Parser<MetadataItem> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface AsyncBacktraceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.AsyncBacktrace)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> 
          getLocationList();
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getLocation(int index);
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      int getLocationCount();
    }
    /**
     * <pre>
     * Backtrace of locations of async execution requests (e.g. task postings, IPC
     * message sending, requests over mojo) that led to the current task
     * execution. Note that these are saved in a fixed length buffer on the client
     * which as of 2018/08/14 includes only the most recent four entries.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.AsyncBacktrace}
     */
    public  static final class AsyncBacktrace extends
        com.google.protobuf.GeneratedMessageLite<
            AsyncBacktrace, AsyncBacktrace.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.AsyncBacktrace)
        AsyncBacktraceOrBuilder {
      private AsyncBacktrace() {
        location_ = emptyProtobufList();
      }
      public static final int LOCATION_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> location_;
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getLocationList() {
        return location_;
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder> 
          getLocationOrBuilderList() {
        return location_;
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      @java.lang.Override
      public int getLocationCount() {
        return location_.size();
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getLocation(int index) {
        return location_.get(index);
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder getLocationOrBuilder(
          int index) {
        return location_.get(index);
      }
      private void ensureLocationIsMutable() {
        com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> tmp = location_;
        if (!tmp.isModifiable()) {
          location_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void setLocation(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureLocationIsMutable();
        location_.set(index, value);
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void addLocation(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureLocationIsMutable();
        location_.add(value);
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void addLocation(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureLocationIsMutable();
        location_.add(index, value);
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void addAllLocation(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
        ensureLocationIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, location_);
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void clearLocation() {
        location_ = emptyProtobufList();
      }
      /**
       * <pre>
       * The locations saved in the backtrace, with the most recent in
       * location[0]. Empty if the work was not tied to an async execution request
       * -- for example, handling a mouse event.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
       */
      private void removeLocation(int index) {
        ensureLocationIsMutable();
        location_.remove(index);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Backtrace of locations of async execution requests (e.g. task postings, IPC
       * message sending, requests over mojo) that led to the current task
       * execution. Note that these are saved in a fixed length buffer on the client
       * which as of 2018/08/14 includes only the most recent four entries.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.AsyncBacktrace}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.AsyncBacktrace)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktraceOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getLocationList() {
          return java.util.Collections.unmodifiableList(
              instance.getLocationList());
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        @java.lang.Override
        public int getLocationCount() {
          return instance.getLocationCount();
        }/**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getLocation(int index) {
          return instance.getLocation(index);
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder setLocation(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.setLocation(index, value);
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder setLocation(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.setLocation(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder addLocation(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addLocation(value);
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder addLocation(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addLocation(index, value);
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder addLocation(
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addLocation(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder addLocation(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addLocation(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder addAllLocation(
            java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
          copyOnWrite();
          instance.addAllLocation(values);
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder clearLocation() {
          copyOnWrite();
          instance.clearLocation();
          return this;
        }
        /**
         * <pre>
         * The locations saved in the backtrace, with the most recent in
         * location[0]. Empty if the work was not tied to an async execution request
         * -- for example, handling a mouse event.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location location = 1;</code>
         */
        public Builder removeLocation(int index) {
          copyOnWrite();
          instance.removeLocation(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.AsyncBacktrace)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "location_",
                org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.class,
              };
              java.lang.String info =
                  "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.AsyncBacktrace)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace DEFAULT_INSTANCE;
      static {
        AsyncBacktrace defaultInstance = new AsyncBacktrace();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          AsyncBacktrace.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<AsyncBacktrace> PARSER;

      public static com.google.protobuf.Parser<AsyncBacktrace> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface SampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.Sample)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> 
          getFrameList();
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index);
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      int getFrameCount();

      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       * @return Whether the count field is set.
       */
      boolean hasCount();
      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       * @return The count.
       */
      long getCount();

      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @return A list containing the processPhase.
       */
      java.util.List<org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> getProcessPhaseList();
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @return The count of processPhase.
       */
      int getProcessPhaseCount();
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @param index The index of the element to return.
       * @return The processPhase at the given index.
       */
      org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase getProcessPhase(int index);
    }
    /**
     * <pre>
     * Deprecated version of a sample consisting of one or more callstacks with
     * the same stack frames and instruction pointers. Deprecated as of
     * 2018/08/14.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.Sample}
     */
    public  static final class Sample extends
        com.google.protobuf.GeneratedMessageLite<
            Sample, Sample.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.Sample)
        SampleOrBuilder {
      private Sample() {
        frame_ = emptyProtobufList();
        processPhase_ = emptyIntList();
      }
      private int bitField0_;
      public static final int FRAME_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> frame_;
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getFrameList() {
        return frame_;
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder> 
          getFrameOrBuilderList() {
        return frame_;
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public int getFrameCount() {
        return frame_.size();
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index) {
        return frame_.get(index);
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.LocationOrBuilder getFrameOrBuilder(
          int index) {
        return frame_.get(index);
      }
      private void ensureFrameIsMutable() {
        com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> tmp = frame_;
        if (!tmp.isModifiable()) {
          frame_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void setFrame(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.set(index, value);
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addFrame(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.add(value);
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addFrame(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
        value.getClass();
  ensureFrameIsMutable();
        frame_.add(index, value);
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void addAllFrame(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
        ensureFrameIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, frame_);
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void clearFrame() {
        frame_ = emptyProtobufList();
      }
      /**
       * <pre>
       * The callstack. Sample.frame[0] represents the call on the top of the
       * stack.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
       */
      private void removeFrame(int index) {
        ensureFrameIsMutable();
        frame_.remove(index);
      }

      public static final int COUNT_FIELD_NUMBER = 2;
      private long count_;
      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       * @return Whether the count field is set.
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       * @return The count.
       */
      @java.lang.Override
      public long getCount() {
        return count_;
      }
      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       * @param value The count to set.
       */
      private void setCount(long value) {
        bitField0_ |= 0x00000001;
        count_ = value;
      }
      /**
       * <pre>
       * Number of times this stack signature occurs.
       * </pre>
       *
       * <code>optional int64 count = 2;</code>
       */
      private void clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0L;
      }

      public static final int PROCESS_PHASE_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.IntList processPhase_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> processPhase_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer, org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase>() {
                @java.lang.Override
                public org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase convert(java.lang.Integer from) {
                  org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase result = org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase.forNumber(from);
                  return result == null ? org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase.MAIN_LOOP_START : result;
                }
              };
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @return A list containing the processPhase.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> getProcessPhaseList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase>(processPhase_, processPhase_converter_);
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @return The count of processPhase.
       */
      @java.lang.Override
      public int getProcessPhaseCount() {
        return processPhase_.size();
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @param index The index of the element to return.
       * @return The processPhase at the given index.
       */
      @java.lang.Override
      public org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase getProcessPhase(int index) {
        return processPhase_converter_.convert(processPhase_.getInt(index));
      }
      private void ensureProcessPhaseIsMutable() {
        com.google.protobuf.Internal.IntList tmp = processPhase_;
        if (!tmp.isModifiable()) {
          processPhase_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @param index The index to set the value at.
       * @param value The processPhase to set.
       */
      private void setProcessPhase(
          int index, org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase value) {
        value.getClass();
  ensureProcessPhaseIsMutable();
        processPhase_.setInt(index, value.getNumber());
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @param value The processPhase to add.
       */
      private void addProcessPhase(org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase value) {
        value.getClass();
  ensureProcessPhaseIsMutable();
        processPhase_.addInt(value.getNumber());
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       * @param values The processPhase to add.
       */
      private void addAllProcessPhase(
          java.lang.Iterable<? extends org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> values) {
        ensureProcessPhaseIsMutable();
        for (org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase value : values) {
          processPhase_.addInt(value.getNumber());
        }
      }
      /**
       * <pre>
       * This repeating field indicates the current phase of the system such as
       * whether it is in startup, general operation, or shutdown. The first
       * Sample of a CallStackProfile will list all phases that have been reached;
       * later samples will list only the new phases that occurred since the
       * previous one.
       * </pre>
       *
       * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
       */
      private void clearProcessPhase() {
        processPhase_ = emptyIntList();
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Deprecated version of a sample consisting of one or more callstacks with
       * the same stack frames and instruction pointers. Deprecated as of
       * 2018/08/14.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.Sample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.Sample)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.SampleOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> getFrameList() {
          return java.util.Collections.unmodifiableList(
              instance.getFrameList());
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public int getFrameCount() {
          return instance.getFrameCount();
        }/**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location getFrame(int index) {
          return instance.getFrame(index);
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder setFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.setFrame(index, value);
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder setFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.setFrame(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addFrame(value);
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location value) {
          copyOnWrite();
          instance.addFrame(index, value);
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addFrame(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addFrame(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.Builder builderForValue) {
          copyOnWrite();
          instance.addFrame(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder addAllFrame(
            java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location> values) {
          copyOnWrite();
          instance.addAllFrame(values);
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder clearFrame() {
          copyOnWrite();
          instance.clearFrame();
          return this;
        }
        /**
         * <pre>
         * The callstack. Sample.frame[0] represents the call on the top of the
         * stack.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.Location frame = 1;</code>
         */
        public Builder removeFrame(int index) {
          copyOnWrite();
          instance.removeFrame(index);
          return this;
        }

        /**
         * <pre>
         * Number of times this stack signature occurs.
         * </pre>
         *
         * <code>optional int64 count = 2;</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return instance.hasCount();
        }
        /**
         * <pre>
         * Number of times this stack signature occurs.
         * </pre>
         *
         * <code>optional int64 count = 2;</code>
         * @return The count.
         */
        @java.lang.Override
        public long getCount() {
          return instance.getCount();
        }
        /**
         * <pre>
         * Number of times this stack signature occurs.
         * </pre>
         *
         * <code>optional int64 count = 2;</code>
         * @param value The count to set.
         * @return This builder for chaining.
         */
        public Builder setCount(long value) {
          copyOnWrite();
          instance.setCount(value);
          return this;
        }
        /**
         * <pre>
         * Number of times this stack signature occurs.
         * </pre>
         *
         * <code>optional int64 count = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCount() {
          copyOnWrite();
          instance.clearCount();
          return this;
        }

        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @return A list containing the processPhase.
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> getProcessPhaseList() {
          return instance.getProcessPhaseList();
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @return The count of processPhase.
         */
        @java.lang.Override
        public int getProcessPhaseCount() {
          return instance.getProcessPhaseCount();
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @param index The index of the element to return.
         * @return The processPhase at the given index.
         */
        @java.lang.Override
        public org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase getProcessPhase(int index) {
          return instance.getProcessPhase(index);
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @param index The index to set the value at.
         * @param value The processPhase to set.
         * @return This builder for chaining.
         */
        public Builder setProcessPhase(
            int index, org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase value) {
          copyOnWrite();
          instance.setProcessPhase(index, value);
          return this;
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @param value The processPhase to add.
         * @return This builder for chaining.
         */
        public Builder addProcessPhase(org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase value) {
          copyOnWrite();
          instance.addProcessPhase(value);
          return this;
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @param values The processPhase to add.
         * @return This builder for chaining.
         */
        public Builder addAllProcessPhase(
            java.lang.Iterable<? extends org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase> values) {
          copyOnWrite();
          instance.addAllProcessPhase(values);  return this;
        }
        /**
         * <pre>
         * This repeating field indicates the current phase of the system such as
         * whether it is in startup, general operation, or shutdown. The first
         * Sample of a CallStackProfile will list all phases that have been reached;
         * later samples will list only the new phases that occurred since the
         * previous one.
         * </pre>
         *
         * <code>repeated .metrics.ProcessPhase process_phase = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearProcessPhase() {
          copyOnWrite();
          instance.clearProcessPhase();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.Sample)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "frame_",
                org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Location.class,
                "count_",
                "processPhase_",
                org.chromium.components.metrics.ExecutionContextProtos.ProcessPhase.internalGetVerifier(),
              };
              java.lang.String info =
                  "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0002\u0000\u0001\u001b\u0002\u1002" +
                  "\u0000\u0003\u001e";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.Sample)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample DEFAULT_INSTANCE;
      static {
        Sample defaultInstance = new Sample();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Sample.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Sample> PARSER;

      public static com.google.protobuf.Parser<Sample> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface StackSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.CallStackProfile.StackSample)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       * @return Whether the stackIndex field is set.
       */
      boolean hasStackIndex();
      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       * @return The stackIndex.
       */
      int getStackIndex();

      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       * @return Whether the sampleTimeOffsetMs field is set.
       */
      boolean hasSampleTimeOffsetMs();
      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       * @return The sampleTimeOffsetMs.
       */
      int getSampleTimeOffsetMs();

      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       * @return Whether the continuedWork field is set.
       */
      boolean hasContinuedWork();
      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       * @return The continuedWork.
       */
      boolean getContinuedWork();

      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       * @return Whether the asyncBacktraceIndex field is set.
       */
      boolean hasAsyncBacktraceIndex();
      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       * @return The asyncBacktraceIndex.
       */
      int getAsyncBacktraceIndex();

      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> 
          getMetadataList();
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getMetadata(int index);
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      int getMetadataCount();

      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       * @return Whether the weight field is set.
       */
      boolean hasWeight();
      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       * @return The weight.
       */
      long getWeight();

      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       * @return Whether the count field is set.
       */
      boolean hasCount();
      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       * @return The count.
       */
      long getCount();
    }
    /**
     * <pre>
     * A sampled stack, along with associated metadata.
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile.StackSample}
     */
    public  static final class StackSample extends
        com.google.protobuf.GeneratedMessageLite<
            StackSample, StackSample.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.CallStackProfile.StackSample)
        StackSampleOrBuilder {
      private StackSample() {
        metadata_ = emptyProtobufList();
        count_ = 1L;
      }
      private int bitField0_;
      public static final int STACK_INDEX_FIELD_NUMBER = 1;
      private int stackIndex_;
      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       * @return Whether the stackIndex field is set.
       */
      @java.lang.Override
      public boolean hasStackIndex() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       * @return The stackIndex.
       */
      @java.lang.Override
      public int getStackIndex() {
        return stackIndex_;
      }
      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       * @param value The stackIndex to set.
       */
      private void setStackIndex(int value) {
        bitField0_ |= 0x00000001;
        stackIndex_ = value;
      }
      /**
       * <pre>
       * Index into the profile's repeated |stack| field for the stack
       * corresponding to this sample.
       * </pre>
       *
       * <code>optional int32 stack_index = 1;</code>
       */
      private void clearStackIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stackIndex_ = 0;
      }

      public static final int SAMPLE_TIME_OFFSET_MS_FIELD_NUMBER = 2;
      private int sampleTimeOffsetMs_;
      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       * @return Whether the sampleTimeOffsetMs field is set.
       */
      @java.lang.Override
      public boolean hasSampleTimeOffsetMs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       * @return The sampleTimeOffsetMs.
       */
      @java.lang.Override
      public int getSampleTimeOffsetMs() {
        return sampleTimeOffsetMs_;
      }
      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       * @param value The sampleTimeOffsetMs to set.
       */
      private void setSampleTimeOffsetMs(int value) {
        bitField0_ |= 0x00000002;
        sampleTimeOffsetMs_ = value;
      }
      /**
       * <pre>
       * Sample time relative to the first sample.
       * </pre>
       *
       * <code>optional int32 sample_time_offset_ms = 2;</code>
       */
      private void clearSampleTimeOffsetMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sampleTimeOffsetMs_ = 0;
      }

      public static final int CONTINUED_WORK_FIELD_NUMBER = 3;
      private boolean continuedWork_;
      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       * @return Whether the continuedWork field is set.
       */
      @java.lang.Override
      public boolean hasContinuedWork() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       * @return The continuedWork.
       */
      @java.lang.Override
      public boolean getContinuedWork() {
        return continuedWork_;
      }
      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       * @param value The continuedWork to set.
       */
      private void setContinuedWork(boolean value) {
        bitField0_ |= 0x00000004;
        continuedWork_ = value;
      }
      /**
       * <pre>
       * True if this sample is executing the same item of work (task, event) as
       * the last sample.
       * </pre>
       *
       * <code>optional bool continued_work = 3;</code>
       */
      private void clearContinuedWork() {
        bitField0_ = (bitField0_ & ~0x00000004);
        continuedWork_ = false;
      }

      public static final int ASYNC_BACKTRACE_INDEX_FIELD_NUMBER = 4;
      private int asyncBacktraceIndex_;
      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       * @return Whether the asyncBacktraceIndex field is set.
       */
      @java.lang.Override
      public boolean hasAsyncBacktraceIndex() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       * @return The asyncBacktraceIndex.
       */
      @java.lang.Override
      public int getAsyncBacktraceIndex() {
        return asyncBacktraceIndex_;
      }
      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       * @param value The asyncBacktraceIndex to set.
       */
      private void setAsyncBacktraceIndex(int value) {
        bitField0_ |= 0x00000008;
        asyncBacktraceIndex_ = value;
      }
      /**
       * <pre>
       * Index of the backtrace in the profile of posted task locations that led
       * to this task execution.
       * </pre>
       *
       * <code>optional int32 async_backtrace_index = 4;</code>
       */
      private void clearAsyncBacktraceIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        asyncBacktraceIndex_ = 0;
      }

      public static final int METADATA_FIELD_NUMBER = 5;
      private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> metadata_;
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> getMetadataList() {
        return metadata_;
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItemOrBuilder> 
          getMetadataOrBuilderList() {
        return metadata_;
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      @java.lang.Override
      public int getMetadataCount() {
        return metadata_.size();
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getMetadata(int index) {
        return metadata_.get(index);
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItemOrBuilder getMetadataOrBuilder(
          int index) {
        return metadata_.get(index);
      }
      private void ensureMetadataIsMutable() {
        com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> tmp = metadata_;
        if (!tmp.isModifiable()) {
          metadata_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void setMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        value.getClass();
  ensureMetadataIsMutable();
        metadata_.set(index, value);
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void addMetadata(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        value.getClass();
  ensureMetadataIsMutable();
        metadata_.add(value);
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void addMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        value.getClass();
  ensureMetadataIsMutable();
        metadata_.add(index, value);
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void addAllMetadata(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> values) {
        ensureMetadataIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, metadata_);
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void clearMetadata() {
        metadata_ = emptyProtobufList();
      }
      /**
       * <pre>
       * Metadata items associated with the sample. To minimize memory usage,
       * metadata items are specified only when their values change from the
       * previous sample. Items are not guaranteed to be in a particular order.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
       */
      private void removeMetadata(int index) {
        ensureMetadataIsMutable();
        metadata_.remove(index);
      }

      public static final int WEIGHT_FIELD_NUMBER = 6;
      private long weight_;
      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       * @return Whether the weight field is set.
       */
      @java.lang.Override
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       * @return The weight.
       */
      @java.lang.Override
      public long getWeight() {
        return weight_;
      }
      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       * @param value The weight to set.
       */
      private void setWeight(long value) {
        bitField0_ |= 0x00000010;
        weight_ = value;
      }
      /**
       * <pre>
       * Weight of the sample. When omitted the sample is presumed to have
       * a weight of 1.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the total number of bytes associated with
       * the StackSample record.
       * </pre>
       *
       * <code>optional int64 weight = 6;</code>
       */
      private void clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        weight_ = 0L;
      }

      public static final int COUNT_FIELD_NUMBER = 7;
      private long count_;
      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       * @return Whether the count field is set.
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       * @return The count.
       */
      @java.lang.Override
      public long getCount() {
        return count_;
      }
      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       * @param value The count to set.
       */
      private void setCount(long value) {
        bitField0_ |= 0x00000020;
        count_ = value;
      }
      /**
       * <pre>
       * Number of events associated with the sample. When omitted the default
       * value of 1 should be used.
       * Not currently used for CPU profiles.
       * For heap profiles it represents the number of allocations associated with
       * the StackSample record. The following relation holds:
       *   allocation_size * count == weight.
       * </pre>
       *
       * <code>optional int64 count = 7 [default = 1];</code>
       */
      private void clearCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        count_ = 1L;
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * A sampled stack, along with associated metadata.
       * </pre>
       *
       * Protobuf type {@code metrics.CallStackProfile.StackSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile.StackSample)
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSampleOrBuilder {
        // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Index into the profile's repeated |stack| field for the stack
         * corresponding to this sample.
         * </pre>
         *
         * <code>optional int32 stack_index = 1;</code>
         * @return Whether the stackIndex field is set.
         */
        @java.lang.Override
        public boolean hasStackIndex() {
          return instance.hasStackIndex();
        }
        /**
         * <pre>
         * Index into the profile's repeated |stack| field for the stack
         * corresponding to this sample.
         * </pre>
         *
         * <code>optional int32 stack_index = 1;</code>
         * @return The stackIndex.
         */
        @java.lang.Override
        public int getStackIndex() {
          return instance.getStackIndex();
        }
        /**
         * <pre>
         * Index into the profile's repeated |stack| field for the stack
         * corresponding to this sample.
         * </pre>
         *
         * <code>optional int32 stack_index = 1;</code>
         * @param value The stackIndex to set.
         * @return This builder for chaining.
         */
        public Builder setStackIndex(int value) {
          copyOnWrite();
          instance.setStackIndex(value);
          return this;
        }
        /**
         * <pre>
         * Index into the profile's repeated |stack| field for the stack
         * corresponding to this sample.
         * </pre>
         *
         * <code>optional int32 stack_index = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearStackIndex() {
          copyOnWrite();
          instance.clearStackIndex();
          return this;
        }

        /**
         * <pre>
         * Sample time relative to the first sample.
         * </pre>
         *
         * <code>optional int32 sample_time_offset_ms = 2;</code>
         * @return Whether the sampleTimeOffsetMs field is set.
         */
        @java.lang.Override
        public boolean hasSampleTimeOffsetMs() {
          return instance.hasSampleTimeOffsetMs();
        }
        /**
         * <pre>
         * Sample time relative to the first sample.
         * </pre>
         *
         * <code>optional int32 sample_time_offset_ms = 2;</code>
         * @return The sampleTimeOffsetMs.
         */
        @java.lang.Override
        public int getSampleTimeOffsetMs() {
          return instance.getSampleTimeOffsetMs();
        }
        /**
         * <pre>
         * Sample time relative to the first sample.
         * </pre>
         *
         * <code>optional int32 sample_time_offset_ms = 2;</code>
         * @param value The sampleTimeOffsetMs to set.
         * @return This builder for chaining.
         */
        public Builder setSampleTimeOffsetMs(int value) {
          copyOnWrite();
          instance.setSampleTimeOffsetMs(value);
          return this;
        }
        /**
         * <pre>
         * Sample time relative to the first sample.
         * </pre>
         *
         * <code>optional int32 sample_time_offset_ms = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSampleTimeOffsetMs() {
          copyOnWrite();
          instance.clearSampleTimeOffsetMs();
          return this;
        }

        /**
         * <pre>
         * True if this sample is executing the same item of work (task, event) as
         * the last sample.
         * </pre>
         *
         * <code>optional bool continued_work = 3;</code>
         * @return Whether the continuedWork field is set.
         */
        @java.lang.Override
        public boolean hasContinuedWork() {
          return instance.hasContinuedWork();
        }
        /**
         * <pre>
         * True if this sample is executing the same item of work (task, event) as
         * the last sample.
         * </pre>
         *
         * <code>optional bool continued_work = 3;</code>
         * @return The continuedWork.
         */
        @java.lang.Override
        public boolean getContinuedWork() {
          return instance.getContinuedWork();
        }
        /**
         * <pre>
         * True if this sample is executing the same item of work (task, event) as
         * the last sample.
         * </pre>
         *
         * <code>optional bool continued_work = 3;</code>
         * @param value The continuedWork to set.
         * @return This builder for chaining.
         */
        public Builder setContinuedWork(boolean value) {
          copyOnWrite();
          instance.setContinuedWork(value);
          return this;
        }
        /**
         * <pre>
         * True if this sample is executing the same item of work (task, event) as
         * the last sample.
         * </pre>
         *
         * <code>optional bool continued_work = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearContinuedWork() {
          copyOnWrite();
          instance.clearContinuedWork();
          return this;
        }

        /**
         * <pre>
         * Index of the backtrace in the profile of posted task locations that led
         * to this task execution.
         * </pre>
         *
         * <code>optional int32 async_backtrace_index = 4;</code>
         * @return Whether the asyncBacktraceIndex field is set.
         */
        @java.lang.Override
        public boolean hasAsyncBacktraceIndex() {
          return instance.hasAsyncBacktraceIndex();
        }
        /**
         * <pre>
         * Index of the backtrace in the profile of posted task locations that led
         * to this task execution.
         * </pre>
         *
         * <code>optional int32 async_backtrace_index = 4;</code>
         * @return The asyncBacktraceIndex.
         */
        @java.lang.Override
        public int getAsyncBacktraceIndex() {
          return instance.getAsyncBacktraceIndex();
        }
        /**
         * <pre>
         * Index of the backtrace in the profile of posted task locations that led
         * to this task execution.
         * </pre>
         *
         * <code>optional int32 async_backtrace_index = 4;</code>
         * @param value The asyncBacktraceIndex to set.
         * @return This builder for chaining.
         */
        public Builder setAsyncBacktraceIndex(int value) {
          copyOnWrite();
          instance.setAsyncBacktraceIndex(value);
          return this;
        }
        /**
         * <pre>
         * Index of the backtrace in the profile of posted task locations that led
         * to this task execution.
         * </pre>
         *
         * <code>optional int32 async_backtrace_index = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsyncBacktraceIndex() {
          copyOnWrite();
          instance.clearAsyncBacktraceIndex();
          return this;
        }

        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> getMetadataList() {
          return java.util.Collections.unmodifiableList(
              instance.getMetadataList());
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        @java.lang.Override
        public int getMetadataCount() {
          return instance.getMetadataCount();
        }/**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getMetadata(int index) {
          return instance.getMetadata(index);
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder setMetadata(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
          copyOnWrite();
          instance.setMetadata(index, value);
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder setMetadata(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
          copyOnWrite();
          instance.setMetadata(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder addMetadata(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
          copyOnWrite();
          instance.addMetadata(value);
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder addMetadata(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
          copyOnWrite();
          instance.addMetadata(index, value);
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder addMetadata(
            org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
          copyOnWrite();
          instance.addMetadata(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder addMetadata(
            int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
          copyOnWrite();
          instance.addMetadata(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder addAllMetadata(
            java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> values) {
          copyOnWrite();
          instance.addAllMetadata(values);
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder clearMetadata() {
          copyOnWrite();
          instance.clearMetadata();
          return this;
        }
        /**
         * <pre>
         * Metadata items associated with the sample. To minimize memory usage,
         * metadata items are specified only when their values change from the
         * previous sample. Items are not guaranteed to be in a particular order.
         * </pre>
         *
         * <code>repeated .metrics.CallStackProfile.MetadataItem metadata = 5;</code>
         */
        public Builder removeMetadata(int index) {
          copyOnWrite();
          instance.removeMetadata(index);
          return this;
        }

        /**
         * <pre>
         * Weight of the sample. When omitted the sample is presumed to have
         * a weight of 1.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the total number of bytes associated with
         * the StackSample record.
         * </pre>
         *
         * <code>optional int64 weight = 6;</code>
         * @return Whether the weight field is set.
         */
        @java.lang.Override
        public boolean hasWeight() {
          return instance.hasWeight();
        }
        /**
         * <pre>
         * Weight of the sample. When omitted the sample is presumed to have
         * a weight of 1.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the total number of bytes associated with
         * the StackSample record.
         * </pre>
         *
         * <code>optional int64 weight = 6;</code>
         * @return The weight.
         */
        @java.lang.Override
        public long getWeight() {
          return instance.getWeight();
        }
        /**
         * <pre>
         * Weight of the sample. When omitted the sample is presumed to have
         * a weight of 1.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the total number of bytes associated with
         * the StackSample record.
         * </pre>
         *
         * <code>optional int64 weight = 6;</code>
         * @param value The weight to set.
         * @return This builder for chaining.
         */
        public Builder setWeight(long value) {
          copyOnWrite();
          instance.setWeight(value);
          return this;
        }
        /**
         * <pre>
         * Weight of the sample. When omitted the sample is presumed to have
         * a weight of 1.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the total number of bytes associated with
         * the StackSample record.
         * </pre>
         *
         * <code>optional int64 weight = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearWeight() {
          copyOnWrite();
          instance.clearWeight();
          return this;
        }

        /**
         * <pre>
         * Number of events associated with the sample. When omitted the default
         * value of 1 should be used.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the number of allocations associated with
         * the StackSample record. The following relation holds:
         *   allocation_size * count == weight.
         * </pre>
         *
         * <code>optional int64 count = 7 [default = 1];</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return instance.hasCount();
        }
        /**
         * <pre>
         * Number of events associated with the sample. When omitted the default
         * value of 1 should be used.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the number of allocations associated with
         * the StackSample record. The following relation holds:
         *   allocation_size * count == weight.
         * </pre>
         *
         * <code>optional int64 count = 7 [default = 1];</code>
         * @return The count.
         */
        @java.lang.Override
        public long getCount() {
          return instance.getCount();
        }
        /**
         * <pre>
         * Number of events associated with the sample. When omitted the default
         * value of 1 should be used.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the number of allocations associated with
         * the StackSample record. The following relation holds:
         *   allocation_size * count == weight.
         * </pre>
         *
         * <code>optional int64 count = 7 [default = 1];</code>
         * @param value The count to set.
         * @return This builder for chaining.
         */
        public Builder setCount(long value) {
          copyOnWrite();
          instance.setCount(value);
          return this;
        }
        /**
         * <pre>
         * Number of events associated with the sample. When omitted the default
         * value of 1 should be used.
         * Not currently used for CPU profiles.
         * For heap profiles it represents the number of allocations associated with
         * the StackSample record. The following relation holds:
         *   allocation_size * count == weight.
         * </pre>
         *
         * <code>optional int64 count = 7 [default = 1];</code>
         * @return This builder for chaining.
         */
        public Builder clearCount() {
          copyOnWrite();
          instance.clearCount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile.StackSample)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "stackIndex_",
                "sampleTimeOffsetMs_",
                "continuedWork_",
                "asyncBacktraceIndex_",
                "metadata_",
                org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.class,
                "weight_",
                "count_",
              };
              java.lang.String info =
                  "\u0001\u0007\u0000\u0001\u0001\u0007\u0007\u0000\u0001\u0000\u0001\u1004\u0000\u0002" +
                  "\u1004\u0001\u0003\u1007\u0002\u0004\u1004\u0003\u0005\u001b\u0006\u1002\u0004\u0007" +
                  "\u1002\u0005";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.CallStackProfile.StackSample)
      private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample DEFAULT_INSTANCE;
      static {
        StackSample defaultInstance = new StackSample();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          StackSample.class, defaultInstance);
      }

      public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<StackSample> PARSER;

      public static com.google.protobuf.Parser<StackSample> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int DEPRECATED_SAMPLE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> dEPRECATEDSample_;
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> getDEPRECATEDSampleList() {
      return dEPRECATEDSample_;
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.SampleOrBuilder> 
        getDEPRECATEDSampleOrBuilderList() {
      return dEPRECATEDSample_;
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public int getDEPRECATEDSampleCount() {
      return dEPRECATEDSample_.size();
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample getDEPRECATEDSample(int index) {
      return dEPRECATEDSample_.get(index);
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.SampleOrBuilder getDEPRECATEDSampleOrBuilder(
        int index) {
      return dEPRECATEDSample_.get(index);
    }
    private void ensureDEPRECATEDSampleIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> tmp = dEPRECATEDSample_;
      if (!tmp.isModifiable()) {
        dEPRECATEDSample_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void setDEPRECATEDSample(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
      value.getClass();
  ensureDEPRECATEDSampleIsMutable();
      dEPRECATEDSample_.set(index, value);
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void addDEPRECATEDSample(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
      value.getClass();
  ensureDEPRECATEDSampleIsMutable();
      dEPRECATEDSample_.add(value);
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void addDEPRECATEDSample(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
      value.getClass();
  ensureDEPRECATEDSampleIsMutable();
      dEPRECATEDSample_.add(index, value);
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void addAllDEPRECATEDSample(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> values) {
      ensureDEPRECATEDSampleIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, dEPRECATEDSample_);
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void clearDEPRECATEDSample() {
      dEPRECATEDSample_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The previous sample encoding. Deprecated 2018/08/04 in favor of
     * stack_sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
     */
    private void removeDEPRECATEDSample(int index) {
      ensureDEPRECATEDSampleIsMutable();
      dEPRECATEDSample_.remove(index);
    }

    public static final int MODULE_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> moduleId_;
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> getModuleIdList() {
      return moduleId_;
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifierOrBuilder> 
        getModuleIdOrBuilderList() {
      return moduleId_;
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    @java.lang.Override
    public int getModuleIdCount() {
      return moduleId_.size();
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier getModuleId(int index) {
      return moduleId_.get(index);
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifierOrBuilder getModuleIdOrBuilder(
        int index) {
      return moduleId_.get(index);
    }
    private void ensureModuleIdIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> tmp = moduleId_;
      if (!tmp.isModifiable()) {
        moduleId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void setModuleId(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
      value.getClass();
  ensureModuleIdIsMutable();
      moduleId_.set(index, value);
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void addModuleId(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
      value.getClass();
  ensureModuleIdIsMutable();
      moduleId_.add(value);
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void addModuleId(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
      value.getClass();
  ensureModuleIdIsMutable();
      moduleId_.add(index, value);
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void addAllModuleId(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> values) {
      ensureModuleIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, moduleId_);
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void clearModuleId() {
      moduleId_ = emptyProtobufList();
    }
    /**
     * <pre>
     * List of module ids found in this sample.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
     */
    private void removeModuleId(int index) {
      ensureModuleIdIsMutable();
      moduleId_.remove(index);
    }

    public static final int METADATA_NAME_HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.LongList metadataNameHash_;
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @return A list containing the metadataNameHash.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMetadataNameHashList() {
      return metadataNameHash_;
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @return The count of metadataNameHash.
     */
    @java.lang.Override
    public int getMetadataNameHashCount() {
      return metadataNameHash_.size();
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @param index The index of the element to return.
     * @return The metadataNameHash at the given index.
     */
    @java.lang.Override
    public long getMetadataNameHash(int index) {
      return metadataNameHash_.getLong(index);
    }
    private void ensureMetadataNameHashIsMutable() {
      com.google.protobuf.Internal.LongList tmp = metadataNameHash_;
      if (!tmp.isModifiable()) {
        metadataNameHash_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @param index The index to set the value at.
     * @param value The metadataNameHash to set.
     */
    private void setMetadataNameHash(
        int index, long value) {
      ensureMetadataNameHashIsMutable();
      metadataNameHash_.setLong(index, value);
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @param value The metadataNameHash to add.
     */
    private void addMetadataNameHash(long value) {
      ensureMetadataNameHashIsMutable();
      metadataNameHash_.addLong(value);
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     * @param values The metadataNameHash to add.
     */
    private void addAllMetadataNameHash(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureMetadataNameHashIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, metadataNameHash_);
    }
    /**
     * <pre>
     * Metadata name hashes used in this profile. Recorded global to the profile
     * to minimize per-sample memory usage.
     * </pre>
     *
     * <code>repeated fixed64 metadata_name_hash = 5;</code>
     */
    private void clearMetadataNameHash() {
      metadataNameHash_ = emptyLongList();
    }

    public static final int PROFILE_METADATA_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> profileMetadata_;
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> getProfileMetadataList() {
      return profileMetadata_;
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItemOrBuilder> 
        getProfileMetadataOrBuilderList() {
      return profileMetadata_;
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    @java.lang.Override
    public int getProfileMetadataCount() {
      return profileMetadata_.size();
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getProfileMetadata(int index) {
      return profileMetadata_.get(index);
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItemOrBuilder getProfileMetadataOrBuilder(
        int index) {
      return profileMetadata_.get(index);
    }
    private void ensureProfileMetadataIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> tmp = profileMetadata_;
      if (!tmp.isModifiable()) {
        profileMetadata_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void setProfileMetadata(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
      value.getClass();
  ensureProfileMetadataIsMutable();
      profileMetadata_.set(index, value);
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void addProfileMetadata(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
      value.getClass();
  ensureProfileMetadataIsMutable();
      profileMetadata_.add(value);
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void addProfileMetadata(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
      value.getClass();
  ensureProfileMetadataIsMutable();
      profileMetadata_.add(index, value);
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void addAllProfileMetadata(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> values) {
      ensureProfileMetadataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, profileMetadata_);
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void clearProfileMetadata() {
      profileMetadata_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Metadata global to the profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
     */
    private void removeProfileMetadata(int index) {
      ensureProfileMetadataIsMutable();
      profileMetadata_.remove(index);
    }

    public static final int ASYNC_BACKTRACE_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> asyncBacktrace_;
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> getAsyncBacktraceList() {
      return asyncBacktrace_;
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktraceOrBuilder> 
        getAsyncBacktraceOrBuilderList() {
      return asyncBacktrace_;
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    @java.lang.Override
    public int getAsyncBacktraceCount() {
      return asyncBacktrace_.size();
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace getAsyncBacktrace(int index) {
      return asyncBacktrace_.get(index);
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktraceOrBuilder getAsyncBacktraceOrBuilder(
        int index) {
      return asyncBacktrace_.get(index);
    }
    private void ensureAsyncBacktraceIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> tmp = asyncBacktrace_;
      if (!tmp.isModifiable()) {
        asyncBacktrace_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void setAsyncBacktrace(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
      value.getClass();
  ensureAsyncBacktraceIsMutable();
      asyncBacktrace_.set(index, value);
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void addAsyncBacktrace(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
      value.getClass();
  ensureAsyncBacktraceIsMutable();
      asyncBacktrace_.add(value);
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void addAsyncBacktrace(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
      value.getClass();
  ensureAsyncBacktraceIsMutable();
      asyncBacktrace_.add(index, value);
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void addAllAsyncBacktrace(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> values) {
      ensureAsyncBacktraceIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, asyncBacktrace_);
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void clearAsyncBacktrace() {
      asyncBacktrace_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The distinct async backtraces for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
     */
    private void removeAsyncBacktrace(int index) {
      ensureAsyncBacktraceIsMutable();
      asyncBacktrace_.remove(index);
    }

    public static final int STACK_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> stack_;
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> getStackList() {
      return stack_;
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackOrBuilder> 
        getStackOrBuilderList() {
      return stack_;
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    @java.lang.Override
    public int getStackCount() {
      return stack_.size();
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack getStack(int index) {
      return stack_.get(index);
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackOrBuilder getStackOrBuilder(
        int index) {
      return stack_.get(index);
    }
    private void ensureStackIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> tmp = stack_;
      if (!tmp.isModifiable()) {
        stack_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void setStack(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
      value.getClass();
  ensureStackIsMutable();
      stack_.set(index, value);
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void addStack(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
      value.getClass();
  ensureStackIsMutable();
      stack_.add(value);
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void addStack(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
      value.getClass();
  ensureStackIsMutable();
      stack_.add(index, value);
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void addAllStack(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> values) {
      ensureStackIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stack_);
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void clearStack() {
      stack_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The distinct stacks for the samples.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
     */
    private void removeStack(int index) {
      ensureStackIsMutable();
      stack_.remove(index);
    }

    public static final int STACK_SAMPLE_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> stackSample_;
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> getStackSampleList() {
      return stackSample_;
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSampleOrBuilder> 
        getStackSampleOrBuilderList() {
      return stackSample_;
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    @java.lang.Override
    public int getStackSampleCount() {
      return stackSample_.size();
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample getStackSample(int index) {
      return stackSample_.get(index);
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSampleOrBuilder getStackSampleOrBuilder(
        int index) {
      return stackSample_.get(index);
    }
    private void ensureStackSampleIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> tmp = stackSample_;
      if (!tmp.isModifiable()) {
        stackSample_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void setStackSample(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
      value.getClass();
  ensureStackSampleIsMutable();
      stackSample_.set(index, value);
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void addStackSample(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
      value.getClass();
  ensureStackSampleIsMutable();
      stackSample_.add(value);
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void addStackSample(
        int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
      value.getClass();
  ensureStackSampleIsMutable();
      stackSample_.add(index, value);
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void addAllStackSample(
        java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> values) {
      ensureStackSampleIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stackSample_);
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void clearStackSample() {
      stackSample_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The stack samples collected for this profile.
     * </pre>
     *
     * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
     */
    private void removeStackSample(int index) {
      ensureStackSampleIsMutable();
      stackSample_.remove(index);
    }

    public static final int PROFILE_START_TIME_OFFSET_MS_FIELD_NUMBER = 10;
    private long profileStartTimeOffsetMs_;
    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     * @return Whether the profileStartTimeOffsetMs field is set.
     */
    @java.lang.Override
    public boolean hasProfileStartTimeOffsetMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     * @return The profileStartTimeOffsetMs.
     */
    @java.lang.Override
    public long getProfileStartTimeOffsetMs() {
      return profileStartTimeOffsetMs_;
    }
    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     * @param value The profileStartTimeOffsetMs to set.
     */
    private void setProfileStartTimeOffsetMs(long value) {
      bitField0_ |= 0x00000001;
      profileStartTimeOffsetMs_ = value;
    }
    /**
     * <pre>
     * Time of the first sample relative to Chrome start. This value may be
     * imprecise or wrong for Windows clients without high-resolution
     * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
     * clients without high-resolution TimeTicks once we understand what they are.
     * </pre>
     *
     * <code>optional int64 profile_start_time_offset_ms = 10;</code>
     */
    private void clearProfileStartTimeOffsetMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      profileStartTimeOffsetMs_ = 0L;
    }

    public static final int PROFILE_DURATION_MS_FIELD_NUMBER = 3;
    private int profileDurationMs_;
    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     * @return Whether the profileDurationMs field is set.
     */
    @java.lang.Override
    public boolean hasProfileDurationMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     * @return The profileDurationMs.
     */
    @java.lang.Override
    public int getProfileDurationMs() {
      return profileDurationMs_;
    }
    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     * @param value The profileDurationMs to set.
     */
    private void setProfileDurationMs(int value) {
      bitField0_ |= 0x00000002;
      profileDurationMs_ = value;
    }
    /**
     * <pre>
     * Duration of this profile.
     * </pre>
     *
     * <code>optional int32 profile_duration_ms = 3;</code>
     */
    private void clearProfileDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      profileDurationMs_ = 0;
    }

    public static final int SAMPLING_PERIOD_MS_FIELD_NUMBER = 4;
    private int samplingPeriodMs_;
    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     * @return Whether the samplingPeriodMs field is set.
     */
    @java.lang.Override
    public boolean hasSamplingPeriodMs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     * @return The samplingPeriodMs.
     */
    @java.lang.Override
    public int getSamplingPeriodMs() {
      return samplingPeriodMs_;
    }
    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     * @param value The samplingPeriodMs to set.
     */
    private void setSamplingPeriodMs(int value) {
      bitField0_ |= 0x00000004;
      samplingPeriodMs_ = value;
    }
    /**
     * <pre>
     * Time between samples.
     * </pre>
     *
     * <code>optional int32 sampling_period_ms = 4;</code>
     */
    private void clearSamplingPeriodMs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      samplingPeriodMs_ = 0;
    }

    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Call stack sample data for a given profiling session.
     * Next tag: 11
     * </pre>
     *
     * Protobuf type {@code metrics.CallStackProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile, Builder> implements
        // @@protoc_insertion_point(builder_implements:metrics.CallStackProfile)
        org.chromium.components.metrics.CallStackProfileProtos.CallStackProfileOrBuilder {
      // Construct using org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> getDEPRECATEDSampleList() {
        return java.util.Collections.unmodifiableList(
            instance.getDEPRECATEDSampleList());
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public int getDEPRECATEDSampleCount() {
        return instance.getDEPRECATEDSampleCount();
      }/**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Override
      @java.lang.Deprecated public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample getDEPRECATEDSample(int index) {
        return instance.getDEPRECATEDSample(index);
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setDEPRECATEDSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
        copyOnWrite();
        instance.setDEPRECATEDSample(index, value);
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setDEPRECATEDSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.Builder builderForValue) {
        copyOnWrite();
        instance.setDEPRECATEDSample(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDEPRECATEDSample(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
        copyOnWrite();
        instance.addDEPRECATEDSample(value);
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDEPRECATEDSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample value) {
        copyOnWrite();
        instance.addDEPRECATEDSample(index, value);
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDEPRECATEDSample(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.Builder builderForValue) {
        copyOnWrite();
        instance.addDEPRECATEDSample(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addDEPRECATEDSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.Builder builderForValue) {
        copyOnWrite();
        instance.addDEPRECATEDSample(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllDEPRECATEDSample(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample> values) {
        copyOnWrite();
        instance.addAllDEPRECATEDSample(values);
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearDEPRECATEDSample() {
        copyOnWrite();
        instance.clearDEPRECATEDSample();
        return this;
      }
      /**
       * <pre>
       * The previous sample encoding. Deprecated 2018/08/04 in favor of
       * stack_sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeDEPRECATEDSample(int index) {
        copyOnWrite();
        instance.removeDEPRECATEDSample(index);
        return this;
      }

      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> getModuleIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getModuleIdList());
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      @java.lang.Override
      public int getModuleIdCount() {
        return instance.getModuleIdCount();
      }/**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier getModuleId(int index) {
        return instance.getModuleId(index);
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder setModuleId(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
        copyOnWrite();
        instance.setModuleId(index, value);
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder setModuleId(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.Builder builderForValue) {
        copyOnWrite();
        instance.setModuleId(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder addModuleId(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
        copyOnWrite();
        instance.addModuleId(value);
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder addModuleId(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier value) {
        copyOnWrite();
        instance.addModuleId(index, value);
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder addModuleId(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.Builder builderForValue) {
        copyOnWrite();
        instance.addModuleId(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder addModuleId(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.Builder builderForValue) {
        copyOnWrite();
        instance.addModuleId(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder addAllModuleId(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier> values) {
        copyOnWrite();
        instance.addAllModuleId(values);
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder clearModuleId() {
        copyOnWrite();
        instance.clearModuleId();
        return this;
      }
      /**
       * <pre>
       * List of module ids found in this sample.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;</code>
       */
      public Builder removeModuleId(int index) {
        copyOnWrite();
        instance.removeModuleId(index);
        return this;
      }

      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @return A list containing the metadataNameHash.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getMetadataNameHashList() {
        return java.util.Collections.unmodifiableList(
            instance.getMetadataNameHashList());
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @return The count of metadataNameHash.
       */
      @java.lang.Override
      public int getMetadataNameHashCount() {
        return instance.getMetadataNameHashCount();
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @param index The index of the element to return.
       * @return The metadataNameHash at the given index.
       */
      @java.lang.Override
      public long getMetadataNameHash(int index) {
        return instance.getMetadataNameHash(index);
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @param value The metadataNameHash to set.
       * @return This builder for chaining.
       */
      public Builder setMetadataNameHash(
          int index, long value) {
        copyOnWrite();
        instance.setMetadataNameHash(index, value);
        return this;
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @param value The metadataNameHash to add.
       * @return This builder for chaining.
       */
      public Builder addMetadataNameHash(long value) {
        copyOnWrite();
        instance.addMetadataNameHash(value);
        return this;
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @param values The metadataNameHash to add.
       * @return This builder for chaining.
       */
      public Builder addAllMetadataNameHash(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllMetadataNameHash(values);
        return this;
      }
      /**
       * <pre>
       * Metadata name hashes used in this profile. Recorded global to the profile
       * to minimize per-sample memory usage.
       * </pre>
       *
       * <code>repeated fixed64 metadata_name_hash = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetadataNameHash() {
        copyOnWrite();
        instance.clearMetadataNameHash();
        return this;
      }

      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> getProfileMetadataList() {
        return java.util.Collections.unmodifiableList(
            instance.getProfileMetadataList());
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      @java.lang.Override
      public int getProfileMetadataCount() {
        return instance.getProfileMetadataCount();
      }/**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem getProfileMetadata(int index) {
        return instance.getProfileMetadata(index);
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder setProfileMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        copyOnWrite();
        instance.setProfileMetadata(index, value);
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder setProfileMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
        copyOnWrite();
        instance.setProfileMetadata(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder addProfileMetadata(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        copyOnWrite();
        instance.addProfileMetadata(value);
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder addProfileMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem value) {
        copyOnWrite();
        instance.addProfileMetadata(index, value);
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder addProfileMetadata(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
        copyOnWrite();
        instance.addProfileMetadata(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder addProfileMetadata(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.Builder builderForValue) {
        copyOnWrite();
        instance.addProfileMetadata(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder addAllProfileMetadata(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem> values) {
        copyOnWrite();
        instance.addAllProfileMetadata(values);
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder clearProfileMetadata() {
        copyOnWrite();
        instance.clearProfileMetadata();
        return this;
      }
      /**
       * <pre>
       * Metadata global to the profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;</code>
       */
      public Builder removeProfileMetadata(int index) {
        copyOnWrite();
        instance.removeProfileMetadata(index);
        return this;
      }

      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> getAsyncBacktraceList() {
        return java.util.Collections.unmodifiableList(
            instance.getAsyncBacktraceList());
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      @java.lang.Override
      public int getAsyncBacktraceCount() {
        return instance.getAsyncBacktraceCount();
      }/**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace getAsyncBacktrace(int index) {
        return instance.getAsyncBacktrace(index);
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder setAsyncBacktrace(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
        copyOnWrite();
        instance.setAsyncBacktrace(index, value);
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder setAsyncBacktrace(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.Builder builderForValue) {
        copyOnWrite();
        instance.setAsyncBacktrace(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder addAsyncBacktrace(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
        copyOnWrite();
        instance.addAsyncBacktrace(value);
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder addAsyncBacktrace(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace value) {
        copyOnWrite();
        instance.addAsyncBacktrace(index, value);
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder addAsyncBacktrace(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.Builder builderForValue) {
        copyOnWrite();
        instance.addAsyncBacktrace(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder addAsyncBacktrace(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.Builder builderForValue) {
        copyOnWrite();
        instance.addAsyncBacktrace(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder addAllAsyncBacktrace(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace> values) {
        copyOnWrite();
        instance.addAllAsyncBacktrace(values);
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder clearAsyncBacktrace() {
        copyOnWrite();
        instance.clearAsyncBacktrace();
        return this;
      }
      /**
       * <pre>
       * The distinct async backtraces for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;</code>
       */
      public Builder removeAsyncBacktrace(int index) {
        copyOnWrite();
        instance.removeAsyncBacktrace(index);
        return this;
      }

      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> getStackList() {
        return java.util.Collections.unmodifiableList(
            instance.getStackList());
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      @java.lang.Override
      public int getStackCount() {
        return instance.getStackCount();
      }/**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack getStack(int index) {
        return instance.getStack(index);
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder setStack(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
        copyOnWrite();
        instance.setStack(index, value);
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder setStack(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.Builder builderForValue) {
        copyOnWrite();
        instance.setStack(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder addStack(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
        copyOnWrite();
        instance.addStack(value);
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder addStack(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack value) {
        copyOnWrite();
        instance.addStack(index, value);
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder addStack(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.Builder builderForValue) {
        copyOnWrite();
        instance.addStack(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder addStack(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.Builder builderForValue) {
        copyOnWrite();
        instance.addStack(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder addAllStack(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack> values) {
        copyOnWrite();
        instance.addAllStack(values);
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder clearStack() {
        copyOnWrite();
        instance.clearStack();
        return this;
      }
      /**
       * <pre>
       * The distinct stacks for the samples.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.Stack stack = 8;</code>
       */
      public Builder removeStack(int index) {
        copyOnWrite();
        instance.removeStack(index);
        return this;
      }

      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> getStackSampleList() {
        return java.util.Collections.unmodifiableList(
            instance.getStackSampleList());
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      @java.lang.Override
      public int getStackSampleCount() {
        return instance.getStackSampleCount();
      }/**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample getStackSample(int index) {
        return instance.getStackSample(index);
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder setStackSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
        copyOnWrite();
        instance.setStackSample(index, value);
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder setStackSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.Builder builderForValue) {
        copyOnWrite();
        instance.setStackSample(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder addStackSample(org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
        copyOnWrite();
        instance.addStackSample(value);
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder addStackSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample value) {
        copyOnWrite();
        instance.addStackSample(index, value);
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder addStackSample(
          org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.Builder builderForValue) {
        copyOnWrite();
        instance.addStackSample(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder addStackSample(
          int index, org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.Builder builderForValue) {
        copyOnWrite();
        instance.addStackSample(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder addAllStackSample(
          java.lang.Iterable<? extends org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample> values) {
        copyOnWrite();
        instance.addAllStackSample(values);
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder clearStackSample() {
        copyOnWrite();
        instance.clearStackSample();
        return this;
      }
      /**
       * <pre>
       * The stack samples collected for this profile.
       * </pre>
       *
       * <code>repeated .metrics.CallStackProfile.StackSample stack_sample = 9;</code>
       */
      public Builder removeStackSample(int index) {
        copyOnWrite();
        instance.removeStackSample(index);
        return this;
      }

      /**
       * <pre>
       * Time of the first sample relative to Chrome start. This value may be
       * imprecise or wrong for Windows clients without high-resolution
       * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
       * clients without high-resolution TimeTicks once we understand what they are.
       * </pre>
       *
       * <code>optional int64 profile_start_time_offset_ms = 10;</code>
       * @return Whether the profileStartTimeOffsetMs field is set.
       */
      @java.lang.Override
      public boolean hasProfileStartTimeOffsetMs() {
        return instance.hasProfileStartTimeOffsetMs();
      }
      /**
       * <pre>
       * Time of the first sample relative to Chrome start. This value may be
       * imprecise or wrong for Windows clients without high-resolution
       * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
       * clients without high-resolution TimeTicks once we understand what they are.
       * </pre>
       *
       * <code>optional int64 profile_start_time_offset_ms = 10;</code>
       * @return The profileStartTimeOffsetMs.
       */
      @java.lang.Override
      public long getProfileStartTimeOffsetMs() {
        return instance.getProfileStartTimeOffsetMs();
      }
      /**
       * <pre>
       * Time of the first sample relative to Chrome start. This value may be
       * imprecise or wrong for Windows clients without high-resolution
       * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
       * clients without high-resolution TimeTicks once we understand what they are.
       * </pre>
       *
       * <code>optional int64 profile_start_time_offset_ms = 10;</code>
       * @param value The profileStartTimeOffsetMs to set.
       * @return This builder for chaining.
       */
      public Builder setProfileStartTimeOffsetMs(long value) {
        copyOnWrite();
        instance.setProfileStartTimeOffsetMs(value);
        return this;
      }
      /**
       * <pre>
       * Time of the first sample relative to Chrome start. This value may be
       * imprecise or wrong for Windows clients without high-resolution
       * TimeTicks. TODO(wittman): Clarify the actual properties of this value for
       * clients without high-resolution TimeTicks once we understand what they are.
       * </pre>
       *
       * <code>optional int64 profile_start_time_offset_ms = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearProfileStartTimeOffsetMs() {
        copyOnWrite();
        instance.clearProfileStartTimeOffsetMs();
        return this;
      }

      /**
       * <pre>
       * Duration of this profile.
       * </pre>
       *
       * <code>optional int32 profile_duration_ms = 3;</code>
       * @return Whether the profileDurationMs field is set.
       */
      @java.lang.Override
      public boolean hasProfileDurationMs() {
        return instance.hasProfileDurationMs();
      }
      /**
       * <pre>
       * Duration of this profile.
       * </pre>
       *
       * <code>optional int32 profile_duration_ms = 3;</code>
       * @return The profileDurationMs.
       */
      @java.lang.Override
      public int getProfileDurationMs() {
        return instance.getProfileDurationMs();
      }
      /**
       * <pre>
       * Duration of this profile.
       * </pre>
       *
       * <code>optional int32 profile_duration_ms = 3;</code>
       * @param value The profileDurationMs to set.
       * @return This builder for chaining.
       */
      public Builder setProfileDurationMs(int value) {
        copyOnWrite();
        instance.setProfileDurationMs(value);
        return this;
      }
      /**
       * <pre>
       * Duration of this profile.
       * </pre>
       *
       * <code>optional int32 profile_duration_ms = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProfileDurationMs() {
        copyOnWrite();
        instance.clearProfileDurationMs();
        return this;
      }

      /**
       * <pre>
       * Time between samples.
       * </pre>
       *
       * <code>optional int32 sampling_period_ms = 4;</code>
       * @return Whether the samplingPeriodMs field is set.
       */
      @java.lang.Override
      public boolean hasSamplingPeriodMs() {
        return instance.hasSamplingPeriodMs();
      }
      /**
       * <pre>
       * Time between samples.
       * </pre>
       *
       * <code>optional int32 sampling_period_ms = 4;</code>
       * @return The samplingPeriodMs.
       */
      @java.lang.Override
      public int getSamplingPeriodMs() {
        return instance.getSamplingPeriodMs();
      }
      /**
       * <pre>
       * Time between samples.
       * </pre>
       *
       * <code>optional int32 sampling_period_ms = 4;</code>
       * @param value The samplingPeriodMs to set.
       * @return This builder for chaining.
       */
      public Builder setSamplingPeriodMs(int value) {
        copyOnWrite();
        instance.setSamplingPeriodMs(value);
        return this;
      }
      /**
       * <pre>
       * Time between samples.
       * </pre>
       *
       * <code>optional int32 sampling_period_ms = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSamplingPeriodMs() {
        copyOnWrite();
        instance.clearSamplingPeriodMs();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:metrics.CallStackProfile)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "dEPRECATEDSample_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Sample.class,
              "moduleId_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.ModuleIdentifier.class,
              "profileDurationMs_",
              "samplingPeriodMs_",
              "metadataNameHash_",
              "profileMetadata_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.MetadataItem.class,
              "asyncBacktrace_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.AsyncBacktrace.class,
              "stack_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.Stack.class,
              "stackSample_",
              org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.StackSample.class,
              "profileStartTimeOffsetMs_",
            };
            java.lang.String info =
                "\u0001\n\u0000\u0001\u0001\n\n\u0000\u0007\u0000\u0001\u001b\u0002\u001b\u0003\u1004" +
                "\u0001\u0004\u1004\u0002\u0005\u0017\u0006\u001b\u0007\u001b\b\u001b\t\u001b\n\u1002" +
                "\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:metrics.CallStackProfile)
    private static final org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile DEFAULT_INSTANCE;
    static {
      CallStackProfile defaultInstance = new CallStackProfile();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CallStackProfile.class, defaultInstance);
    }

    public static org.chromium.components.metrics.CallStackProfileProtos.CallStackProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CallStackProfile> PARSER;

    public static com.google.protobuf.Parser<CallStackProfile> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
