// HttpAuthDynamicParams.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/network_service.mojom
//

package org.chromium.network.mojom;


public final class HttpAuthDynamicParams extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 40;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public String serverAllowlist;
    public String delegateAllowlist;
    public boolean delegateByKdcPolicy;
    public boolean negotiateDisableCnameLookup;
    public boolean enableNegotiatePort;
    public boolean ntlmV2Enabled;
    public String androidNegotiateAccountType;
    public boolean allowGssapiLibraryLoad;
    public boolean basicOverHttpEnabled;

    private HttpAuthDynamicParams(int version) {
        super(STRUCT_SIZE, version);
        this.delegateByKdcPolicy = (boolean) false;
        this.negotiateDisableCnameLookup = (boolean) false;
        this.enableNegotiatePort = (boolean) false;
        this.ntlmV2Enabled = (boolean) true;
        this.allowGssapiLibraryLoad = (boolean) true;
        this.basicOverHttpEnabled = (boolean) true;
    }

    public HttpAuthDynamicParams() {
        this(0);
    }

    public static HttpAuthDynamicParams deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static HttpAuthDynamicParams deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static HttpAuthDynamicParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        HttpAuthDynamicParams result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new HttpAuthDynamicParams(elementsOrVersion);
                {
                    
                result.serverAllowlist = decoder0.readString(8, false);
                }
                {
                    
                result.delegateAllowlist = decoder0.readString(16, false);
                }
                {
                    
                result.delegateByKdcPolicy = decoder0.readBoolean(24, 0);
                }
                {
                    
                result.negotiateDisableCnameLookup = decoder0.readBoolean(24, 1);
                }
                {
                    
                result.enableNegotiatePort = decoder0.readBoolean(24, 2);
                }
                {
                    
                result.ntlmV2Enabled = decoder0.readBoolean(24, 3);
                }
                {
                    
                result.allowGssapiLibraryLoad = decoder0.readBoolean(24, 4);
                }
                {
                    
                result.basicOverHttpEnabled = decoder0.readBoolean(24, 5);
                }
                {
                    
                result.androidNegotiateAccountType = decoder0.readString(32, false);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.serverAllowlist, 8, false);
        
        encoder0.encode(this.delegateAllowlist, 16, false);
        
        encoder0.encode(this.delegateByKdcPolicy, 24, 0);
        
        encoder0.encode(this.negotiateDisableCnameLookup, 24, 1);
        
        encoder0.encode(this.enableNegotiatePort, 24, 2);
        
        encoder0.encode(this.ntlmV2Enabled, 24, 3);
        
        encoder0.encode(this.allowGssapiLibraryLoad, 24, 4);
        
        encoder0.encode(this.basicOverHttpEnabled, 24, 5);
        
        encoder0.encode(this.androidNegotiateAccountType, 32, false);
    }
}