// TrustTokenKeyCommitmentResult.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/trust_tokens.mojom
//

package org.chromium.network.mojom;


public final class TrustTokenKeyCommitmentResult extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 40;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

    public static final class Os {
        private static final boolean IS_EXTENSIBLE = false;

        public static final int ANDROID = 0;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 0;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 0;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        public static int toKnownValue(int value) {
          return value;
        }

        private Os() {}
    }

    public static final class UnavailableLocalOperationFallback {
        private static final boolean IS_EXTENSIBLE = false;

        public static final int WEB_ISSUANCE = 0;
        public static final int RETURN_WITH_ERROR = 1;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 1;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 1;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        public static int toKnownValue(int value) {
          return value;
        }

        private UnavailableLocalOperationFallback() {}
    }
    public int protocolVersion;
    public int id;
    public int batchSize;
    public TrustTokenVerificationKey[] keys;
    public int[] requestIssuanceLocallyOn;
    public int unavailableLocalOperationFallback;

    private TrustTokenKeyCommitmentResult(int version) {
        super(STRUCT_SIZE, version);
    }

    public TrustTokenKeyCommitmentResult() {
        this(0);
    }

    public static TrustTokenKeyCommitmentResult deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static TrustTokenKeyCommitmentResult deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static TrustTokenKeyCommitmentResult decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        TrustTokenKeyCommitmentResult result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new TrustTokenKeyCommitmentResult(elementsOrVersion);
                {
                    
                result.protocolVersion = decoder0.readInt(8);
                    TrustTokenProtocolVersion.validate(result.protocolVersion);
                    result.protocolVersion = TrustTokenProtocolVersion.toKnownValue(result.protocolVersion);
                }
                {
                    
                result.id = decoder0.readInt(12);
                }
                {
                    
                result.batchSize = decoder0.readInt(16);
                }
                {
                    
                result.unavailableLocalOperationFallback = decoder0.readInt(20);
                    TrustTokenKeyCommitmentResult.UnavailableLocalOperationFallback.validate(result.unavailableLocalOperationFallback);
                    result.unavailableLocalOperationFallback = TrustTokenKeyCommitmentResult.UnavailableLocalOperationFallback.toKnownValue(result.unavailableLocalOperationFallback);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.keys = new TrustTokenVerificationKey[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.keys[i1] = TrustTokenVerificationKey.decode(decoder2);
                    }
                }
                }
                {
                    
                result.requestIssuanceLocallyOn = decoder0.readInts(32, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                {
                    for (int i1 = 0; i1 < result.requestIssuanceLocallyOn.length; ++i1) {
                        TrustTokenKeyCommitmentResult.Os.validate(result.requestIssuanceLocallyOn[i1]);
                    }
                }
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.protocolVersion, 8);
        
        encoder0.encode(this.id, 12);
        
        encoder0.encode(this.batchSize, 16);
        
        encoder0.encode(this.unavailableLocalOperationFallback, 20);
        
        if (this.keys == null) {
            encoder0.encodeNullPointer(24, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.keys.length, 24, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.keys.length; ++i0) {
                
                encoder1.encode(this.keys[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(this.requestIssuanceLocallyOn, 32, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
    }
}