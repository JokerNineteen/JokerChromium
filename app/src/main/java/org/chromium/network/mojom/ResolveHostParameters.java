// ResolveHostParameters.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/host_resolver.mojom
//

package org.chromium.network.mojom;


public final class ResolveHostParameters extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 40;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

    public static final class Source {
        private static final boolean IS_EXTENSIBLE = false;

        public static final int ANY = 0;
        public static final int SYSTEM = 1;
        public static final int DNS = 2;
        public static final int MULTICAST_DNS = 3;
        public static final int LOCAL_ONLY = 4;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 4;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 4;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        private Source() {}
    }

    public static final class CacheUsage {
        private static final boolean IS_EXTENSIBLE = false;

        public static final int ALLOWED = 0;
        public static final int STALE_ALLOWED = 1;
        public static final int DISALLOWED = 2;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 2;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 2;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        private CacheUsage() {}
    }
    public int dnsQueryType;
    public int initialPriority;
    public int source;
    public int cacheUsage;
    public org.chromium.mojo.bindings.InterfaceRequest<ResolveHostHandle> controlHandle;
    public boolean includeCanonicalName;
    public boolean loopbackOnly;
    public boolean isSpeculative;
    public int secureDnsModeOverride;

    private ResolveHostParameters(int version) {
        super(STRUCT_SIZE, version);
        this.dnsQueryType = (int) DnsQueryType.UNSPECIFIED;
        this.initialPriority = (int) RequestPriority.LOWEST;
        this.source = (int) ResolveHostParameters.Source.ANY;
        this.cacheUsage = (int) ResolveHostParameters.CacheUsage.ALLOWED;
        this.includeCanonicalName = (boolean) false;
        this.loopbackOnly = (boolean) false;
        this.isSpeculative = (boolean) false;
        this.secureDnsModeOverride = (int) OptionalSecureDnsMode.NO_OVERRIDE;
    }

    public ResolveHostParameters() {
        this(0);
    }

    public static ResolveHostParameters deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ResolveHostParameters deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ResolveHostParameters decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ResolveHostParameters result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ResolveHostParameters(elementsOrVersion);
                {
                    
                result.dnsQueryType = decoder0.readInt(8);
                    DnsQueryType.validate(result.dnsQueryType);
                }
                {
                    
                result.initialPriority = decoder0.readInt(12);
                    RequestPriority.validate(result.initialPriority);
                }
                {
                    
                result.source = decoder0.readInt(16);
                    ResolveHostParameters.Source.validate(result.source);
                }
                {
                    
                result.cacheUsage = decoder0.readInt(20);
                    ResolveHostParameters.CacheUsage.validate(result.cacheUsage);
                }
                {
                    
                result.controlHandle = decoder0.readInterfaceRequest(24, true);
                }
                {
                    
                result.includeCanonicalName = decoder0.readBoolean(28, 0);
                }
                {
                    
                result.loopbackOnly = decoder0.readBoolean(28, 1);
                }
                {
                    
                result.isSpeculative = decoder0.readBoolean(28, 2);
                }
                {
                    
                result.secureDnsModeOverride = decoder0.readInt(32);
                    OptionalSecureDnsMode.validate(result.secureDnsModeOverride);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.dnsQueryType, 8);
        
        encoder0.encode(this.initialPriority, 12);
        
        encoder0.encode(this.source, 16);
        
        encoder0.encode(this.cacheUsage, 20);
        
        encoder0.encode(this.controlHandle, 24, true);
        
        encoder0.encode(this.includeCanonicalName, 28, 0);
        
        encoder0.encode(this.loopbackOnly, 28, 1);
        
        encoder0.encode(this.isSpeculative, 28, 2);
        
        encoder0.encode(this.secureDnsModeOverride, 32);
    }
}