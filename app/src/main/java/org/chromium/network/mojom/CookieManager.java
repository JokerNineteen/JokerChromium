// CookieManager.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/cookie_manager.mojom
//

package org.chromium.network.mojom;


public interface CookieManager extends org.chromium.mojo.bindings.Interface {



    public interface Proxy extends CookieManager, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<CookieManager, CookieManager.Proxy> MANAGER = CookieManager_Internal.MANAGER;


    void getAllCookies(

GetAllCookiesResponse callback);

    interface GetAllCookiesResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<CanonicalCookie[]> { }



    void getAllCookiesWithAccessSemantics(

GetAllCookiesWithAccessSemanticsResponse callback);

    interface GetAllCookiesWithAccessSemanticsResponse extends org.chromium.mojo.bindings.Callbacks.Callback2<CanonicalCookie[], int[]> { }



    void getCookieList(
org.chromium.url.mojom.Url url, CookieOptions cookieOptions, 
GetCookieListResponse callback);

    interface GetCookieListResponse extends org.chromium.mojo.bindings.Callbacks.Callback2<CookieWithAccessResult[], CookieWithAccessResult[]> { }



    void setCanonicalCookie(
CanonicalCookie cookie, org.chromium.url.mojom.Url sourceUrl, CookieOptions cookieOptions, 
SetCanonicalCookieResponse callback);

    interface SetCanonicalCookieResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<CookieAccessResult> { }



    void deleteCanonicalCookie(
CanonicalCookie cookie, 
DeleteCanonicalCookieResponse callback);

    interface DeleteCanonicalCookieResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Boolean> { }



    void deleteCookies(
CookieDeletionFilter filter, 
DeleteCookiesResponse callback);

    interface DeleteCookiesResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Integer> { }



    void addCookieChangeListener(
org.chromium.url.mojom.Url url, String name, CookieChangeListener listener);



    void addGlobalChangeListener(
CookieChangeListener notificationPointer);



    void cloneInterface(
org.chromium.mojo.bindings.InterfaceRequest<CookieManager> newInterface);



    void flushCookieStore(

FlushCookieStoreResponse callback);

    interface FlushCookieStoreResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void allowFileSchemeCookies(
boolean allow, 
AllowFileSchemeCookiesResponse callback);

    interface AllowFileSchemeCookiesResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Boolean> { }



    void setContentSettings(
org.chromium.content_settings.mojom.ContentSettingPatternSource[] settings);



    void setForceKeepSessionState(
);



    void blockThirdPartyCookies(
boolean block);



    void setContentSettingsForLegacyCookieAccess(
org.chromium.content_settings.mojom.ContentSettingPatternSource[] settings);



    void setStorageAccessGrantSettings(
org.chromium.content_settings.mojom.ContentSettingPatternSource[] settings, 
SetStorageAccessGrantSettingsResponse callback);

    interface SetStorageAccessGrantSettingsResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }


}
