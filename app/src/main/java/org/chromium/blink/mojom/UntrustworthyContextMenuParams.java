// UntrustworthyContextMenuParams.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/context_menu/context_menu.mojom
//

package org.chromium.blink.mojom;


public final class UntrustworthyContextMenuParams extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 184;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(184, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public int mediaType;
    public int x;
    public int y;
    public org.chromium.url.mojom.Url linkUrl;
    public org.chromium.mojo_base.mojom.String16 linkText;
    public Impression impression;
    public org.chromium.url.mojom.Url unfilteredLinkUrl;
    public org.chromium.url.mojom.Url srcUrl;
    public boolean hasImageContents;
    public int mediaFlags;
    public org.chromium.mojo_base.mojom.String16 selectionText;
    public org.chromium.mojo_base.mojom.String16 titleText;
    public org.chromium.mojo_base.mojom.String16 altText;
    public org.chromium.mojo_base.mojom.String16 suggestedFilename;
    public org.chromium.mojo_base.mojom.String16 misspelledWord;
    public org.chromium.mojo_base.mojom.String16[] dictionarySuggestions;
    public boolean spellcheckEnabled;
    public boolean isEditable;
    public int writingDirectionDefault;
    public int writingDirectionLeftToRight;
    public int writingDirectionRightToLeft;
    public int editFlags;
    public String frameCharset;
    public int referrerPolicy;
    public org.chromium.url.mojom.Url linkFollowed;
    public CustomContextMenuItem[] customItems;
    public int sourceType;
    public int inputFieldType;
    public org.chromium.gfx.mojom.Rect selectionRect;
    public int selectionStartOffset;

    private UntrustworthyContextMenuParams(int version) {
        super(STRUCT_SIZE, version);
    }

    public UntrustworthyContextMenuParams() {
        this(0);
    }

    public static UntrustworthyContextMenuParams deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static UntrustworthyContextMenuParams deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static UntrustworthyContextMenuParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        UntrustworthyContextMenuParams result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new UntrustworthyContextMenuParams(elementsOrVersion);
                {
                    
                result.mediaType = decoder0.readInt(8);
                    ContextMenuDataMediaType.validate(result.mediaType);
                    result.mediaType = ContextMenuDataMediaType.toKnownValue(result.mediaType);
                }
                {
                    
                result.x = decoder0.readInt(12);
                }
                {
                    
                result.y = decoder0.readInt(16);
                }
                {
                    
                result.hasImageContents = decoder0.readBoolean(20, 0);
                }
                {
                    
                result.spellcheckEnabled = decoder0.readBoolean(20, 1);
                }
                {
                    
                result.isEditable = decoder0.readBoolean(20, 2);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                result.linkUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, false);
                result.linkText = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, true);
                result.impression = Impression.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, false);
                result.unfilteredLinkUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, false);
                result.srcUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                result.mediaFlags = decoder0.readInt(64);
                }
                {
                    
                result.writingDirectionDefault = decoder0.readInt(68);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, false);
                result.selectionText = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, false);
                result.titleText = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(88, false);
                result.altText = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(96, false);
                result.suggestedFilename = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(104, false);
                result.misspelledWord = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(112, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.dictionarySuggestions = new org.chromium.mojo_base.mojom.String16[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.dictionarySuggestions[i1] = org.chromium.mojo_base.mojom.String16.decode(decoder2);
                    }
                }
                }
                {
                    
                result.writingDirectionLeftToRight = decoder0.readInt(120);
                }
                {
                    
                result.writingDirectionRightToLeft = decoder0.readInt(124);
                }
                {
                    
                result.editFlags = decoder0.readInt(128);
                }
                {
                    
                result.referrerPolicy = decoder0.readInt(132);
                    org.chromium.network.mojom.ReferrerPolicy.validate(result.referrerPolicy);
                    result.referrerPolicy = org.chromium.network.mojom.ReferrerPolicy.toKnownValue(result.referrerPolicy);
                }
                {
                    
                result.frameCharset = decoder0.readString(136, false);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(144, false);
                result.linkFollowed = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(152, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.customItems = new CustomContextMenuItem[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.customItems[i1] = CustomContextMenuItem.decode(decoder2);
                    }
                }
                }
                {
                    
                result.sourceType = decoder0.readInt(160);
                    org.chromium.ui.mojom.MenuSourceType.validate(result.sourceType);
                    result.sourceType = org.chromium.ui.mojom.MenuSourceType.toKnownValue(result.sourceType);
                }
                {
                    
                result.inputFieldType = decoder0.readInt(164);
                    ContextMenuDataInputFieldType.validate(result.inputFieldType);
                    result.inputFieldType = ContextMenuDataInputFieldType.toKnownValue(result.inputFieldType);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(168, false);
                result.selectionRect = org.chromium.gfx.mojom.Rect.decode(decoder1);
                }
                {
                    
                result.selectionStartOffset = decoder0.readInt(176);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.mediaType, 8);
        
        encoder0.encode(this.x, 12);
        
        encoder0.encode(this.y, 16);
        
        encoder0.encode(this.hasImageContents, 20, 0);
        
        encoder0.encode(this.spellcheckEnabled, 20, 1);
        
        encoder0.encode(this.isEditable, 20, 2);
        
        encoder0.encode(this.linkUrl, 24, false);
        
        encoder0.encode(this.linkText, 32, false);
        
        encoder0.encode(this.impression, 40, true);
        
        encoder0.encode(this.unfilteredLinkUrl, 48, false);
        
        encoder0.encode(this.srcUrl, 56, false);
        
        encoder0.encode(this.mediaFlags, 64);
        
        encoder0.encode(this.writingDirectionDefault, 68);
        
        encoder0.encode(this.selectionText, 72, false);
        
        encoder0.encode(this.titleText, 80, false);
        
        encoder0.encode(this.altText, 88, false);
        
        encoder0.encode(this.suggestedFilename, 96, false);
        
        encoder0.encode(this.misspelledWord, 104, false);
        
        if (this.dictionarySuggestions == null) {
            encoder0.encodeNullPointer(112, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.dictionarySuggestions.length, 112, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.dictionarySuggestions.length; ++i0) {
                
                encoder1.encode(this.dictionarySuggestions[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(this.writingDirectionLeftToRight, 120);
        
        encoder0.encode(this.writingDirectionRightToLeft, 124);
        
        encoder0.encode(this.editFlags, 128);
        
        encoder0.encode(this.referrerPolicy, 132);
        
        encoder0.encode(this.frameCharset, 136, false);
        
        encoder0.encode(this.linkFollowed, 144, false);
        
        if (this.customItems == null) {
            encoder0.encodeNullPointer(152, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.customItems.length, 152, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.customItems.length; ++i0) {
                
                encoder1.encode(this.customItems[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(this.sourceType, 160);
        
        encoder0.encode(this.inputFieldType, 164);
        
        encoder0.encode(this.selectionRect, 168, false);
        
        encoder0.encode(this.selectionStartOffset, 176);
    }
}