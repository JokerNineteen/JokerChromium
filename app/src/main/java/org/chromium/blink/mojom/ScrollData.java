// ScrollData.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/input/input_handler.mojom
//

package org.chromium.blink.mojom;


public final class ScrollData extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 40;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public float deltaX;
    public float deltaY;
    public int deltaUnits;
    public boolean targetViewport;
    public int inertialPhase;
    public boolean synthetic;
    public int pointerCount;
    public boolean cursorControl;
    public ScrollUpdate updateDetails;

    private ScrollData(int version) {
        super(STRUCT_SIZE, version);
    }

    public ScrollData() {
        this(0);
    }

    public static ScrollData deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ScrollData deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ScrollData decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ScrollData result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ScrollData(elementsOrVersion);
                {
                    
                result.deltaX = decoder0.readFloat(8);
                }
                {
                    
                result.deltaY = decoder0.readFloat(12);
                }
                {
                    
                result.deltaUnits = decoder0.readInt(16);
                    org.chromium.ui.mojom.ScrollGranularity.validate(result.deltaUnits);
                }
                {
                    
                result.targetViewport = decoder0.readBoolean(20, 0);
                }
                {
                    
                result.synthetic = decoder0.readBoolean(20, 1);
                }
                {
                    
                result.cursorControl = decoder0.readBoolean(20, 2);
                }
                {
                    
                result.inertialPhase = decoder0.readInt(24);
                    InertialPhaseState.validate(result.inertialPhase);
                }
                {
                    
                result.pointerCount = decoder0.readInt(28);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, true);
                result.updateDetails = ScrollUpdate.decode(decoder1);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.deltaX, 8);
        
        encoder0.encode(this.deltaY, 12);
        
        encoder0.encode(this.deltaUnits, 16);
        
        encoder0.encode(this.targetViewport, 20, 0);
        
        encoder0.encode(this.synthetic, 20, 1);
        
        encoder0.encode(this.cursorControl, 20, 2);
        
        encoder0.encode(this.inertialPhase, 24);
        
        encoder0.encode(this.pointerCount, 28);
        
        encoder0.encode(this.updateDetails, 32, true);
    }
}