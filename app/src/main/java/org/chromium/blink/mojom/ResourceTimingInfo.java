// ResourceTimingInfo.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/timing/resource_timing.mojom
//

package org.chromium.blink.mojom;


public final class ResourceTimingInfo extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 112;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(112, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public String name;
    public org.chromium.mojo_base.mojom.TimeTicks startTime;
    public String alpnNegotiatedProtocol;
    public String connectionInfo;
    public org.chromium.network.mojom.LoadTimingInfo timing;
    public org.chromium.mojo_base.mojom.TimeTicks lastRedirectEndTime;
    public org.chromium.mojo_base.mojom.TimeTicks responseEnd;
    public int contextType;
    public int requestDestination;
    public long transferSize;
    public long encodedBodySize;
    public long decodedBodySize;
    public boolean didReuseConnection;
    public boolean isSecureContext;
    public boolean allowTimingDetails;
    public boolean allowRedirectDetails;
    public boolean allowNegativeValues;
    public ServerTimingInfo[] serverTiming;

    private ResourceTimingInfo(int version) {
        super(STRUCT_SIZE, version);
    }

    public ResourceTimingInfo() {
        this(0);
    }

    public static ResourceTimingInfo deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ResourceTimingInfo deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ResourceTimingInfo decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ResourceTimingInfo result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ResourceTimingInfo(elementsOrVersion);
                {
                    
                result.name = decoder0.readString(8, false);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                result.startTime = org.chromium.mojo_base.mojom.TimeTicks.decode(decoder1);
                }
                {
                    
                result.alpnNegotiatedProtocol = decoder0.readString(24, false);
                }
                {
                    
                result.connectionInfo = decoder0.readString(32, false);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, true);
                result.timing = org.chromium.network.mojom.LoadTimingInfo.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, false);
                result.lastRedirectEndTime = org.chromium.mojo_base.mojom.TimeTicks.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, false);
                result.responseEnd = org.chromium.mojo_base.mojom.TimeTicks.decode(decoder1);
                }
                {
                    
                result.contextType = decoder0.readInt(64);
                    RequestContextType.validate(result.contextType);
                }
                {
                    
                result.requestDestination = decoder0.readInt(68);
                    org.chromium.network.mojom.RequestDestination.validate(result.requestDestination);
                }
                {
                    
                result.transferSize = decoder0.readLong(72);
                }
                {
                    
                result.encodedBodySize = decoder0.readLong(80);
                }
                {
                    
                result.decodedBodySize = decoder0.readLong(88);
                }
                {
                    
                result.didReuseConnection = decoder0.readBoolean(96, 0);
                }
                {
                    
                result.isSecureContext = decoder0.readBoolean(96, 1);
                }
                {
                    
                result.allowTimingDetails = decoder0.readBoolean(96, 2);
                }
                {
                    
                result.allowRedirectDetails = decoder0.readBoolean(96, 3);
                }
                {
                    
                result.allowNegativeValues = decoder0.readBoolean(96, 4);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(104, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.serverTiming = new ServerTimingInfo[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.serverTiming[i1] = ServerTimingInfo.decode(decoder2);
                    }
                }
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.name, 8, false);
        
        encoder0.encode(this.startTime, 16, false);
        
        encoder0.encode(this.alpnNegotiatedProtocol, 24, false);
        
        encoder0.encode(this.connectionInfo, 32, false);
        
        encoder0.encode(this.timing, 40, true);
        
        encoder0.encode(this.lastRedirectEndTime, 48, false);
        
        encoder0.encode(this.responseEnd, 56, false);
        
        encoder0.encode(this.contextType, 64);
        
        encoder0.encode(this.requestDestination, 68);
        
        encoder0.encode(this.transferSize, 72);
        
        encoder0.encode(this.encodedBodySize, 80);
        
        encoder0.encode(this.decodedBodySize, 88);
        
        encoder0.encode(this.didReuseConnection, 96, 0);
        
        encoder0.encode(this.isSecureContext, 96, 1);
        
        encoder0.encode(this.allowTimingDetails, 96, 2);
        
        encoder0.encode(this.allowRedirectDetails, 96, 3);
        
        encoder0.encode(this.allowNegativeValues, 96, 4);
        
        if (this.serverTiming == null) {
            encoder0.encodeNullPointer(104, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.serverTiming.length, 104, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.serverTiming.length; ++i0) {
                
                encoder1.encode(this.serverTiming[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
    }
}