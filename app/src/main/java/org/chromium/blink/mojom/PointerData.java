// PointerData.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/input/input_handler.mojom
//

package org.chromium.blink.mojom;


public final class PointerData extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 80;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(80, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public int pointerId;
    public float force;
    public int tiltX;
    public int tiltY;
    public float tangentialPressure;
    public int twist;
    public int button;
    public int pointerType;
    public int movementX;
    public int movementY;
    public boolean isRawMovementEvent;
    public org.chromium.gfx.mojom.PointF widgetPosition;
    public org.chromium.gfx.mojom.PointF screenPosition;
    public MouseData mouseData;

    private PointerData(int version) {
        super(STRUCT_SIZE, version);
    }

    public PointerData() {
        this(0);
    }

    public static PointerData deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static PointerData deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static PointerData decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        PointerData result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new PointerData(elementsOrVersion);
                {
                    
                result.pointerId = decoder0.readInt(8);
                }
                {
                    
                result.force = decoder0.readFloat(12);
                }
                {
                    
                result.tiltX = decoder0.readInt(16);
                }
                {
                    
                result.tiltY = decoder0.readInt(20);
                }
                {
                    
                result.tangentialPressure = decoder0.readFloat(24);
                }
                {
                    
                result.twist = decoder0.readInt(28);
                }
                {
                    
                result.button = decoder0.readInt(32);
                    Button.validate(result.button);
                }
                {
                    
                result.pointerType = decoder0.readInt(36);
                    org.chromium.ui.mojom.EventPointerType.validate(result.pointerType);
                }
                {
                    
                result.movementX = decoder0.readInt(40);
                }
                {
                    
                result.movementY = decoder0.readInt(44);
                }
                {
                    
                result.isRawMovementEvent = decoder0.readBoolean(48, 0);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, false);
                result.widgetPosition = org.chromium.gfx.mojom.PointF.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(64, false);
                result.screenPosition = org.chromium.gfx.mojom.PointF.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, true);
                result.mouseData = MouseData.decode(decoder1);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.pointerId, 8);
        
        encoder0.encode(this.force, 12);
        
        encoder0.encode(this.tiltX, 16);
        
        encoder0.encode(this.tiltY, 20);
        
        encoder0.encode(this.tangentialPressure, 24);
        
        encoder0.encode(this.twist, 28);
        
        encoder0.encode(this.button, 32);
        
        encoder0.encode(this.pointerType, 36);
        
        encoder0.encode(this.movementX, 40);
        
        encoder0.encode(this.movementY, 44);
        
        encoder0.encode(this.isRawMovementEvent, 48, 0);
        
        encoder0.encode(this.widgetPosition, 56, false);
        
        encoder0.encode(this.screenPosition, 64, false);
        
        encoder0.encode(this.mouseData, 72, true);
    }
}