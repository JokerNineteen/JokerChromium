// WidgetHost_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/page/widget.mojom
//

package org.chromium.blink.mojom;


class WidgetHost_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<WidgetHost, WidgetHost.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<WidgetHost, WidgetHost.Proxy>() {

        @Override
        public String getName() {
            return "blink.mojom.WidgetHost";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, WidgetHost impl) {
            return new Stub(core, impl);
        }

        @Override
        public WidgetHost[] buildArray(int size) {
          return new WidgetHost[size];
        }
    };


    private static final int SET_CURSOR_ORDINAL = 0;

    private static final int SET_TOOL_TIP_TEXT_ORDINAL = 1;

    private static final int TEXT_INPUT_STATE_CHANGED_ORDINAL = 2;

    private static final int SELECTION_BOUNDS_CHANGED_ORDINAL = 3;

    private static final int CREATE_FRAME_SINK_ORDINAL = 4;

    private static final int REGISTER_RENDER_FRAME_METADATA_OBSERVER_ORDINAL = 5;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements WidgetHost.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void setCursor(
org.chromium.ui.mojom.Cursor cursor) {

            WidgetHostSetCursorParams _message = new WidgetHostSetCursorParams();

            _message.cursor = cursor;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_CURSOR_ORDINAL)));

        }


        @Override
        public void setToolTipText(
org.chromium.mojo_base.mojom.String16 tooltipText, int textDirectionHint) {

            WidgetHostSetToolTipTextParams _message = new WidgetHostSetToolTipTextParams();

            _message.tooltipText = tooltipText;

            _message.textDirectionHint = textDirectionHint;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_TOOL_TIP_TEXT_ORDINAL)));

        }


        @Override
        public void textInputStateChanged(
org.chromium.ui.mojom.TextInputState state) {

            WidgetHostTextInputStateChangedParams _message = new WidgetHostTextInputStateChangedParams();

            _message.state = state;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(TEXT_INPUT_STATE_CHANGED_ORDINAL)));

        }


        @Override
        public void selectionBoundsChanged(
org.chromium.gfx.mojom.Rect anchorRect, int anchorDir, org.chromium.gfx.mojom.Rect focusRect, int focusDir, boolean isAnchorFirst) {

            WidgetHostSelectionBoundsChangedParams _message = new WidgetHostSelectionBoundsChangedParams();

            _message.anchorRect = anchorRect;

            _message.anchorDir = anchorDir;

            _message.focusRect = focusRect;

            _message.focusDir = focusDir;

            _message.isAnchorFirst = isAnchorFirst;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SELECTION_BOUNDS_CHANGED_ORDINAL)));

        }


        @Override
        public void createFrameSink(
org.chromium.mojo.bindings.InterfaceRequest<org.chromium.viz.mojom.CompositorFrameSink> compositorFrameSinkReceiver, org.chromium.viz.mojom.CompositorFrameSinkClient compositorFrameSinkClient) {

            WidgetHostCreateFrameSinkParams _message = new WidgetHostCreateFrameSinkParams();

            _message.compositorFrameSinkReceiver = compositorFrameSinkReceiver;

            _message.compositorFrameSinkClient = compositorFrameSinkClient;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(CREATE_FRAME_SINK_ORDINAL)));

        }


        @Override
        public void registerRenderFrameMetadataObserver(
org.chromium.mojo.bindings.InterfaceRequest<org.chromium.cc.mojom.RenderFrameMetadataObserverClient> renderFrameMetadataObserverClientReceiver, org.chromium.cc.mojom.RenderFrameMetadataObserver renderFrameMetadataObserver) {

            WidgetHostRegisterRenderFrameMetadataObserverParams _message = new WidgetHostRegisterRenderFrameMetadataObserverParams();

            _message.renderFrameMetadataObserverClientReceiver = renderFrameMetadataObserverClientReceiver;

            _message.renderFrameMetadataObserver = renderFrameMetadataObserver;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REGISTER_RENDER_FRAME_METADATA_OBSERVER_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<WidgetHost> {

        Stub(org.chromium.mojo.system.Core core, WidgetHost impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                WidgetHost_Internal.MANAGER, messageWithHeader);





                    case SET_CURSOR_ORDINAL: {

                        WidgetHostSetCursorParams data =
                                WidgetHostSetCursorParams.deserialize(messageWithHeader.getPayload());

                        getImpl().setCursor(data.cursor);
                        return true;
                    }





                    case SET_TOOL_TIP_TEXT_ORDINAL: {

                        WidgetHostSetToolTipTextParams data =
                                WidgetHostSetToolTipTextParams.deserialize(messageWithHeader.getPayload());

                        getImpl().setToolTipText(data.tooltipText, data.textDirectionHint);
                        return true;
                    }





                    case TEXT_INPUT_STATE_CHANGED_ORDINAL: {

                        WidgetHostTextInputStateChangedParams data =
                                WidgetHostTextInputStateChangedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().textInputStateChanged(data.state);
                        return true;
                    }





                    case SELECTION_BOUNDS_CHANGED_ORDINAL: {

                        WidgetHostSelectionBoundsChangedParams data =
                                WidgetHostSelectionBoundsChangedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().selectionBoundsChanged(data.anchorRect, data.anchorDir, data.focusRect, data.focusDir, data.isAnchorFirst);
                        return true;
                    }





                    case CREATE_FRAME_SINK_ORDINAL: {

                        WidgetHostCreateFrameSinkParams data =
                                WidgetHostCreateFrameSinkParams.deserialize(messageWithHeader.getPayload());

                        getImpl().createFrameSink(data.compositorFrameSinkReceiver, data.compositorFrameSinkClient);
                        return true;
                    }





                    case REGISTER_RENDER_FRAME_METADATA_OBSERVER_ORDINAL: {

                        WidgetHostRegisterRenderFrameMetadataObserverParams data =
                                WidgetHostRegisterRenderFrameMetadataObserverParams.deserialize(messageWithHeader.getPayload());

                        getImpl().registerRenderFrameMetadataObserver(data.renderFrameMetadataObserverClientReceiver, data.renderFrameMetadataObserver);
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), WidgetHost_Internal.MANAGER, messageWithHeader, receiver);














                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class WidgetHostSetCursorParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.ui.mojom.Cursor cursor;

        private WidgetHostSetCursorParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostSetCursorParams() {
            this(0);
        }

        public static WidgetHostSetCursorParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostSetCursorParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostSetCursorParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostSetCursorParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostSetCursorParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.cursor = org.chromium.ui.mojom.Cursor.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.cursor, 8, false);
        }
    }



    
    static final class WidgetHostSetToolTipTextParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.mojo_base.mojom.String16 tooltipText;
        public int textDirectionHint;

        private WidgetHostSetToolTipTextParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostSetToolTipTextParams() {
            this(0);
        }

        public static WidgetHostSetToolTipTextParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostSetToolTipTextParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostSetToolTipTextParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostSetToolTipTextParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostSetToolTipTextParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.tooltipText = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                    }
                    {
                        
                    result.textDirectionHint = decoder0.readInt(16);
                        org.chromium.mojo_base.mojom.TextDirection.validate(result.textDirectionHint);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.tooltipText, 8, false);
            
            encoder0.encode(this.textDirectionHint, 16);
        }
    }



    
    static final class WidgetHostTextInputStateChangedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.ui.mojom.TextInputState state;

        private WidgetHostTextInputStateChangedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostTextInputStateChangedParams() {
            this(0);
        }

        public static WidgetHostTextInputStateChangedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostTextInputStateChangedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostTextInputStateChangedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostTextInputStateChangedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostTextInputStateChangedParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.state = org.chromium.ui.mojom.TextInputState.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.state, 8, false);
        }
    }



    
    static final class WidgetHostSelectionBoundsChangedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 40;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.gfx.mojom.Rect anchorRect;
        public int anchorDir;
        public org.chromium.gfx.mojom.Rect focusRect;
        public int focusDir;
        public boolean isAnchorFirst;

        private WidgetHostSelectionBoundsChangedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostSelectionBoundsChangedParams() {
            this(0);
        }

        public static WidgetHostSelectionBoundsChangedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostSelectionBoundsChangedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostSelectionBoundsChangedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostSelectionBoundsChangedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostSelectionBoundsChangedParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.anchorRect = org.chromium.gfx.mojom.Rect.decode(decoder1);
                    }
                    {
                        
                    result.anchorDir = decoder0.readInt(16);
                        org.chromium.mojo_base.mojom.TextDirection.validate(result.anchorDir);
                    }
                    {
                        
                    result.focusDir = decoder0.readInt(20);
                        org.chromium.mojo_base.mojom.TextDirection.validate(result.focusDir);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                    result.focusRect = org.chromium.gfx.mojom.Rect.decode(decoder1);
                    }
                    {
                        
                    result.isAnchorFirst = decoder0.readBoolean(32, 0);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.anchorRect, 8, false);
            
            encoder0.encode(this.anchorDir, 16);
            
            encoder0.encode(this.focusDir, 20);
            
            encoder0.encode(this.focusRect, 24, false);
            
            encoder0.encode(this.isAnchorFirst, 32, 0);
        }
    }



    
    static final class WidgetHostCreateFrameSinkParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.mojo.bindings.InterfaceRequest<org.chromium.viz.mojom.CompositorFrameSink> compositorFrameSinkReceiver;
        public org.chromium.viz.mojom.CompositorFrameSinkClient compositorFrameSinkClient;

        private WidgetHostCreateFrameSinkParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostCreateFrameSinkParams() {
            this(0);
        }

        public static WidgetHostCreateFrameSinkParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostCreateFrameSinkParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostCreateFrameSinkParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostCreateFrameSinkParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostCreateFrameSinkParams(elementsOrVersion);
                    {
                        
                    result.compositorFrameSinkReceiver = decoder0.readInterfaceRequest(8, false);
                    }
                    {
                        
                    result.compositorFrameSinkClient = decoder0.readServiceInterface(12, false, org.chromium.viz.mojom.CompositorFrameSinkClient.MANAGER);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.compositorFrameSinkReceiver, 8, false);
            
            encoder0.encode(this.compositorFrameSinkClient, 12, false, org.chromium.viz.mojom.CompositorFrameSinkClient.MANAGER);
        }
    }



    
    static final class WidgetHostRegisterRenderFrameMetadataObserverParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.mojo.bindings.InterfaceRequest<org.chromium.cc.mojom.RenderFrameMetadataObserverClient> renderFrameMetadataObserverClientReceiver;
        public org.chromium.cc.mojom.RenderFrameMetadataObserver renderFrameMetadataObserver;

        private WidgetHostRegisterRenderFrameMetadataObserverParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public WidgetHostRegisterRenderFrameMetadataObserverParams() {
            this(0);
        }

        public static WidgetHostRegisterRenderFrameMetadataObserverParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WidgetHostRegisterRenderFrameMetadataObserverParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static WidgetHostRegisterRenderFrameMetadataObserverParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WidgetHostRegisterRenderFrameMetadataObserverParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new WidgetHostRegisterRenderFrameMetadataObserverParams(elementsOrVersion);
                    {
                        
                    result.renderFrameMetadataObserverClientReceiver = decoder0.readInterfaceRequest(8, false);
                    }
                    {
                        
                    result.renderFrameMetadataObserver = decoder0.readServiceInterface(12, false, org.chromium.cc.mojom.RenderFrameMetadataObserver.MANAGER);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.renderFrameMetadataObserverClientReceiver, 8, false);
            
            encoder0.encode(this.renderFrameMetadataObserver, 12, false, org.chromium.cc.mojom.RenderFrameMetadataObserver.MANAGER);
        }
    }



}
