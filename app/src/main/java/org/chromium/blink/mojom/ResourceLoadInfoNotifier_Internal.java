// ResourceLoadInfoNotifier_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/loader/resource_load_info_notifier.mojom
//

package org.chromium.blink.mojom;


class ResourceLoadInfoNotifier_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<ResourceLoadInfoNotifier, ResourceLoadInfoNotifier.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<ResourceLoadInfoNotifier, ResourceLoadInfoNotifier.Proxy>() {

        @Override
        public String getName() {
            return "blink.mojom.ResourceLoadInfoNotifier";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, ResourceLoadInfoNotifier impl) {
            return new Stub(core, impl);
        }

        @Override
        public ResourceLoadInfoNotifier[] buildArray(int size) {
          return new ResourceLoadInfoNotifier[size];
        }
    };


    private static final int NOTIFY_UPDATE_USER_GESTURE_CARRYOVER_INFO_ORDINAL = 0;

    private static final int NOTIFY_RESOURCE_REDIRECT_RECEIVED_ORDINAL = 1;

    private static final int NOTIFY_RESOURCE_RESPONSE_RECEIVED_ORDINAL = 2;

    private static final int NOTIFY_RESOURCE_TRANSFER_SIZE_UPDATED_ORDINAL = 3;

    private static final int NOTIFY_RESOURCE_LOAD_COMPLETED_ORDINAL = 4;

    private static final int NOTIFY_RESOURCE_LOAD_CANCELED_ORDINAL = 5;

    private static final int CLONE_ORDINAL = 6;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements ResourceLoadInfoNotifier.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void notifyUpdateUserGestureCarryoverInfo(
) {

            ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams _message = new ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams();


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_UPDATE_USER_GESTURE_CARRYOVER_INFO_ORDINAL)));

        }


        @Override
        public void notifyResourceRedirectReceived(
org.chromium.network.mojom.UrlRequestRedirectInfo redirectInfo, org.chromium.network.mojom.UrlResponseHead redirectResponse) {

            ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams _message = new ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams();

            _message.redirectInfo = redirectInfo;

            _message.redirectResponse = redirectResponse;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_RESOURCE_REDIRECT_RECEIVED_ORDINAL)));

        }


        @Override
        public void notifyResourceResponseReceived(
long requestId, org.chromium.url.mojom.Url responseUrl, org.chromium.network.mojom.UrlResponseHead head, int requestDestination, int previewsState) {

            ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams _message = new ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams();

            _message.requestId = requestId;

            _message.responseUrl = responseUrl;

            _message.head = head;

            _message.requestDestination = requestDestination;

            _message.previewsState = previewsState;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_RESOURCE_RESPONSE_RECEIVED_ORDINAL)));

        }


        @Override
        public void notifyResourceTransferSizeUpdated(
long requestId, int transferSizeDiff) {

            ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams _message = new ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams();

            _message.requestId = requestId;

            _message.transferSizeDiff = transferSizeDiff;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_RESOURCE_TRANSFER_SIZE_UPDATED_ORDINAL)));

        }


        @Override
        public void notifyResourceLoadCompleted(
ResourceLoadInfo resourceLoadInfo, org.chromium.network.mojom.UrlLoaderCompletionStatus status) {

            ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams _message = new ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams();

            _message.resourceLoadInfo = resourceLoadInfo;

            _message.status = status;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_RESOURCE_LOAD_COMPLETED_ORDINAL)));

        }


        @Override
        public void notifyResourceLoadCanceled(
long requestId) {

            ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams _message = new ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams();

            _message.requestId = requestId;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(NOTIFY_RESOURCE_LOAD_CANCELED_ORDINAL)));

        }


        @Override
        public void clone(
org.chromium.mojo.bindings.InterfaceRequest<ResourceLoadInfoNotifier> pendingResourceLoadInfoNotifier) {

            ResourceLoadInfoNotifierCloneParams _message = new ResourceLoadInfoNotifierCloneParams();

            _message.pendingResourceLoadInfoNotifier = pendingResourceLoadInfoNotifier;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(CLONE_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<ResourceLoadInfoNotifier> {

        Stub(org.chromium.mojo.system.Core core, ResourceLoadInfoNotifier impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                ResourceLoadInfoNotifier_Internal.MANAGER, messageWithHeader);





                    case NOTIFY_UPDATE_USER_GESTURE_CARRYOVER_INFO_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyUpdateUserGestureCarryoverInfo();
                        return true;
                    }





                    case NOTIFY_RESOURCE_REDIRECT_RECEIVED_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams data =
                                ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyResourceRedirectReceived(data.redirectInfo, data.redirectResponse);
                        return true;
                    }





                    case NOTIFY_RESOURCE_RESPONSE_RECEIVED_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams data =
                                ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyResourceResponseReceived(data.requestId, data.responseUrl, data.head, data.requestDestination, data.previewsState);
                        return true;
                    }





                    case NOTIFY_RESOURCE_TRANSFER_SIZE_UPDATED_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams data =
                                ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyResourceTransferSizeUpdated(data.requestId, data.transferSizeDiff);
                        return true;
                    }





                    case NOTIFY_RESOURCE_LOAD_COMPLETED_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams data =
                                ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyResourceLoadCompleted(data.resourceLoadInfo, data.status);
                        return true;
                    }





                    case NOTIFY_RESOURCE_LOAD_CANCELED_ORDINAL: {

                        ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams data =
                                ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyResourceLoadCanceled(data.requestId);
                        return true;
                    }





                    case CLONE_ORDINAL: {

                        ResourceLoadInfoNotifierCloneParams data =
                                ResourceLoadInfoNotifierCloneParams.deserialize(messageWithHeader.getPayload());

                        getImpl().clone(data.pendingResourceLoadInfoNotifier);
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), ResourceLoadInfoNotifier_Internal.MANAGER, messageWithHeader, receiver);
















                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

        private ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyUpdateUserGestureCarryoverInfoParams(elementsOrVersion);

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        }
    }



    
    static final class ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.network.mojom.UrlRequestRedirectInfo redirectInfo;
        public org.chromium.network.mojom.UrlResponseHead redirectResponse;

        private ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyResourceRedirectReceivedParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.redirectInfo = org.chromium.network.mojom.UrlRequestRedirectInfo.decode(decoder1);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                    result.redirectResponse = org.chromium.network.mojom.UrlResponseHead.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.redirectInfo, 8, false);
            
            encoder0.encode(this.redirectResponse, 16, false);
        }
    }



    
    static final class ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 40;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public long requestId;
        public org.chromium.url.mojom.Url responseUrl;
        public org.chromium.network.mojom.UrlResponseHead head;
        public int requestDestination;
        public int previewsState;

        private ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyResourceResponseReceivedParams(elementsOrVersion);
                    {
                        
                    result.requestId = decoder0.readLong(8);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                    result.responseUrl = org.chromium.url.mojom.Url.decode(decoder1);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                    result.head = org.chromium.network.mojom.UrlResponseHead.decode(decoder1);
                    }
                    {
                        
                    result.requestDestination = decoder0.readInt(32);
                        org.chromium.network.mojom.RequestDestination.validate(result.requestDestination);
                    }
                    {
                        
                    result.previewsState = decoder0.readInt(36);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.requestId, 8);
            
            encoder0.encode(this.responseUrl, 16, false);
            
            encoder0.encode(this.head, 24, false);
            
            encoder0.encode(this.requestDestination, 32);
            
            encoder0.encode(this.previewsState, 36);
        }
    }



    
    static final class ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public long requestId;
        public int transferSizeDiff;

        private ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyResourceTransferSizeUpdatedParams(elementsOrVersion);
                    {
                        
                    result.requestId = decoder0.readLong(8);
                    }
                    {
                        
                    result.transferSizeDiff = decoder0.readInt(16);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.requestId, 8);
            
            encoder0.encode(this.transferSizeDiff, 16);
        }
    }



    
    static final class ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public ResourceLoadInfo resourceLoadInfo;
        public org.chromium.network.mojom.UrlLoaderCompletionStatus status;

        private ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyResourceLoadCompletedParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.resourceLoadInfo = ResourceLoadInfo.decode(decoder1);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                    result.status = org.chromium.network.mojom.UrlLoaderCompletionStatus.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.resourceLoadInfo, 8, false);
            
            encoder0.encode(this.status, 16, false);
        }
    }



    
    static final class ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public long requestId;

        private ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierNotifyResourceLoadCanceledParams(elementsOrVersion);
                    {
                        
                    result.requestId = decoder0.readLong(8);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.requestId, 8);
        }
    }



    
    static final class ResourceLoadInfoNotifierCloneParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.mojo.bindings.InterfaceRequest<ResourceLoadInfoNotifier> pendingResourceLoadInfoNotifier;

        private ResourceLoadInfoNotifierCloneParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public ResourceLoadInfoNotifierCloneParams() {
            this(0);
        }

        public static ResourceLoadInfoNotifierCloneParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static ResourceLoadInfoNotifierCloneParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static ResourceLoadInfoNotifierCloneParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            ResourceLoadInfoNotifierCloneParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new ResourceLoadInfoNotifierCloneParams(elementsOrVersion);
                    {
                        
                    result.pendingResourceLoadInfoNotifier = decoder0.readInterfaceRequest(8, false);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.pendingResourceLoadInfoNotifier, 8, false);
        }
    }



}
