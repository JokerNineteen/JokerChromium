// ViewState.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/page_state/page_state.mojom
//

package org.chromium.blink.mojom;


public final class ViewState extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 56;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0),new org.chromium.mojo.bindings.DataHeader(56, 1)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[1];
    public org.chromium.gfx.mojom.PointF visualViewportScrollOffset;
    public org.chromium.gfx.mojom.Point scrollOffset;
    public double pageScaleFactor;
    public org.chromium.mojo_base.mojom.String16 scrollAnchorSelector;
    public org.chromium.gfx.mojom.PointF scrollAnchorOffset;
    public long scrollAnchorSimhash;

    private ViewState(int version) {
        super(STRUCT_SIZE, version);
        this.scrollAnchorSimhash = (long) 0;
    }

    public ViewState() {
        this(1);
    }

    public static ViewState deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ViewState deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ViewState decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ViewState result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ViewState(elementsOrVersion);
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                result.visualViewportScrollOffset = org.chromium.gfx.mojom.PointF.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                result.scrollOffset = org.chromium.gfx.mojom.Point.decode(decoder1);
                }
                {
                    
                result.pageScaleFactor = decoder0.readDouble(24);
                }
            if (elementsOrVersion >= 1) {
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, true);
                result.scrollAnchorSelector = org.chromium.mojo_base.mojom.String16.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, true);
                result.scrollAnchorOffset = org.chromium.gfx.mojom.PointF.decode(decoder1);
                }
                {
                    
                result.scrollAnchorSimhash = decoder0.readLong(48);
                }
            }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.visualViewportScrollOffset, 8, false);
        
        encoder0.encode(this.scrollOffset, 16, false);
        
        encoder0.encode(this.pageScaleFactor, 24);
        
        encoder0.encode(this.scrollAnchorSelector, 32, true);
        
        encoder0.encode(this.scrollAnchorOffset, 40, true);
        
        encoder0.encode(this.scrollAnchorSimhash, 48);
    }
}