// ResourceLoadInfo.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/loader/resource_load_info.mojom
//

package org.chromium.blink.mojom;


public final class ResourceLoadInfo extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 112;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(112, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public long requestId;
    public org.chromium.url.mojom.Url finalUrl;
    public org.chromium.url.mojom.Url referrer;
    public org.chromium.url.mojom.Url originalUrl;
    public String method;
    public int requestDestination;
    public int requestPriority;
    public String mimeType;
    public boolean wasCached;
    public CommonNetworkInfo networkInfo;
    public int netError;
    public org.chromium.network.mojom.LoadTimingInfo loadTimingInfo;
    public long rawBodyBytes;
    public long totalReceivedBytes;
    public RedirectInfo[] redirectInfoChain;

    private ResourceLoadInfo(int version) {
        super(STRUCT_SIZE, version);
    }

    public ResourceLoadInfo() {
        this(0);
    }

    public static ResourceLoadInfo deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ResourceLoadInfo deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ResourceLoadInfo decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ResourceLoadInfo result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ResourceLoadInfo(elementsOrVersion);
                {
                    
                result.requestId = decoder0.readLong(8);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                result.finalUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                result.referrer = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, false);
                result.originalUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                result.method = decoder0.readString(40, false);
                }
                {
                    
                result.requestDestination = decoder0.readInt(48);
                    org.chromium.network.mojom.RequestDestination.validate(result.requestDestination);
                }
                {
                    
                result.requestPriority = decoder0.readInt(52);
                    org.chromium.network.mojom.RequestPriority.validate(result.requestPriority);
                }
                {
                    
                result.mimeType = decoder0.readString(56, false);
                }
                {
                    
                result.wasCached = decoder0.readBoolean(64, 0);
                }
                {
                    
                result.netError = decoder0.readInt(68);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, false);
                result.networkInfo = CommonNetworkInfo.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, false);
                result.loadTimingInfo = org.chromium.network.mojom.LoadTimingInfo.decode(decoder1);
                }
                {
                    
                result.rawBodyBytes = decoder0.readLong(88);
                }
                {
                    
                result.totalReceivedBytes = decoder0.readLong(96);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(104, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.redirectInfoChain = new RedirectInfo[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.redirectInfoChain[i1] = RedirectInfo.decode(decoder2);
                    }
                }
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.requestId, 8);
        
        encoder0.encode(this.finalUrl, 16, false);
        
        encoder0.encode(this.referrer, 24, false);
        
        encoder0.encode(this.originalUrl, 32, false);
        
        encoder0.encode(this.method, 40, false);
        
        encoder0.encode(this.requestDestination, 48);
        
        encoder0.encode(this.requestPriority, 52);
        
        encoder0.encode(this.mimeType, 56, false);
        
        encoder0.encode(this.wasCached, 64, 0);
        
        encoder0.encode(this.netError, 68);
        
        encoder0.encode(this.networkInfo, 72, false);
        
        encoder0.encode(this.loadTimingInfo, 80, false);
        
        encoder0.encode(this.rawBodyBytes, 88);
        
        encoder0.encode(this.totalReceivedBytes, 96);
        
        if (this.redirectInfoChain == null) {
            encoder0.encodeNullPointer(104, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.redirectInfoChain.length, 104, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.redirectInfoChain.length; ++i0) {
                
                encoder1.encode(this.redirectInfoChain[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
    }
}